<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/30/2019 1:46:31 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-110119GM22"
  DTS:CreatorName="NCS\P0500388"
  DTS:DelayValidation="True"
  DTS:DTSID="{4AF7032C-FF5E-4431-B1D1-F9E61357850E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="18441"
  DTS:ObjectName="DM_OSG_LIFE_SKILLS_QUIZ"
  DTS:PackageType="5"
  DTS:VersionBuild="136"
  DTS:VersionGUID="{E6DDB4AF-71FB-4A3A-8B44-9AC3385E4F42}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{293B964E-1CE9-4618-8010-90AA5BC07499}"
      DTS:ObjectName="DW">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::DW_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAoAyawPovPE+24/B6KkY8OQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAApQ8cFbnRLul7SfG8tWlLQAAAAAASAAACgAAAAEAAAANvXAFaJEmNcCKtpZzg5RbUYAAAAGGYpfqOtQcr0OoP6XAXnKnJ02CfdBelwFAAAAIGFpbajN4BWxEc5Rr/xlJTbgZnz</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ErrorLog]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
      DTS:ObjectName="ErrorLog">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::DW_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAoAyawPovPE+24/B6KkY8OQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACQ6jfADThLRYkZOinLuEvAAAAAAASAAACgAAAAEAAAADymQoBneBGiLUQN2zZFFzcYAAAAmlDrDxF6k2tVQHY3IVIC+RV8Fqi6oIKqFAAAADB5jUyCQqYMKBflWGLH2r5fycAg</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CF9C684-34D8-455C-8E0E-254C0A60B858}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Duplicate_Check">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{508B32B9-20AC-4DE1-AC01-CC9601BF08C1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Job_name">
      <DTS:VariableValue
        DTS:DataType="8">DM_OSG_LIFE_SKILLS_QUIZ</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05950FE5-8F70-4A32-930C-DE3A3DF1DF2F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Job_Status">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FDBED23D-B259-4469-8D0C-5038D152BF00}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JOB_STATUS_ID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7662CD6-CF1E-4041-8E09-52355127AF84}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Mandatory_constraint_Check">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C333C7D-80F0-4BBD-A273-3962BED0DE04}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Process_date">
      <DTS:VariableValue
        DTS:DataType="7">2/1/2019 2:58:47 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{49EA7B6E-6C43-40B0-BEAF-9DA76B6BFB69}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceTable">
      <DTS:VariableValue
        DTS:DataType="8">DW_EXT_LESSON_TASKS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{29CA2CAB-94A1-4886-83EB-8EB9F5321F96}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BEGIN TRANSACTION&#xA;BEGIN TRY&#xA;--------------------------------------&#xA;DECLARE @jobstatusid varchar(10)&#xA;select @jobstatusid=&quot;+ (DT_STR, 5,1252) @[User::JOB_STATUS_ID] +&quot;&#xA;&#xA;TRUNCATE TABLE TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE;&#xA;SET DATEFIRST 1;&#xA;WITH WeekNum_CTE(Acad_Year,Semester,ds,de,weeknum)&#xA;AS &#xA;(&#xA;&#x9;SELECT DISTINCT Acad_Year, Semester, DATEADD(week,1,DATEADD(day,1-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS ds, DATEADD(week,1,DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS de, 2 AS weeknum&#xA;&#x9;FROM DW_TERM_SETUP&#xA;&#x9;WHERE Qual_Type = 'DPFT'&#xA;&#x9;UNION ALL&#xA;&#x9;SELECT Acad_Year, Semester, DATEADD(week,1,ds), DATEADD(week,1,de), weeknum + 1 &#xA;&#x9;FROM WeekNum_CTE&#xA;&#x9;WHERE weeknum &lt; 30&#xA;)&#xA;INSERT INTO [dbo].[TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE]&#xA;           ([Student_ID]&#xA;           ,[Student_Name]&#xA;           ,[Acad_Yr]&#xA;           ,[Sem]&#xA;           ,[Cohort]&#xA;           ,[Module_Code]&#xA;           ,[Class_Code]&#xA;           ,[Task_Name]&#xA;           ,[Task_Deadline]&#xA;           ,[Task_Submitted_Time]&#xA;           ,[Task_Score]&#xA;           ,[Task_Status]&#xA;           ,[Quiz_Status]&#xA;           ,[Best_Quiz_Status_Overall]&#xA;           ,[weeknum]&#xA;           ,[Best_Quiz_Status_Cumulative])&#xA;SELECT lt.Student_ID, lt.Student_Name, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Class_Code, lt.Task_Name, &#xA;&#x9;lt.Task_Deadline, lt.Task_Submitted_Time, lt.Task_Score, lt.Task_Status, &#xA;&#x9;CASE lt.Quiz_Status_Rank&#xA;&#x9;&#x9;WHEN 1 THEN 'Pass'&#xA;&#x9;&#x9;WHEN 2 THEN 'Fail'&#xA;&#x9;&#x9;ELSE 'NA'&#xA;&#x9;END AS Quiz_Status, &#xA;&#x9;CASE lto.Best_Quiz_Status_Rank_Overall&#xA;&#x9;&#x9;WHEN 1 THEN 'Pass'&#xA;&#x9;&#x9;WHEN 2 THEN 'Fail'&#xA;&#x9;&#x9;ELSE 'NA'&#xA;&#x9;END AS Best_Quiz_Status_Overall, &#xA;&#x9;sw.weeknum,&#xA;&#x9;NULL AS Best_Quiz_Status_Cumulative --KIV&#xA;FROM (&#xA;&#x9;SELECT Acad_Yr, Sem, Cohort, Module_Code, Task_Name, ISNULL(Task_Submitted_Date_Max, CAST(SYSDATETIME() AS DATE)) AS Task_Submitted_Date_Max&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT Acad_Yr, Sem, Cohort, Module_Code, Task_Name, MAX(CAST(NULLIF(Task_Submitted_Time,'') AS DATE)) AS Task_Submitted_Date_Max&#xA;&#x9;&#x9;FROM DW_EXT_LESSON_TASKS lt&#xA;&#x9;&#x9;GROUP BY Acad_Yr, Sem, Cohort, Module_Code, Task_Name) loq) loq -- distinct list of quizes&#xA;INNER JOIN (&#xA;&#x9;SELECT Acad_Year, Semester, ds As weekstart, de as weekend, weeknum FROM WeekNum_CTE&#xA;&#x9;UNION ALL&#xA;&#x9;SELECT DISTINCT Acad_Year, Semester, Semester_Begin_Date AS weekstart, DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date) AS weekend, 1 AS weeknum&#xA;&#x9;FROM DW_TERM_SETUP&#xA;&#x9;WHERE Qual_Type = 'DPFT') sw -- Semester Weeks&#xA;ON loq.Acad_Yr = sw.Acad_Year&#xA;&#x9;AND loq.Sem = sw.Semester&#xA;&#x9;AND loq.Task_Submitted_Date_Max &gt;= sw.weekstart &#xA;&#x9;AND sw.weekstart &lt;= CAST(SYSDATETIME() AS date)&#xA;INNER JOIN (&#xA;&#x9;SELECT Student_ID, Student_Name, Acad_Yr, Sem, Cohort, Module_Code, Class_Code, Task_Name, &#xA;&#x9;&#x9;CAST(Task_Deadline AS datetime) AS Task_Deadline, CAST(NULLIF(Task_Submitted_Time,'') AS datetime) AS Task_Submitted_Time, Task_Score, Task_Status,&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN Task_Status IN ('Attempted','Submitted') AND &#xA;&#x9;&#x9;&#x9;&#x9;CAST(LEFT(Task_Score,CHARINDEX('/',Task_Score)-1) AS decimal(10,4)) / CAST(RIGHT(Task_Score,LEN(Task_Score)-CHARINDEX('/',Task_Score)) AS decimal) &gt;= 0.8 THEN 1 -- Pass &#xA;&#x9;&#x9;&#x9;WHEN Task_Status IN ('Attempted','Submitted') THEN 2 -- Fail&#xA;&#x9;&#x9;&#x9;ELSE 3 -- NA&#xA;&#x9;&#x9;END AS Quiz_Status_Rank&#xA;&#x9;FROM DW_EXT_LESSON_TASKS) lt -- lesson tasks with quiz status rank&#xA;ON lt.Acad_Yr = loq.Acad_Yr&#xA;&#x9;AND lt.Sem = loq.Sem&#xA;&#x9;AND lt.Cohort = loq.Cohort&#xA;&#x9;AND lt.Module_Code = loq.Module_Code&#xA;&#x9;AND lt.Task_Name = loq.Task_Name&#xA;INNER JOIN (&#xA;&#x9;SELECT Student_ID, Acad_Yr, Sem, Cohort, Module_Code, Task_Name, &#xA;&#x9;&#x9;MIN(&#xA;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;WHEN Task_Status IN ('Attempted','Submitted') AND &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(LEFT(Task_Score,CHARINDEX('/',Task_Score)-1) AS decimal(10,4)) / CAST(RIGHT(Task_Score,LEN(Task_Score)-CHARINDEX('/',Task_Score)) AS decimal) &gt;= 0.8 THEN 1 -- Pass &#xA;&#x9;&#x9;&#x9;&#x9;WHEN Task_Status IN ('Attempted','Submitted') THEN 2 -- Fail&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 3 -- NA&#xA;&#x9;&#x9;&#x9;END) AS Best_Quiz_Status_Rank_Overall&#xA;&#x9;FROM DW_EXT_LESSON_TASKS&#xA;&#x9;GROUP BY Student_ID, Acad_Yr, Sem, Cohort, Module_Code, Task_Name) lto -- lesson tasks with best overall quiz status rank&#xA;ON lt.Student_ID = lto.Student_ID&#xA;&#x9;AND lt.Acad_Yr = lto.Acad_Yr&#xA;&#x9;AND lt.Sem = lto.Sem&#xA;&#x9;AND lt.Cohort = lto.Cohort&#xA;&#x9;AND lt.Module_Code = lto.Module_Code&#xA;&#x9;AND lt.Task_Name = lto.Task_Name&#xA;ORDER BY lt.Student_ID, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Class_Code, lt.Task_Name, sw.weeknum;&#xA;&#xA;&#xA;SET DATEFIRST 1;&#xA;WITH WeekNum_CTE(Acad_Year,Semester,ds,de,weeknum)&#xA;AS &#xA;(&#xA;&#x9;SELECT DISTINCT Acad_Year, Semester, DATEADD(week,1,DATEADD(day,1-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS ds, DATEADD(week,1,DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS de, 2 AS weeknum&#xA;&#x9;FROM DW_TERM_SETUP&#xA;&#x9;WHERE Qual_Type = 'DPFT'&#xA;&#x9;UNION ALL&#xA;&#x9;SELECT Acad_Year, Semester, DATEADD(week,1,ds), DATEADD(week,1,de), weeknum + 1 &#xA;&#x9;FROM WeekNum_CTE&#xA;&#x9;WHERE weeknum &lt; 30&#xA;)&#xA;UPDATE lt&#xA;SET lt.Best_Quiz_Status_Cumulative =&#xA;&#x9;CASE ltw.Best_Quiz_Status_Rank_Cumulative&#xA;&#x9;&#x9;WHEN 1 THEN 'Pass'&#xA;&#x9;&#x9;WHEN 2 THEN 'Fail'&#xA;&#x9;&#x9;ELSE 'NA'&#xA;&#x9;END &#xA;FROM TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE lt&#xA;LEFT JOIN (&#xA;&#x9;SELECT ltw.Student_ID, ltw.Acad_Yr, ltw.Sem, ltw.Cohort, ltw.Module_Code, ltw.Task_Name, ltw.weeknum, ltw.Quiz_Status_Rank AS Best_Quiz_Status_Rank_Cumulative&#xA;&#x9;FROM (&#xA;&#x9;&#x9;SELECT lt.Student_ID, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Task_Name, sw.weeknum, lt.Quiz_Status_Rank,&#xA;&#x9;&#x9;&#x9;ROW_NUMBER() OVER (&#xA;&#x9;&#x9;&#x9;PARTITION BY lt.Student_ID, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Task_Name, lt.Quiz_Status_Rank&#xA;&#x9;&#x9;&#x9;ORDER BY sw.weeknum ASC, lt.Task_Submitted_Time DESC, lt.Class_Code DESC) AS rownum&#xA;&#x9;&#x9;FROM (&#xA;&#x9;&#x9;&#x9;SELECT Student_ID, Student_Name, Acad_Yr, Sem, Cohort, Module_Code, Class_Code, Task_Name, &#xA;&#x9;&#x9;&#x9;&#x9;CAST(Task_Deadline AS datetime) AS Task_Deadline, CAST(NULLIF(Task_Submitted_Time,'') AS datetime) AS Task_Submitted_Time, Task_Score, Task_Status,&#xA;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Task_Status IN ('Attempted','Submitted') AND &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CAST(LEFT(Task_Score,CHARINDEX('/',Task_Score)-1) AS decimal(10,4)) / CAST(RIGHT(Task_Score,LEN(Task_Score)-CHARINDEX('/',Task_Score)) AS decimal) &gt;= 0.8 THEN 1 -- Pass &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Task_Status IN ('Attempted','Submitted') THEN 2 -- Fail&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE 3 -- NA&#xA;&#x9;&#x9;&#x9;&#x9;END AS Quiz_Status_Rank&#xA;&#x9;&#x9;&#x9;FROM DW_EXT_LESSON_TASKS) lt -- lesson tasks with quiz status rank&#xA;&#x9;&#x9;INNER JOIN (&#xA;&#x9;&#x9;&#x9;SELECT Acad_Year, Semester, ds As weekstart, de as weekend, weeknum FROM WeekNum_CTE&#xA;&#x9;&#x9;&#x9;UNION ALL&#xA;&#x9;&#x9;&#x9;SELECT DISTINCT Acad_Year, Semester, Semester_Begin_Date AS weekstart, DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date) AS weekend, 1 AS weeknum&#xA;&#x9;&#x9;&#x9;FROM DW_TERM_SETUP&#xA;&#x9;&#x9;&#x9;WHERE Qual_Type = 'DPFT') sw -- Semester Weeks&#xA;&#x9;&#x9;ON lt.Acad_Yr = sw.Acad_Year&#xA;&#x9;&#x9;&#x9;AND lt.Sem = sw.Semester&#xA;&#x9;&#x9;&#x9;AND CAST(lt.Task_Submitted_Time AS date) &lt;= sw.weekend &#xA;&#x9;&#x9;&#x9;AND sw.weekstart &lt;= CAST(SYSDATETIME() AS date)) ltw &#xA;&#x9;WHERE ltw.rownum = 1) ltw -- lessons tasks with best cumulatve quiz status rank&#xA;ON lt.Student_ID = ltw.Student_ID&#xA;&#x9;AND lt.Acad_Yr = ltw.Acad_Yr&#xA;&#x9;AND lt.Sem = ltw.Sem&#xA;&#x9;AND lt.Cohort = ltw.Cohort&#xA;&#x9;AND lt.Module_Code = ltw.Module_Code&#xA;&#x9;AND lt.Task_Name = ltw.Task_Name&#xA;&#x9;AND lt.weeknum &gt;= ltw.weeknum;&#xA;&#xA;&#xA;DELETE FROM dbo.DM_OSG_LIFE_SKILLS_QUIZ&#xA;INSERT INTO dbo.DM_OSG_LIFE_SKILLS_QUIZ&#xA;&#xA;Select MAin.Student_ID&#xA;,main.Student_Name&#xA;,'AY'+CAST(Main.Acad_Yr as varchar(10)) as Acad_Yr&#xA;,'S'+CAST(Main.Sem as varchar(2))  as Sem&#xA;,Main.Cohort&#xA;,sv.Admit_Term as Admit_Term&#xA;,ISNULL(sv.School_Centre,'NA') As Department&#xA;,ISNULL(sv.Department,'NA') as Department_Decsr&#xA;,sv.Prog as Prog_code&#xA;,sv.Prog+ ' - ' + sv.Prog_Descr as Progrmme&#xA;,SDAT.Year_of_Study as Year_of_Study&#xA;,Main.Module_Code&#xA;,m.Module_Code +' ' + m.Module_Title as Module&#xA;,Main.Class_Code&#xA;,Main.Task_Name&#xA;,Null As open_time --Not available&#xA;,main.Task_Deadline as Close_time&#xA;,Main.Task_Submitted_Time as Attempt_date&#xA;,main.Task_Score as Quiz_Score&#xA;,main.Task_Status As Quiz_Status_Original&#xA;,main.Quiz_Status as Quiz_Status&#xA;,main.Best_Quiz_Status_Overall&#xA;,main.weeknum&#xA;,main.Best_Quiz_Status_Cumulative&#xA;,sm.Advisor_Name as Student_Mentor&#xA;,GETDATE() as Created_ON&#xA;,GETDATE() As Modified_ON &#xA; from &#xA;&#xA;TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE main&#xA;LEFT JOIN(&#xA;&#x9;select distinct &#xA;&#x9;&#x9;Student_Id&#xA;&#x9;&#x9;,Admit_Term&#xA;&#x9;&#x9;,Prog&#xA;&#x9;&#x9;,Programme_Desc as Prog_Descr&#xA;&#x9;&#x9;,School_Centre&#xA;&#x9;&#x9;,Descr as Department &#xA;&#x9;FROM (&#xA;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;Student_Id&#xA;&#x9;&#x9;&#x9;&#x9;,Admit_Term&#xA;&#x9;&#x9;&#x9;&#x9;,Prog&#xA;&#x9;&#x9;&#x9;&#x9;,Programme_Desc&#xA;&#x9;&#x9;FROM (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Student_Id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,Admit_Term&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,Prog&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,Programme_Desc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,ROW_NUMBER() OVER (PARTITION BY Student_Id ORDER BY Effective_Date desc, Effective_Seq desc, Student_Career_Number desc) rownum&#xA;&#x9;&#x9;&#x9;&#x9;FROM DW_STUDENT_MOVEMENT&#xA;&#x9;&#x9;&#x9;&#x9;WHERE Qual_Type = 'DPFT'&#xA;&#x9;&#x9;&#x9;  ) sm WHERE sm.rownum = 1&#xA;&#x9;) a&#xA;LEFT JOIN DW_PET_PROGRAMME b on a.Prog=b.Prog_Code&#xA;LEFT JOIN DW_EXT_DEPARTMENT c on b.School_Centre=c.Department&#xA;) sv on main.Student_ID=sv.Student_Id&#xA;&#xA;LEFT JOIN DW_STUDENT_DETAILS_BY_ACAD_TERM SDAT &#xA;on SDAT.Student_ID=main.Student_ID and &#xA;&#x9;SDAT.Acad_Year=main.Acad_Yr and &#xA;&#x9;SDAT.Semester=main.Sem and &#xA;&#x9;SDAT.Vacation_Term='no' and &#xA;&#x9;sv.Prog=SDAT.prog&#xA;&#xA;LEFT JOIN (&#xA;&#x9;select distinct &#xA;&#x9;&#x9;ModuleID&#xA;&#x9;&#x9;,Module_Code&#xA;&#x9;&#x9;,Module_Title&#xA;&#x9;&#x9;,ROW_NUMBER() over(partition by Module_Code order by Effective_Date desc) as ROW_NUM &#xA;&#x9;from DW_MODULE&#xA;where Qual_Type='DPFT'&#xA;) m on main.Module_Code=M.Module_Code AND m.ROW_NUM=1&#xA;LEFT JOIN(&#xA;&#x9;select  &#xA;&#x9;&#x9;Student_ID&#xA;&#x9;&#x9;,Advisor_ID&#xA;&#x9;&#x9;,Advisor_Name&#xA;&#x9;&#x9;,ROW_NUMBER() over(partition by Student_ID order by effective_date desc) as rn&#xA;from DW_STUDENT_MENTOR &#xA;where Qual_Type='DPFT'&#xA;) sm on main.Student_ID=sm.Student_ID and sm.rn=1&#xA;&#xA;&#xA;COMMIT TRANSACTION&#xA;END TRY&#xA;&#xA;BEGIN CATCH&#xA;ROLLBACK TRANSACTION&#xA;&#xA;  INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)&#xA;  SELECT   &#xA;         CAST(@jobstatusid as int) as JOB_STATUS_ID&#xA;        ,ERROR_MESSAGE() AS ErrorMessage&#xA;&#x9;&#x9;,getdate()  as created_on&#xA;END CATCH  &#xA;GO&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQL_DM_Load">
      <DTS:VariableValue
        DTS:DataType="8">BEGIN TRANSACTION
BEGIN TRY
--------------------------------------
DECLARE @jobstatusid varchar(10)
select @jobstatusid=0

TRUNCATE TABLE TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE;
SET DATEFIRST 1;
WITH WeekNum_CTE(Acad_Year,Semester,ds,de,weeknum)
AS 
(
	SELECT DISTINCT Acad_Year, Semester, DATEADD(week,1,DATEADD(day,1-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS ds, DATEADD(week,1,DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS de, 2 AS weeknum
	FROM DW_TERM_SETUP
	WHERE Qual_Type = 'DPFT'
	UNION ALL
	SELECT Acad_Year, Semester, DATEADD(week,1,ds), DATEADD(week,1,de), weeknum + 1 
	FROM WeekNum_CTE
	WHERE weeknum &lt; 30
)
INSERT INTO [dbo].[TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE]
           ([Student_ID]
           ,[Student_Name]
           ,[Acad_Yr]
           ,[Sem]
           ,[Cohort]
           ,[Module_Code]
           ,[Class_Code]
           ,[Task_Name]
           ,[Task_Deadline]
           ,[Task_Submitted_Time]
           ,[Task_Score]
           ,[Task_Status]
           ,[Quiz_Status]
           ,[Best_Quiz_Status_Overall]
           ,[weeknum]
           ,[Best_Quiz_Status_Cumulative])
SELECT lt.Student_ID, lt.Student_Name, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Class_Code, lt.Task_Name, 
	lt.Task_Deadline, lt.Task_Submitted_Time, lt.Task_Score, lt.Task_Status, 
	CASE lt.Quiz_Status_Rank
		WHEN 1 THEN 'Pass'
		WHEN 2 THEN 'Fail'
		ELSE 'NA'
	END AS Quiz_Status, 
	CASE lto.Best_Quiz_Status_Rank_Overall
		WHEN 1 THEN 'Pass'
		WHEN 2 THEN 'Fail'
		ELSE 'NA'
	END AS Best_Quiz_Status_Overall, 
	sw.weeknum,
	NULL AS Best_Quiz_Status_Cumulative --KIV
FROM (
	SELECT Acad_Yr, Sem, Cohort, Module_Code, Task_Name, ISNULL(Task_Submitted_Date_Max, CAST(SYSDATETIME() AS DATE)) AS Task_Submitted_Date_Max
	FROM (
		SELECT Acad_Yr, Sem, Cohort, Module_Code, Task_Name, MAX(CAST(NULLIF(Task_Submitted_Time,'') AS DATE)) AS Task_Submitted_Date_Max
		FROM DW_EXT_LESSON_TASKS lt
		GROUP BY Acad_Yr, Sem, Cohort, Module_Code, Task_Name) loq) loq -- distinct list of quizes
INNER JOIN (
	SELECT Acad_Year, Semester, ds As weekstart, de as weekend, weeknum FROM WeekNum_CTE
	UNION ALL
	SELECT DISTINCT Acad_Year, Semester, Semester_Begin_Date AS weekstart, DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date) AS weekend, 1 AS weeknum
	FROM DW_TERM_SETUP
	WHERE Qual_Type = 'DPFT') sw -- Semester Weeks
ON loq.Acad_Yr = sw.Acad_Year
	AND loq.Sem = sw.Semester
	AND loq.Task_Submitted_Date_Max &gt;= sw.weekstart 
	AND sw.weekstart &lt;= CAST(SYSDATETIME() AS date)
INNER JOIN (
	SELECT Student_ID, Student_Name, Acad_Yr, Sem, Cohort, Module_Code, Class_Code, Task_Name, 
		CAST(Task_Deadline AS datetime) AS Task_Deadline, CAST(NULLIF(Task_Submitted_Time,'') AS datetime) AS Task_Submitted_Time, Task_Score, Task_Status,
		CASE
			WHEN Task_Status IN ('Attempted','Submitted') AND 
				CAST(LEFT(Task_Score,CHARINDEX('/',Task_Score)-1) AS decimal(10,4)) / CAST(RIGHT(Task_Score,LEN(Task_Score)-CHARINDEX('/',Task_Score)) AS decimal) &gt;= 0.8 THEN 1 -- Pass 
			WHEN Task_Status IN ('Attempted','Submitted') THEN 2 -- Fail
			ELSE 3 -- NA
		END AS Quiz_Status_Rank
	FROM DW_EXT_LESSON_TASKS) lt -- lesson tasks with quiz status rank
ON lt.Acad_Yr = loq.Acad_Yr
	AND lt.Sem = loq.Sem
	AND lt.Cohort = loq.Cohort
	AND lt.Module_Code = loq.Module_Code
	AND lt.Task_Name = loq.Task_Name
INNER JOIN (
	SELECT Student_ID, Acad_Yr, Sem, Cohort, Module_Code, Task_Name, 
		MIN(
			CASE
				WHEN Task_Status IN ('Attempted','Submitted') AND 
					CAST(LEFT(Task_Score,CHARINDEX('/',Task_Score)-1) AS decimal(10,4)) / CAST(RIGHT(Task_Score,LEN(Task_Score)-CHARINDEX('/',Task_Score)) AS decimal) &gt;= 0.8 THEN 1 -- Pass 
				WHEN Task_Status IN ('Attempted','Submitted') THEN 2 -- Fail
				ELSE 3 -- NA
			END) AS Best_Quiz_Status_Rank_Overall
	FROM DW_EXT_LESSON_TASKS
	GROUP BY Student_ID, Acad_Yr, Sem, Cohort, Module_Code, Task_Name) lto -- lesson tasks with best overall quiz status rank
ON lt.Student_ID = lto.Student_ID
	AND lt.Acad_Yr = lto.Acad_Yr
	AND lt.Sem = lto.Sem
	AND lt.Cohort = lto.Cohort
	AND lt.Module_Code = lto.Module_Code
	AND lt.Task_Name = lto.Task_Name
ORDER BY lt.Student_ID, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Class_Code, lt.Task_Name, sw.weeknum;


SET DATEFIRST 1;
WITH WeekNum_CTE(Acad_Year,Semester,ds,de,weeknum)
AS 
(
	SELECT DISTINCT Acad_Year, Semester, DATEADD(week,1,DATEADD(day,1-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS ds, DATEADD(week,1,DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date)) AS de, 2 AS weeknum
	FROM DW_TERM_SETUP
	WHERE Qual_Type = 'DPFT'
	UNION ALL
	SELECT Acad_Year, Semester, DATEADD(week,1,ds), DATEADD(week,1,de), weeknum + 1 
	FROM WeekNum_CTE
	WHERE weeknum &lt; 30
)
UPDATE lt
SET lt.Best_Quiz_Status_Cumulative =
	CASE ltw.Best_Quiz_Status_Rank_Cumulative
		WHEN 1 THEN 'Pass'
		WHEN 2 THEN 'Fail'
		ELSE 'NA'
	END 
FROM TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE lt
LEFT JOIN (
	SELECT ltw.Student_ID, ltw.Acad_Yr, ltw.Sem, ltw.Cohort, ltw.Module_Code, ltw.Task_Name, ltw.weeknum, ltw.Quiz_Status_Rank AS Best_Quiz_Status_Rank_Cumulative
	FROM (
		SELECT lt.Student_ID, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Task_Name, sw.weeknum, lt.Quiz_Status_Rank,
			ROW_NUMBER() OVER (
			PARTITION BY lt.Student_ID, lt.Acad_Yr, lt.Sem, lt.Cohort, lt.Module_Code, lt.Task_Name, lt.Quiz_Status_Rank
			ORDER BY sw.weeknum ASC, lt.Task_Submitted_Time DESC, lt.Class_Code DESC) AS rownum
		FROM (
			SELECT Student_ID, Student_Name, Acad_Yr, Sem, Cohort, Module_Code, Class_Code, Task_Name, 
				CAST(Task_Deadline AS datetime) AS Task_Deadline, CAST(NULLIF(Task_Submitted_Time,'') AS datetime) AS Task_Submitted_Time, Task_Score, Task_Status,
				CASE
					WHEN Task_Status IN ('Attempted','Submitted') AND 
						CAST(LEFT(Task_Score,CHARINDEX('/',Task_Score)-1) AS decimal(10,4)) / CAST(RIGHT(Task_Score,LEN(Task_Score)-CHARINDEX('/',Task_Score)) AS decimal) &gt;= 0.8 THEN 1 -- Pass 
					WHEN Task_Status IN ('Attempted','Submitted') THEN 2 -- Fail
					ELSE 3 -- NA
				END AS Quiz_Status_Rank
			FROM DW_EXT_LESSON_TASKS) lt -- lesson tasks with quiz status rank
		INNER JOIN (
			SELECT Acad_Year, Semester, ds As weekstart, de as weekend, weeknum FROM WeekNum_CTE
			UNION ALL
			SELECT DISTINCT Acad_Year, Semester, Semester_Begin_Date AS weekstart, DATEADD(day,7-DATEPART(weekday,Semester_Begin_Date),Semester_Begin_Date) AS weekend, 1 AS weeknum
			FROM DW_TERM_SETUP
			WHERE Qual_Type = 'DPFT') sw -- Semester Weeks
		ON lt.Acad_Yr = sw.Acad_Year
			AND lt.Sem = sw.Semester
			AND CAST(lt.Task_Submitted_Time AS date) &lt;= sw.weekend 
			AND sw.weekstart &lt;= CAST(SYSDATETIME() AS date)) ltw 
	WHERE ltw.rownum = 1) ltw -- lessons tasks with best cumulatve quiz status rank
ON lt.Student_ID = ltw.Student_ID
	AND lt.Acad_Yr = ltw.Acad_Yr
	AND lt.Sem = ltw.Sem
	AND lt.Cohort = ltw.Cohort
	AND lt.Module_Code = ltw.Module_Code
	AND lt.Task_Name = ltw.Task_Name
	AND lt.weeknum &gt;= ltw.weeknum;


DELETE FROM dbo.DM_OSG_LIFE_SKILLS_QUIZ
INSERT INTO dbo.DM_OSG_LIFE_SKILLS_QUIZ

Select MAin.Student_ID
,main.Student_Name
,'AY'+CAST(Main.Acad_Yr as varchar(10)) as Acad_Yr
,'S'+CAST(Main.Sem as varchar(2))  as Sem
,Main.Cohort
,sv.Admit_Term as Admit_Term
,ISNULL(sv.School_Centre,'NA') As Department
,ISNULL(sv.Department,'NA') as Department_Decsr
,sv.Prog as Prog_code
,sv.Prog+ ' - ' + sv.Prog_Descr as Progrmme
,SDAT.Year_of_Study as Year_of_Study
,Main.Module_Code
,m.Module_Code +' ' + m.Module_Title as Module
,Main.Class_Code
,Main.Task_Name
,Null As open_time --Not available
,main.Task_Deadline as Close_time
,Main.Task_Submitted_Time as Attempt_date
,main.Task_Score as Quiz_Score
,main.Task_Status As Quiz_Status_Original
,main.Quiz_Status as Quiz_Status
,main.Best_Quiz_Status_Overall
,main.weeknum
,main.Best_Quiz_Status_Cumulative
,sm.Advisor_Name as Student_Mentor
,GETDATE() as Created_ON
,GETDATE() As Modified_ON 
 from 

TMP_DM_OSG_LIFE_SKILLS_QUIZ_BASE main
LEFT JOIN(
	select distinct 
		Student_Id
		,Admit_Term
		,Prog
		,Programme_Desc as Prog_Descr
		,School_Centre
		,Descr as Department 
	FROM (
			SELECT 
				Student_Id
				,Admit_Term
				,Prog
				,Programme_Desc
		FROM (
				SELECT 
					Student_Id
					,Admit_Term
					,Prog
					,Programme_Desc
					,ROW_NUMBER() OVER (PARTITION BY Student_Id ORDER BY Effective_Date desc, Effective_Seq desc, Student_Career_Number desc) rownum
				FROM DW_STUDENT_MOVEMENT
				WHERE Qual_Type = 'DPFT'
			  ) sm WHERE sm.rownum = 1
	) a
LEFT JOIN DW_PET_PROGRAMME b on a.Prog=b.Prog_Code
LEFT JOIN DW_EXT_DEPARTMENT c on b.School_Centre=c.Department
) sv on main.Student_ID=sv.Student_Id

LEFT JOIN DW_STUDENT_DETAILS_BY_ACAD_TERM SDAT 
on SDAT.Student_ID=main.Student_ID and 
	SDAT.Acad_Year=main.Acad_Yr and 
	SDAT.Semester=main.Sem and 
	SDAT.Vacation_Term='no' and 
	sv.Prog=SDAT.prog

LEFT JOIN (
	select distinct 
		ModuleID
		,Module_Code
		,Module_Title
		,ROW_NUMBER() over(partition by Module_Code order by Effective_Date desc) as ROW_NUM 
	from DW_MODULE
where Qual_Type='DPFT'
) m on main.Module_Code=M.Module_Code AND m.ROW_NUM=1
LEFT JOIN(
	select  
		Student_ID
		,Advisor_ID
		,Advisor_Name
		,ROW_NUMBER() over(partition by Student_ID order by effective_date desc) as rn
from DW_STUDENT_MENTOR 
where Qual_Type='DPFT'
) sm on main.Student_ID=sm.Student_ID and sm.rn=1


COMMIT TRANSACTION
END TRY

BEGIN CATCH
ROLLBACK TRANSACTION

  INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)
  SELECT   
         CAST(@jobstatusid as int) as JOB_STATUS_ID
        ,ERROR_MESSAGE() AS ErrorMessage
		,getdate()  as created_on
END CATCH  
GO</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{52C9700B-D0D5-46FA-8ADE-8CA4DF134BB8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="STAGE">
      <DTS:VariableValue
        DTS:DataType="8">DM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA586A28-7AF1-4251-9238-F9649998FB88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TgtTableName">
      <DTS:VariableValue
        DTS:DataType="8">DM_OSG_LIFE_SKILLS_QUIZ</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create ETL Job Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{07C0197E-5D8B-4B19-9C96-455F4B4F3FF3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ETL Job Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
          SQLTask:SqlStatementSource="Exec [dbo].[usp_InsertETLJobLog] ?, ?, ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Job_name"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::STAGE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::SourceTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::TgtTableName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Error Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{CEC301E3-6D5E-46D5-A656-E48A14FB25FC}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Error Log"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
          SQLTask:SqlStatementSource="UPDATE [dbo].[ETL_JOB_STATUS]&#xA;SET&#xA;ERROR_MSG = 'STG table is not completed',&#xA;JOB_STATUS ='Fail'&#xA;--PROCESSED_ON =getdate()&#xA;WHERE JOB_STATUS_ID=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JOB_STATUS_ID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\JOB_STATUS_ID"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{025D7F33-3E63-4EDB-AC1E-1490176198CA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="JOB_STATUS_ID"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
          SQLTask:SqlStatementSource="SELECT max([JOB_STATUS_ID])&#xA;      &#xA;  FROM [dbo].[ETL_JOB_STATUS] where [SOURCE_FILENAME]=? &#xA;---and convert(varchar(8),CREATED_ON,112)=convert--(varchar(8) ,getdate(),112)"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::JOB_STATUS_ID" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::SourceTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Into DM"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{12990CC4-6A70-4033-ADD7-41B8673299CC}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Into DM"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{293B964E-1CE9-4618-8010-90AA5BC07499}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::SQL_DM_Load" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process_Date"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{33B61A93-BDBF-4941-B1AB-EF244EE1657D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process_Date"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{293B964E-1CE9-4618-8010-90AA5BC07499}"
          SQLTask:SqlStatementSource="Select getdate()"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Process_date" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Process_date"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="135"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Job Status"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C8854490-39BE-4828-B2E1-108E3AEE88BD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Job Status"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
          SQLTask:SqlStatementSource="DECLARE &#xA;@jobstatusid INT &#xA;select @jobstatusid=?&#xA;IF exists(select * from dbo.ETL_ERROR_LOG where [JOB_STATUS_ID]=@jobstatusid)&#xA; BEGIN&#xA; Update [dbo].[ETL_JOB_STATUS]&#xA;SET [PROCESSED_ON] =getdate(),&#xA;[JOB_STATUS]='Fail'&#xA;where [JOB_STATUS_ID]=@jobstatusid&#xA;  END&#xA;ELSE&#xA;BEGIN&#xA;Update [dbo].[ETL_JOB_STATUS]&#xA;SET [PROCESSED_ON] =getdate(),&#xA;[JOB_STATUS]='Success'&#xA;where [JOB_STATUS_ID]=@jobstatusid&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JOB_STATUS_ID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Validate job status"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{98438F4F-7FE9-4D5D-98CB-61B2B445F34E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Validate job status"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
          SQLTask:SqlStatementSource="select CASE WHEN JOB_STATUS='Success' then 0 ELSE 1 END AS  JOB_STATUS&#xA;&#xA;from [dbo].[ETL_JOB_STATUS]&#xA;  where STAGE='STG' and TARGET_TABLENAME='STG_OASIS_STUDENT_DEBARMT' and &#xA;  JOB_STATUS_ID in (Select max(JOB_STATUS_ID) from [dbo].[ETL_JOB_STATUS]&#xA;  where STAGE='STG' and TARGET_TABLENAME='STG_OASIS_STUDENT_DEBARMT')"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Job_Status" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::STAGE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D3EE789E-9BAA-4E36-9742-FF0E89B243E1}"
      DTS:From="Package\Process_Date"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load Into DM" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{84D2FE90-8C83-4B4B-B7BD-FF019F8FAF4A}"
      DTS:From="Package\Create ETL Job Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\JOB_STATUS_ID" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6922C15F-5F28-4EB5-AA49-FBCB063390C2}"
      DTS:From="Package\JOB_STATUS_ID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Validate job status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{98F1C03D-1A91-4765-8494-06AC5764A7D3}"
      DTS:From="Package\Load Into DM"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Update Job Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[False]"
      DTS:CreationName=""
      DTS:DTSID="{D3F5E278-DC33-42EC-B2F0-A95D5F857D06}"
      DTS:Expression="@[User::Job_Status]==1"
      DTS:From="Package\Validate job status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="False"
      DTS:To="Package\Error Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[True]"
      DTS:CreationName=""
      DTS:DTSID="{A687C898-FD1B-40AD-BCAF-F255CAEBE6F1}"
      DTS:Expression="@[User::Job_Status]==0"
      DTS:From="Package\Validate job status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="True"
      DTS:To="Package\Process_Date" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{7474AB05-8A0C-444D-92AC-1F4193E50AE0}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{EA754423-2D10-4D04-A01B-18EED7A99EC5}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\ETL_ERROR_LOG"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0A70615C-C292-408E-A605-507C515A294F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ETL_ERROR_LOG">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{E193709A-09AD-4B28-AA88-BEAD9FCADBF2}"
              SQLTask:SqlStatementSource="[dbo].[usp_InsertETLErrorLog] ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::JOB_STATUS_ID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157.333333333334,42"
          Id="Package\Create ETL Job Log"
          TopLeft="17,13" />
        <NodeLayout
          Size="122.666666666667,42"
          Id="Package\Error Log"
          TopLeft="699,21" />
        <NodeLayout
          Size="142,42"
          Id="Package\JOB_STATUS_ID"
          TopLeft="230,18" />
        <NodeLayout
          Size="142.666666666667,42"
          Id="Package\Load Into DM"
          TopLeft="486,219" />
        <NodeLayout
          Size="142,42"
          Id="Package\Process_Date"
          TopLeft="487,131" />
        <NodeLayout
          Size="165.333333333334,42"
          Id="Package\Update Job Status"
          TopLeft="526,322" />
        <NodeLayout
          Size="166,42"
          Id="Package\Validate job status"
          TopLeft="446,22" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="557.75,173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="174,36.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56,0"
              Start="0,0"
              End="48.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="372,41">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="74,0"
              Start="0,0"
              End="66.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="66.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="557.5,261">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,61"
              Start="0,0"
              End="51,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5"
                    Point2="0,30.5"
                    Point3="4,30.5" />
                  <mssgle:LineSegment
                    End="47,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="47,30.5"
                    Point2="51,30.5"
                    Point3="51,34.5" />
                  <mssgle:LineSegment
                    End="51,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[False]"
          TopLeft="612,42.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87,0"
              Start="0,0"
              End="79.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="79.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="28.01365234375,5,23.4726953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[True]"
          TopLeft="529,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29,67"
              Start="0,0"
              End="29,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.5"
                    Point2="0,33.5"
                    Point3="4,33.5" />
                  <mssgle:LineSegment
                    End="25,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="25,33.5"
                    Point2="29,33.5"
                    Point3="29,37.5" />
                  <mssgle:LineSegment
                    End="29,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="3.48755859375,38.5,22.0248828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package.EventHandlers[OnError]\ETL_ERROR_LOG"
          TopLeft="370,98" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[False]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[True]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>