<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/30/2019 1:46:31 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-110119GM22"
  DTS:CreatorName="NCS\P0500388"
  DTS:DelayValidation="True"
  DTS:DTSID="{82E6361B-8645-4577-B9CA-DAECA3D1BB29}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="18441"
  DTS:ObjectName="DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED_IMPROVED"
  DTS:PackageType="5"
  DTS:VersionBuild="156"
  DTS:VersionGUID="{24629BBB-3B07-4000-88ED-865FC4702A1F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D4E48D50-1014-4A36-8BD8-8BFED0855761}"
      DTS:ObjectName="DW">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::DW_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiTCZiygZU0CFUIPafxRImQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAe0/+bn7mcssk9Wk5oQdzxAAAAAASAAACgAAAAEAAAALQR2G4C9Po5PEcyDdjBNG4YAAAATKaghzuETMfPEGiQ+9xvUbzzmSYUG2NcFAAAAJYzPR6XRInX2gtpGo5xxoBRvlq4</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ErrorLog]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
      DTS:ObjectName="ErrorLog">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::DW_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiTCZiygZU0CFUIPafxRImQAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAADQeC6LLTpAC9iFruv5Q0+IAAAAAASAAACgAAAAEAAAANzQHUkGOATY3v8LkvwZSeMYAAAATTOuvnoF7Pxhec7VD6aTEZ+mDfWYlWfHFAAAANBD+C2Rd3y70kQBnd1yvR2D7kZT</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0162738-907F-4594-B1D5-14E4EE5E144B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Duplicate_Check">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34F6D0D8-39FA-43B1-81C2-A6D71903E397}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Job_name">
      <DTS:VariableValue
        DTS:DataType="8">DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F607C218-B445-4BC1-B174-2F7D790CB436}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Job_Status">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{551D652B-7E25-4574-816A-33989580D468}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JOB_STATUS_ID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{79A540CA-6906-4407-9E83-5393D244F792}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Mandatory_constraint_Check">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{607062BF-A806-4069-9EC6-0CF53FF0F000}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PreStage">
      <DTS:VariableValue
        DTS:DataType="8">STG</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C338CC3-04A4-4B4A-BFB0-C6AECEA98897}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Process_date">
      <DTS:VariableValue
        DTS:DataType="7">2/1/2019 2:58:00 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C2E41450-3A3D-4241-AE24-663E68B2ECB5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceTable">
      <DTS:VariableValue
        DTS:DataType="8">STG_EXT_FIN_AID_OUTCOME_STATUS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13ED2639-1510-4649-83E4-C399A4BBBE3B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BEGIN TRANSACTION&#xA;BEGIN TRY&#xA;------------&#xA;DECLARE @LastDWProcessdate datetime&#xA;,@processeddatetime datetime&#xA;,@jobstatusid varchar(10)&#xA;select @jobstatusid=0&#xA;select @LastDWProcessdate= Isnull(max(Modified_on),'1990-01-01 00:00:00.000') from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]--dw table&#xA;--select  @processeddatetime=?&#xA;--select @LastDWProcessdate&#xA;truncate table [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]&#xA;---------------------------------&#xA;&#xA;&#xA;; with Fin_Scheme_ID as (&#xA;&#x9;SELECT &#xA;&#x9;&#x9;[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[Award_Item_ID_Grant_Code]&#xA;&#x9;&#x9;,[Priority]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;FROM &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_EXT_FIN_SCHEME_ID]&#xA;&#x9;where [Latest_Ind]='Y'&#xA;)&#xA;&#xA;, Award_Info as (&#xA;&#x9;select &#xA;&#x9;&#x9;[Award_ID]&#xA;&#x9;&#x9;,[Desc]&#xA;&#x9;from &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_AWARD_INFO] &#xA;&#x9;where [Latest_Ind]='Y'&#xA;)&#xA;&#xA;---Start on OSS_Fin_Aid table, which stems from STG_EXT_FIN_AID_OUTCOME_STATUS&#xA;, OSS_Fin_Aid as (&#xA;&#x9;SELECT &#xA;&#x9;&#x9;a.[Acad_Yr]&#xA;&#x9;&#x9;,a.[Acad_Term]&#xA;&#x9;&#x9;,a.[Student_ID]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Category] is null then 'Others'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Category]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Category]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Type] is null then a.App_Type&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Type]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Type]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Desc] is null then a.App_Type&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Desc]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Status_Desc] is null then a.App_Status&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;,b.[Priority]&#xA;&#x9;&#x9;,ROW_NUMBER() OVER (&#xA;&#x9;&#x9;&#x9;Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.App_Type,a.App_Status &#xA;&#x9;&#x9;&#x9;ORDER BY CAST(b.[Priority] AS INT)&#xA;&#x9;&#x9;) Row_Num&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,case when mc.[Long_Name] is NULL then NULL &#xA;&#x9;&#x9;&#x9;else mc.[Long_Name] &#xA;&#x9;&#x9;&#x9;end [App_Status_Desc]&#xA;&#x9;&#x9;,a.[Award_ID]&#xA;&#x9;&#x9;,case when ai.[Desc] is NULL then NULL &#xA;&#x9;&#x9;&#x9;else ai.[Desc] &#xA;&#x9;&#x9;&#x9;end [Award_Desc]&#xA;&#x9;&#x9;,a.[Award_Amt]&#xA;&#x9;&#x9;,a.[Date_Updated]&#xA;&#x9;&#x9;,a.[Award_Remarks]&#xA;&#x9;&#x9;,a.[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,a.[Verified_GHI_Award]&#xA;&#x9;&#x9;,a.[Verified_PCI_Award]&#xA;&#x9;&#x9;,a.[Num_Household_Members]&#xA;&#x9;&#x9;,a.[Property_Type]&#xA;&#x9;&#x9;,a.[Tenancy_Type]&#xA;&#x9;&#x9;,a.[Special_Circumstances]&#xA;&#x9;&#x9;,a.[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,NULL [Disbursement_Date]&#xA;&#x9;FROM (select * from &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_EXT_FIN_AID_OUTCOME_STATUS] where Latest_Ind='Y') a&#xA;&#x9;LEFT JOIN Fin_Scheme_ID b &#xA;&#x9;on (a.App_Type=b.App_Type or b.App_Type='*') AND&#xA;&#x9;&#x9;(a.App_Status=b.App_Status or b.App_Status='*') AND &#xA;&#x9;&#x9;(a.Award_ID=b.Award_Item_ID_Grant_Code or b.Award_Item_ID_Grant_Code='*')&#xA;&#x9;LEFT JOIN &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_MASTER_CODE] mc on a.App_Status=mc.Field_Value and mc.Field_Name='A_SF_APPL_STA'&#xA;&#x9;and mc.Effective_Status='A'&#xA;&#x9;LEFT JOIN Award_Info ai &#xA;&#x9;on a.Award_ID=ai.Award_ID &#xA;)&#xA;, OSS_Fin_Aid_Final as (&#xA;&#x9;select &#xA;&#x9;&#x9;'OSS External' as [Source] &#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[App_Status_Desc]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Desc]&#xA;&#x9;&#x9;,[Award_Amt]&#xA;&#x9;&#x9;,[Date_Updated]&#xA;&#x9;&#x9;,[Award_Remarks]&#xA;&#x9;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,[Verified_GHI_Award]&#xA;&#x9;&#x9;,[Verified_PCI_Award]&#xA;&#x9;&#x9;,[Num_Household_Members]&#xA;&#x9;&#x9;,[Property_Type]&#xA;&#x9;&#x9;,[Tenancy_Type]&#xA;&#x9;&#x9;,[Special_Circumstances]&#xA;&#x9;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from OSS_Fin_Aid where Row_Num=1&#xA;)&#xA;--select * from OSS_Fin_Aid_Final&#xA;/* End of OSS_Fin_Aid Table. &#xA;OSS_Fin_Aid Table is now ready for UNION as OSS_Fin_Aid_Final.*/&#xA;&#xA;&#xA;-----Start on OASIS_Fin_Aid table, which stems from STG_OASIS_BUR_SCHOLAR_STATUS&#xA;, OASIS_Bur_Schship as ( --this step is to get the base table for OASIS_Fin_Aid&#xA;&#x9;select &#xA;&#x9;&#x9;distinct &#xA;&#x9;&#x9;[Student_ID]&#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Type_Decr] as [App_Type_Desc]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[Schship_Bur_ID]&#xA;&#x9;&#x9;,[Schship_Bur_Name]&#xA;&#x9;&#x9;,[Amt]&#xA;&#x9;&#x9;,[App_Date]&#xA;&#x9;&#x9;,[Comments]&#xA;&#x9;&#x9;,[Disbursed_Date]&#xA;&#x9;from &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_BUR_SCHOLAR_STATUS] where Latest_Ind='Y'&#xA;)&#xA;&#xA;, Stud_App_Bursary as ( -- joins the base table with STG_OASIS_STUDENT_APP&#xA;&#x9;SELECT &#xA;&#x9;&#x9;a.[Student_ID]&#xA;&#x9;&#x9;,a.[Acad_Yr]&#xA;&#x9;&#x9;,a.[App_Date]&#xA;&#x9;&#x9;,a.[Disbursed_Date]&#xA;&#x9;&#x9;,a.[App_Type]&#xA;&#x9;&#x9;,a.[App_Type_Desc]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,case when mc.[Long_Name] is NULL then NULL &#xA;&#x9;&#x9;&#x9;else mc.[Long_Name] &#xA;&#x9;&#x9;&#x9;end [App_Status_Desc]&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[Schship_Bur_ID]&#xA;&#x9;&#x9;,a.[Schship_Bur_Name]&#xA;&#x9;&#x9;,a.[Amt]&#xA;&#x9;&#x9;,a.[Comments]&#xA;&#x9;&#x9;,b.[Gross_Monthly_Household_Income]&#xA;&#x9;&#x9;,b.[Per_Capita_Income]&#xA;&#x9;&#x9;,b.[Num_Household_Members]&#xA;&#x9;&#x9;,b.[Property_Housing_Type]&#xA;&#x9;&#x9;,b.[Tenancy_Type]&#xA;&#x9;&#x9;,case when b.[Father_Deceased]='Y' then 'Father Deceased'&#xA;&#x9;&#x9;&#x9;else NULL&#xA;&#x9;&#x9;&#x9;end [Father_Deceased]&#xA;&#x9;&#x9;,case when b.[Mother_Deceased]='Y' then 'Mother Deceased'&#xA;&#x9;&#x9;&#x9;else NULL&#xA;&#x9;&#x9;&#x9;end [Mother_Deceased]&#xA;&#x9;&#x9;,case when b.[Parents_Divorced]='Y' then 'Parents Divorced'&#xA;&#x9;&#x9;&#x9;else NULL&#xA;&#x9;&#x9;&#x9;end [Parents_Divorced]&#xA;&#x9;&#x9;,case when b.[Med_Cond_Family_Member]='Y' then 'Med Cond Family Member'&#xA;&#x9;&#x9;&#x9;else NULL&#xA;&#x9;&#x9;&#x9;end [Med_Cond_Family_Member]&#xA;&#x9;&#x9;,case when b.[Med_Cond_Self]='Y' then 'Med Cond (Self)'&#xA;&#x9;&#x9;&#x9;else NULL&#xA;&#x9;&#x9;&#x9;end [Med_Cond_Self]&#xA;&#x9;&#x9;,case when b.[Specify_Med_Cond] &lt;&gt; NULL then b.[Specify_Med_Cond]&#xA;&#x9;&#x9;&#x9;else NULL&#xA;&#x9;&#x9;&#x9;end [Specify_Med_Cond]&#xA;&#x9;FROM OASIS_Bur_Schship a&#xA;&#x9;LEFT JOIN (select * from &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_STUDENT_APP] where Latest_Ind='Y') b &#xA;&#x9;on a.[Student_ID]=b.[Student_ID] &#xA;&#x9;&#x9;and a.[Acad_Yr]=b.[Acad_Yr] &#xA;&#x9;&#x9;and a.[App_ID]=b.[App_ID] &#xA;&#x9;&#x9;and a.[App_Type]=b.[App_Type]&#xA;&#x9;LEFT JOIN &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_MASTER_CODE] mc &#xA;&#x9;on a.App_Status=mc.Field_Value and mc.Field_Name='A_SF_APPL_STA' and mc.Effective_Status='A'&#xA;)&#xA;--select * from Stud_App_Bursary&#xA;&#xA;, OASIS_Fin_Aid as ( --joins Stud_App_Bursary with Fin_Scheme_ID&#xA;&#x9;select &#xA;&#x9;&#x9;a.[Acad_Yr]&#xA;&#x9;&#x9;,case when 3&lt;= month([App_Date]) AND month([App_Date])&lt;=8 &#xA;&#x9;&#x9;&#x9;then concat('AY', right([Acad_Yr],2),'S1')&#xA;&#x9;&#x9;&#x9;else concat('AY', right([Acad_Yr],2),'S2')&#xA;&#x9;&#x9;&#x9;end [Acad_Term]&#xA;&#x9;&#x9;,a.[Student_ID]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Category] is null then 'Others'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Category]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Category]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Type] is null then a.App_Type&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Type]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Type]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Desc] is null then a.App_Type_Desc&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Desc]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Status_Desc] is null then a.App_Status_Desc&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,b.[Priority]&#xA;&#x9;&#x9;,ROW_NUMBER() OVER (&#xA;&#x9;&#x9;&#x9;Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.App_Type,a.App_Status &#xA;&#x9;&#x9;&#x9;&#x9;ORDER BY CAST(b.[Priority] AS INT)&#xA;&#x9;&#x9;&#x9;) Row_Num&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,a.[App_Status_Desc]&#xA;&#x9;&#x9;,a.[Schship_Bur_ID] as [Award_ID]&#xA;&#x9;&#x9;,a.[Schship_Bur_Name] as [Award_Desc]&#xA;&#x9;&#x9;,a.[Amt] as [Award_Amt]&#xA;&#x9;&#x9;,a.[App_Date] as [Date_Updated]&#xA;&#x9;&#x9;,NULL as [Award_Remarks]&#xA;&#x9;&#x9;,NULL as [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,a.[Gross_Monthly_Household_Income] as [Verified_GHI_Award]&#xA;&#x9;&#x9;,a.[Per_Capita_Income] as [Verified_PCI_Award]&#xA;&#x9;&#x9;,a.[Num_Household_Members]&#xA;&#x9;&#x9;,a.[Property_Housing_Type] as [Property_Type]&#xA;&#x9;&#x9;,a.[Tenancy_Type]&#xA;&#x9;&#x9;,concat(a.[Father_Deceased],'|',a.[Mother_Deceased],'|',a.[Parents_Divorced],'|',&#xA;&#x9;&#x9;&#x9;&#x9;a.[Med_Cond_Family_Member],'|',a.[Med_Cond_Self],'|',a.[Specify_Med_Cond]) &#xA;&#x9;&#x9;&#x9;&#x9;as [Special_Circumstances]&#xA;&#x9;&#x9;,a.[Comments] as [Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,a.[Disbursed_Date] as [Disbursement_Date]&#xA;&#x9;from Stud_App_Bursary a &#xA;&#x9;LEFT JOIN (select * from &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_EXT_FIN_SCHEME_ID] where Latest_Ind='Y') b &#xA;&#x9;&#x9;on (a.App_Type=b.App_Type or b.App_Type='*') AND&#xA;&#x9;&#x9;(a.App_Status=b.App_Status or b.App_Status='*') AND &#xA;&#x9;&#x9;(a.Schship_Bur_ID=b.Award_Item_ID_Grant_Code or b.Award_Item_ID_Grant_Code='*')&#xA;)&#xA;--select * from OASIS_Fin_Aid&#xA;, OASIS_Fin_Aid_Final as (&#xA;&#x9;select &#xA;&#x9;&#x9;'Scholarship &amp; Bursary' as [Source] &#xA;&#x9;&#x9;,'AY'+[Acad_Yr] as [Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[App_Status_Desc]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Desc]&#xA;&#x9;&#x9;,[Award_Amt]&#xA;&#x9;&#x9;,[Date_Updated]&#xA;&#x9;&#x9;,[Award_Remarks]&#xA;&#x9;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,[Verified_GHI_Award]&#xA;&#x9;&#x9;,[Verified_PCI_Award]&#xA;&#x9;&#x9;,[Num_Household_Members]&#xA;&#x9;&#x9;,[Property_Type]&#xA;&#x9;&#x9;,[Tenancy_Type]&#xA;&#x9;&#x9;,[Special_Circumstances]&#xA;&#x9;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from OASIS_Fin_Aid where Row_Num = 1&#xA;)&#xA;--select * from OASIS_Fin_Aid_Final&#xA;/* End of OASIS_Fin_Aid Table. &#xA;OASIS_Fin_Aid Table is now ready for UNION as OASIS_Fin_Aid_Final.*/&#xA;&#xA;&#xA;---Start of RP_Grant_Claim_Table&#xA;, OASIS_RP_GRANT_CLAIM as(&#xA;&#x9;SELECT &#xA;&#x9;&#x9;  [Event_ID]&#xA;&#x9;&#x9;  ,[Student_ID]&#xA;&#x9;&#x9;  ,[Grant_Code]&#xA;&#x9;&#x9;  ,[Desc]&#xA;&#x9;&#x9;  ,[Amt]&#xA;&#x9;FROM &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_RP_GRANT_CLAIM] &#xA;&#x9;where [Latest_Ind]='Y'&#xA;)&#xA;, OASIS_EVENT_SETUP as (&#xA;&#x9;select &#xA;&#x9;&#x9;[Event_ID]&#xA;&#x9;&#x9;,[Activity_Title]&#xA;&#x9;&#x9;,[Actual_Event_Start_Date]&#xA;&#x9;&#x9;,[Activity_Outline]&#xA;&#x9;FROM &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_EVENT_SETUP] &#xA;&#x9;where [Latest_Ind]='Y'&#xA;)&#xA;, RP_Claim_w_Event as ( -- joins STG_OASIS_RP_GRANT_CLAIM w STG_OASIS_EVENT_SETUP&#xA;&#x9;select &#xA;&#x9;&#x9;'AY'+convert(varchar, year(es.[Actual_Event_Start_Date])) as [Acad_Yr]&#xA;&#x9;&#x9;,rpc.[Student_ID]&#xA;&#x9;&#x9;,rpc.[Event_ID]&#xA;&#x9;&#x9;,rpc.[Grant_Code]&#xA;&#x9;&#x9;,'AWD' [App_Status]&#xA;&#x9;&#x9;,'Awarded' [App_Status_Desc]&#xA;&#x9;&#x9;,'OFSOT' [Award_ID]&#xA;&#x9;&#x9;,rpc.[Desc]&#xA;&#x9;&#x9;,rpc.[Amt]&#xA;&#x9;&#x9;,es.[Actual_Event_Start_Date]&#xA;&#x9;&#x9;,es.[Activity_Title]&#xA;&#x9;&#x9;,es.[Activity_Outline]&#xA;&#x9;from OASIS_RP_GRANT_CLAIM rpc&#xA;&#x9;LEFT JOIN OASIS_EVENT_SETUP es &#xA;&#x9;on rpc.Event_ID=es.Event_ID&#xA;)&#xA;--select * from RP_Claim_w_Event&#xA;&#xA;, Grant_Claim_Table as ( -- joins RP_Claim_w_Event with Fin_Scheme_ID&#xA;&#x9;select &#xA;&#x9;&#x9;[Acad_Yr]&#xA;&#x9;&#x9;,case when 3&lt;= month([Actual_Event_Start_Date]) AND month([Actual_Event_Start_Date])&lt;=8 &#xA;&#x9;&#x9;&#x9;&#x9;then concat('AY', right([Acad_Yr],2),'S1')&#xA;&#x9;&#x9;&#x9;&#x9;else concat('AY', right([Acad_Yr],2),'S2')&#xA;&#x9;&#x9;&#x9;&#x9;end [Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Category] is null then 'Others'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Category]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Category]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Type] is null then a.[Grant_Code]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Type]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Type]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Desc] is null then a.[Desc]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Desc]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Status_Desc] is null then a.[App_Status_Desc]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,b.[Priority]&#xA;&#x9;&#x9;,ROW_NUMBER() OVER (&#xA;&#x9;&#x9;Partition BY a.Student_ID,a.Acad_Yr,a.Event_ID,a.Grant_Code,a.App_Status &#xA;&#x9;&#x9;&#x9;ORDER BY CAST(b.[Priority] AS INT)&#xA;&#x9;&#x9;) Row_Num&#xA;&#x9;&#x9;,a.[Event_ID] as [App_ID]&#xA;&#x9;&#x9;,a.[Grant_Code] as [App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,a.[App_Status_Desc]&#xA;&#x9;&#x9;,a.[Award_ID]&#xA;&#x9;&#x9;,a.[Desc] as [Award_Desc]&#xA;&#x9;&#x9;,a.[Amt] as [Award_Amt]&#xA;&#x9;&#x9;,a.[Actual_Event_Start_Date] as [Date_Updated]&#xA;&#x9;&#x9;,a.[Activity_Title] as [Award_Remarks]&#xA;&#x9;&#x9;,NULL as [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,NULL as [Verified_GHI_Award]&#xA;&#x9;&#x9;,NULL as [Verified_PCI_Award]&#xA;&#x9;&#x9;,NULL as [Num_Household_Members]&#xA;&#x9;&#x9;,NULL as [Property_Type]&#xA;&#x9;&#x9;,NULL as [Tenancy_Type]&#xA;&#x9;&#x9;,NULL as [Special_Circumstances]&#xA;&#x9;&#x9;,a.[Activity_Outline] as [Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,NULL as [Disbursement_Date]&#xA;&#x9;&#x9;from RP_Claim_w_Event a&#xA;&#x9;&#x9;LEFT JOIN Fin_Scheme_ID b&#xA;&#x9;&#x9;on (a.Grant_Code=b.App_Type or b.App_Type='*') AND&#xA;&#x9;&#x9;&#x9;(a.App_Status=b.App_Status or b.App_Status='*') AND &#xA;&#x9;&#x9;&#x9;(b.Award_Item_ID_Grant_Code='*')&#xA;)&#xA;&#xA;, Grant_Claim_Table_Final as (&#xA;&#x9;select &#xA;&#x9;&#x9;'RP Grant Claim' [Source]&#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[App_Status_Desc]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Desc]&#xA;&#x9;&#x9;,[Award_Amt]&#xA;&#x9;&#x9;,[Date_Updated]&#xA;&#x9;&#x9;,[Award_Remarks]&#xA;&#x9;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,[Verified_GHI_Award]&#xA;&#x9;&#x9;,[Verified_PCI_Award]&#xA;&#x9;&#x9;,[Num_Household_Members]&#xA;&#x9;&#x9;,[Property_Type]&#xA;&#x9;&#x9;,[Tenancy_Type]&#xA;&#x9;&#x9;,[Special_Circumstances]&#xA;&#x9;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from Grant_Claim_Table where Row_Num=1&#xA;)&#xA;--select * from Grant_Claim_Table_Final&#xA;/* End of Grant_Claim Table. &#xA;Grant_Claim Table is now ready for UNION as Grant_Claim_Table_Final.*/&#xA;&#xA;, OASIS_Prize_Award as (&#xA;&#x9;select &#xA;&#x9;&#x9;'AY20'+left([Term],2) as [Acad_Yr]&#xA;&#x9;&#x9;,case when substring([Term],3,1)=2 &#xA;&#x9;&#x9;&#x9;then 'AY'+left([Term],2)+'S2' &#xA;&#x9;&#x9;&#x9;else 'AY'+left([Term],2)+'S1' &#xA;&#x9;&#x9;&#x9;end [Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Award_Type]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Descr]&#xA;&#x9;&#x9;,[Student_Award_Status]&#xA;&#x9;&#x9;,[Award_Amount]&#xA;&#x9;&#x9;,[Comment]&#xA;&#x9;&#x9;,max([Disbursement_Date]) as [Disbursement_Date]&#xA;&#x9;from &quot;+ @[$Project::Staging_Initial_Catalog] +&quot;.[dbo].[STG_OASIS_PRIZE_AND_AWARD]&#xA;&#x9;where [Award_Type] in ('EG', 'EM', 'ES') and&#xA;&#x9;&#x9;&#x9;[Student_Award_Status]='A' and &#xA;&#x9;&#x9;&#x9;[Latest_ind]='Y' &#xA;&#x9;group by &#xA;&#x9;&#x9;[Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Award_Type]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Descr]&#xA;&#x9;&#x9;,[Student_Award_Status]&#xA;&#x9;&#x9;,[Award_Amount]&#xA;&#x9;&#x9;,[Comment]&#xA;)&#xA;--select * from OASIS_Prize_Award&#xA;&#xA;, Prize_Award_Base as (&#xA;&#x9;select &#xA;&#x9;&#x9;[Student_ID]&#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,concat([Award_Type], [Award_ID], [Acad_Term]) as [App_ID]&#xA;&#x9;&#x9;,[Award_Type]&#xA;&#x9;&#x9;,'AWD' [App_Status]&#xA;&#x9;&#x9;,'Awarded' [App_Status_Desc]&#xA;&#x9;&#x9;,[Student_Award_Status]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Amount]&#xA;&#x9;&#x9;,[Descr]&#xA;&#x9;&#x9;,[Comment]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from OASIS_Prize_Award&#xA;)&#xA;--select distinct App_ID, Student_ID, Award_Type, App_Status, Acad_Yr from Prize_Award_Base&#xA;, Award_Base_Table as (&#xA;&#x9;select &#xA;&#x9;&#x9;a.[Acad_Yr]&#xA;&#x9;&#x9;,a.[Acad_Term]&#xA;&#x9;&#x9;,a.[Student_ID]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Category] is null then 'Others'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Category]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Category]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Type] is null then a.[Award_Type]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Type]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Type]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Desc] is null then a.[Descr]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Desc]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Status_Desc] is null then a.[Student_Award_Status]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,b.[Priority]&#xA;&#x9;&#x9;,ROW_NUMBER() OVER (&#xA;&#x9;&#x9;&#x9;Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.Award_Type,a.App_Status &#xA;&#x9;&#x9;&#x9;ORDER BY CAST(b.[Priority] AS INT)&#xA;&#x9;&#x9;) Row_Num&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[Award_Type] as [App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,a.[App_Status_Desc]&#xA;&#x9;&#x9;,a.[Award_ID]&#xA;&#x9;&#x9;,a.[Descr] as [Award_Desc]&#xA;&#x9;&#x9;,a.[Award_Amount] as [Award_Amt]&#xA;&#x9;&#x9;,NULL as [Date_Updated]&#xA;&#x9;&#x9;,NULL as [Award_Remarks]&#xA;&#x9;&#x9;,NULL as [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,NULL as [Verified_GHI_Award]&#xA;&#x9;&#x9;,NULL as [Verified_PCI_Award]&#xA;&#x9;&#x9;,NULL as [Num_Household_Members]&#xA;&#x9;&#x9;,NULL as [Property_Type]&#xA;&#x9;&#x9;,NULL as [Tenancy_Type]&#xA;&#x9;&#x9;,NULL as [Special_Circumstances]&#xA;&#x9;&#x9;,[Comment] as [Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from Prize_Award_Base a &#xA;&#x9;left join Fin_Scheme_ID b &#xA;&#x9;on (a.Award_Type=b.App_Type or b.App_Type='*') and &#xA;&#x9;(a.App_Status=b.App_Status or b.App_Status='*') and &#xA;&#x9;(a.Award_ID=b.Award_Item_ID_Grant_Code or b.Award_Item_ID_Grant_Code='*') &#xA;)&#xA;&#xA;, Award_Base_Table_Final as (&#xA;&#x9;select &#xA;&#x9;&#x9;'Edusave Awards' [Source]&#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[App_Status_Desc]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Desc]&#xA;&#x9;&#x9;,[Award_Amt]&#xA;&#x9;&#x9;,[Date_Updated]&#xA;&#x9;&#x9;,[Award_Remarks]&#xA;&#x9;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,[Verified_GHI_Award]&#xA;&#x9;&#x9;,[Verified_PCI_Award]&#xA;&#x9;&#x9;,[Num_Household_Members]&#xA;&#x9;&#x9;,[Property_Type]&#xA;&#x9;&#x9;,[Tenancy_Type]&#xA;&#x9;&#x9;,[Special_Circumstances]&#xA;&#x9;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from Award_Base_Table where Row_Num = 1&#xA;)&#xA;&#xA;&#xA;, Fin_Scheme_App_w_Stud_Detail as (&#xA;&#x9;SELECT &#xA;&#x9;&#x9;a.[Student_ID]&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[Fin_Scheme_Applied]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,'Active' [App_Status_Desc]&#xA;&#x9;&#x9;,a.[Fin_Scheme_Applied_Desc]&#xA;&#x9;&#x9;,a.[Last_Updated_Date]&#xA;&#x9;&#x9;,a.[Subsidy_Percentage]&#xA;&#x9;&#x9;,a.[Comment]&#xA;&#x9;&#x9;,'AY'+b.[Acad_Year] as [Acad_Yr]&#xA;&#x9;FROM (select * from [DW_FINANCIAL_SCHEME_APPLICATION] &#xA;&#x9;&#x9;&#x9;where [Fin_Scheme_Applied] in ('MDK', 'TFL') &#xA;&#x9;&#x9;&#x9;and [App_Status]='ACTV') a&#xA;INNER JOIN (select distinct [Student_ID], [Acad_Year] from [DW_STUDENT_DETAILS_BY_ACAD_TERM]) b &#xA;on a.[Student_ID]=b.[Student_ID]&#xA;)&#xA;&#xA;, Fin_Scheme_App as (&#xA;&#x9;select &#xA;&#x9;&#x9;[Acad_Yr]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Category] is null then 'Others'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Category]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Category]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Type] is null then a.[Fin_Scheme_Applied]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Type]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Type]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Desc] is null then a.[Fin_Scheme_Applied_Desc]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Desc]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Status_Desc] is null then a.[App_Status_Desc]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,b.[Priority]&#xA;&#x9;&#x9;,ROW_NUMBER() OVER (&#xA;&#x9;&#x9;&#x9;Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.Fin_Scheme_Applied,a.App_Status &#xA;&#x9;&#x9;&#x9;ORDER BY CAST(b.[Priority] AS INT)&#xA;&#x9;&#x9;) Row_Num&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[Fin_Scheme_Applied] as [App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,a.[App_Status_Desc]&#xA;&#x9;&#x9;,NULL as [Award_ID]&#xA;&#x9;&#x9;,a.[Fin_Scheme_Applied_Desc] as [Award_Desc]&#xA;&#x9;&#x9;,NULL as [Award_Amt]&#xA;&#x9;&#x9;,a.[Last_Updated_Date] as [Date_Updated]&#xA;&#x9;&#x9;,convert(varchar, a.[Subsidy_Percentage]) as [Award_Remarks]&#xA;&#x9;&#x9;,NULL as [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,NULL as [Verified_GHI_Award]&#xA;&#x9;&#x9;,NULL as [Verified_PCI_Award]&#xA;&#x9;&#x9;,NULL as [Num_Household_Members]&#xA;&#x9;&#x9;,NULL as [Property_Type]&#xA;&#x9;&#x9;,NULL as [Tenancy_Type]&#xA;&#x9;&#x9;,NULL as [Special_Circumstances]&#xA;&#x9;&#x9;,a.[Comment] as [Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,NULL as [Disbursement_Date]&#xA;&#x9;from Fin_Scheme_App_w_Stud_Detail a &#xA;&#x9;LEFT JOIN Fin_Scheme_ID b &#xA;&#x9;on (a.Fin_Scheme_Applied=b.App_Type or b.App_Type='*') AND&#xA;&#x9;(a.App_Status=b.App_Status or b.App_Status='*') AND &#xA;&#x9;(b.Award_Item_ID_Grant_Code='*')&#xA;)&#xA;&#xA;, Fin_Scheme_App_Final as (&#xA;&#x9;select &#xA;&#x9;&#x9;'OFN Financial Scheme Application' [Source]&#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,NULL as [Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[App_Status_Desc]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Desc]&#xA;&#x9;&#x9;,[Award_Amt]&#xA;&#x9;&#x9;,[Date_Updated]&#xA;&#x9;&#x9;,[Award_Remarks]&#xA;&#x9;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,[Verified_GHI_Award]&#xA;&#x9;&#x9;,[Verified_PCI_Award]&#xA;&#x9;&#x9;,[Num_Household_Members]&#xA;&#x9;&#x9;,[Property_Type]&#xA;&#x9;&#x9;,[Tenancy_Type]&#xA;&#x9;&#x9;,[Special_Circumstances]&#xA;&#x9;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from Fin_Scheme_App &#xA;&#x9;where Row_Num=1&#xA;)&#xA;&#xA;&#xA;, DW_Cust_Acct_Base as (&#xA;&#x9;select &#xA;&#x9;&#x9;'AY20'+left([Acct_Term],2) as [Acad_Yr]&#xA;&#x9;&#x9;,case when right([Acct_Term],2)='10' &#xA;&#x9;&#x9;&#x9;then 'AY'+left([Acct_Term],2)+'S1'&#xA;&#x9;&#x9;&#x9;else 'AY'+left([Acct_Term],2)+'S2'&#xA;&#x9;&#x9;&#x9;end [Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Acct_Term]&#xA;&#x9;&#x9;,[Item]&#xA;&#x9;&#x9;,[Item_Type]&#xA;&#x9;&#x9;,[Item_Type]+'_'+[Acct_Term] as [App_ID]&#xA;&#x9;&#x9;,case when [Item]='Payment by PSEA SO' then 'PSSO'&#xA;&#x9;&#x9;&#x9;&#x9;when [Item]='Payment by CPF' then 'CPF'&#xA;&#x9;&#x9;&#x9;&#x9;when [Item]='Payment by Mendaki' then 'MDK'&#xA;&#x9;&#x9;&#x9;&#x9;else 'TFL'&#xA;&#x9;&#x9;&#x9;&#x9;end [App_Type]&#xA;&#x9;&#x9;,'PAYM' [App_Status]&#xA;&#x9;&#x9;,max([Effective]) as [Date_Updated]&#xA;&#x9;&#x9;,max([Billed]) as [Disbursement_Date]&#xA;&#x9;&#x9;,abs(sum([Amt])) as [Award_Amt]&#xA;&#x9;FROM [DW_CUSTOMER_ACCT_BALANCE_DETAIL]  &#xA;&#x9;WHERE [Item] in ('Payment by Mendaki', 'Payment by CPF', 'Payment by PSEA SO', 'Payment by TFL') &#xA;&#x9;and [Business_Unit] = 'RPPET'&#xA;&#x9;group by &#xA;&#x9;&#x9;[Student_ID]&#xA;&#x9;&#x9;,[Acct_Term]&#xA;&#x9;&#x9;,[Item]&#xA;&#x9;&#x9;,[Item_Type]&#xA;)&#xA;&#xA;, Cust_Bal_w_Term_Setup as (&#xA;&#x9;select &#xA;&#x9;&#x9;'AY'+b.[Acad_Year] as [Acad_Yr]&#xA;&#x9;&#x9;,'AY'+right(b.[Acad_Year],2)+'S'+b.[Semester] as [Acad_Term]&#xA;&#x9;&#x9;,a.[Student_ID]&#xA;&#x9;&#x9;,a.[Acct_Term]&#xA;&#x9;&#x9;,a.[Item]&#xA;&#x9;&#x9;,a.[Item_Type]&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,a.[Date_Updated]&#xA;&#x9;&#x9;,a.[Disbursement_Date]&#xA;&#x9;&#x9;,a.[Award_Amt]&#xA;&#x9;from DW_Cust_Acct_Base a&#xA;&#x9;left join (select * from [DW_TERM_SETUP] where [Qual_Type]='DPFT') b &#xA;&#x9;on a.[Acct_Term]=b.[Term]&#xA;)&#xA;--select * from Cust_Bal_w_Term_Setup&#xA;, Cust_Acct_Bal as (&#xA;&#x9;select &#xA;&#x9;&#x9;[Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Category] is null then 'Others'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Category]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Category]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Type] is null then a.[App_Type]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Type]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Type]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Desc] is null then a.[Item]&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Desc]&#xA;&#x9;&#x9;,case when b.[Fin_Aid_Status_Desc] is null then 'Payment'&#xA;&#x9;&#x9;&#x9;else b.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;&#x9;end [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,b.[Priority]&#xA;&#x9;&#x9;,ROW_NUMBER() OVER (&#xA;&#x9;&#x9;&#x9;Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.App_Type,a.App_Status &#xA;&#x9;&#x9;&#x9;ORDER BY CAST(b.[Priority] AS INT)&#xA;&#x9;&#x9;) Row_Num&#xA;&#x9;&#x9;,a.[App_ID]&#xA;&#x9;&#x9;,a.[App_Type]&#xA;&#x9;&#x9;,a.[App_Status]&#xA;&#x9;&#x9;,'Payment' as [App_Status_Desc]&#xA;&#x9;&#x9;,a.[Item_Type] as [Award_ID]&#xA;&#x9;&#x9;,a.[Item] as [Award_Desc]&#xA;&#x9;&#x9;,a.[Award_Amt]&#xA;&#x9;&#x9;,a.[Date_Updated]&#xA;&#x9;&#x9;,a.[Item] as [Award_Remarks]&#xA;&#x9;&#x9;,NULL as [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,NULL as [Verified_GHI_Award]&#xA;&#x9;&#x9;,NULL as [Verified_PCI_Award]&#xA;&#x9;&#x9;,NULL as [Num_Household_Members]&#xA;&#x9;&#x9;,NULL as [Property_Type]&#xA;&#x9;&#x9;,NULL as [Tenancy_Type]&#xA;&#x9;&#x9;,NULL as [Special_Circumstances]&#xA;&#x9;&#x9;,NULL as [Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,a.[Disbursement_Date]&#xA;&#x9;from DW_Cust_Acct_Base a &#xA;&#x9;LEFT JOIN Fin_Scheme_ID b &#xA;&#x9;on (a.App_Type=b.App_Type or b.App_Type='*') AND&#xA;&#x9;(a.App_Status=b.App_Status or b.App_Status='*') AND &#xA;&#x9;(b.Award_Item_ID_Grant_Code='*')&#xA;)&#xA;, Cust_Acct_Bal_Final as (&#xA;&#x9;select &#xA;&#x9;&#x9;'OFN Financial Scheme Payment' [Source]&#xA;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;,[Acad_Term]&#xA;&#x9;&#x9;,[Student_ID]&#xA;&#x9;&#x9;,[Fin_Aid_Category]&#xA;&#x9;&#x9;,[Fin_Aid_Type]&#xA;&#x9;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,[App_ID]&#xA;&#x9;&#x9;,[App_Type]&#xA;&#x9;&#x9;,[App_Status]&#xA;&#x9;&#x9;,[App_Status_Desc]&#xA;&#x9;&#x9;,[Award_ID]&#xA;&#x9;&#x9;,[Award_Desc]&#xA;&#x9;&#x9;,[Award_Amt]&#xA;&#x9;&#x9;,[Date_Updated]&#xA;&#x9;&#x9;,[Award_Remarks]&#xA;&#x9;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,[Verified_GHI_Award]&#xA;&#x9;&#x9;,[Verified_PCI_Award]&#xA;&#x9;&#x9;,[Num_Household_Members]&#xA;&#x9;&#x9;,[Property_Type]&#xA;&#x9;&#x9;,[Tenancy_Type]&#xA;&#x9;&#x9;,[Special_Circumstances]&#xA;&#x9;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,[Disbursement_Date]&#xA;&#x9;from Cust_Acct_Bal &#xA;&#x9;where Row_Num=1&#xA;)&#xA;&#xA;/* this table is only for used to insert dummy record to show how the join removes the duplicates, &#xA;to be removed during production */&#xA;/*&#xA;, OSS_Fin_Aid_w_Mock as (&#xA;&#x9;select * from OSS_Fin_Aid_Final&#xA;&#x9;union&#xA;&#x9;select &#xA;&#x9;&#x9;'test-case' [Source]&#xA;&#x9;&#x9;,'AY2010' [Acad_Yr]&#xA;&#x9;&#x9;,'AY10S3' [Acad_Term]&#xA;&#x9;&#x9;,'101083' [Student_ID]&#xA;&#x9;&#x9;,'Others' [Fin_Aid_Category]&#xA;&#x9;&#x9;,'IMDA' [Fin_Aid_Type]&#xA;&#x9;&#x9;,'IMDA Laptop Scheme' [Fin_Aid_Desc]&#xA;&#x9;&#x9;,'Approved' [Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,'830000000020995' [App_ID]&#xA;&#x9;&#x9;,'SEMS' [App_Type]&#xA;&#x9;&#x9;,'WDN' [App_Status]&#xA;&#x9;&#x9;,NULL [App_Status_Desc]&#xA;&#x9;&#x9;,'Tier1' [Award_ID]&#xA;&#x9;&#x9;,NULL [Award_Desc]&#xA;&#x9;&#x9;,NULL [Award_Amt]&#xA;&#x9;&#x9;,convert(date, '2014-04-21') [Date_Updated]&#xA;&#x9;&#x9;,'LMP(1)' [Award_Remarks]&#xA;&#x9;&#x9;,NULL [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,1494.50 [Verified_GHI_Award]&#xA;&#x9;&#x9;,298.90 [Verified_PCI_Award]&#xA;&#x9;&#x9;,NULL [Num_Household_Members]&#xA;&#x9;&#x9;,NULL [Property_Type]&#xA;&#x9;&#x9;,NULL [Tenancy_Type]&#xA;&#x9;&#x9;,NULL [Special_Circumstances]&#xA;&#x9;&#x9;,NULL [Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,NULL [Disbursement_Date]&#xA;)&#xA;*/&#xA;/* pls remove OSS_Fin_Aid_w_Mock for production*/&#xA;&#xA;/*using Left Excluding Join, this step removes &#xA;overlapping records based on PKs from the left table*/&#xA;, OASIS_Fin_Aid_Final_remove_dup as (&#xA;&#x9;select &#xA;&#x9;&#x9;l.[Source]&#xA;&#x9;&#x9;,l.[Acad_Yr]&#xA;&#x9;&#x9;,l.[Acad_Term]&#xA;&#x9;&#x9;,l.[Student_ID]&#xA;&#x9;&#x9;,l.[Fin_Aid_Category]&#xA;&#x9;&#x9;,l.[Fin_Aid_Type]&#xA;&#x9;&#x9;,l.[Fin_Aid_Desc]&#xA;&#x9;&#x9;,l.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,l.[App_ID]&#xA;&#x9;&#x9;,l.[App_Type]&#xA;&#x9;&#x9;,l.[App_Status]&#xA;&#x9;&#x9;,l.[App_Status_Desc]&#xA;&#x9;&#x9;,l.[Award_ID]&#xA;&#x9;&#x9;,l.[Award_Desc]&#xA;&#x9;&#x9;,l.[Award_Amt]&#xA;&#x9;&#x9;,l.[Date_Updated]&#xA;&#x9;&#x9;,l.[Award_Remarks]&#xA;&#x9;&#x9;,l.[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,l.[Verified_GHI_Award]&#xA;&#x9;&#x9;,l.[Verified_PCI_Award]&#xA;&#x9;&#x9;,l.[Num_Household_Members]&#xA;&#x9;&#x9;,l.[Property_Type]&#xA;&#x9;&#x9;,l.[Tenancy_Type]&#xA;&#x9;&#x9;,l.[Special_Circumstances]&#xA;&#x9;&#x9;,l.[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,l.[Disbursement_Date]&#xA;&#x9;from OASIS_Fin_Aid_Final l&#xA;&#x9;left join OSS_Fin_Aid_Final r &#xA;&#x9;on l.App_ID=r.App_ID and l.App_Type=r.App_Type and &#xA;&#x9;&#x9;l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and &#xA;&#x9;&#x9;l.Acad_Yr=r.Acad_Yr&#xA;&#x9;where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null&#xA;&#x9;--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null&#xA;)&#xA;--select * from OASIS_Fin_Aid_Final_remove_dup&#xA;, Grant_Claim_Table_Final_remove_dup as (&#xA;&#x9;select &#xA;&#x9;&#x9;l.[Source]&#xA;&#x9;&#x9;,l.[Acad_Yr]&#xA;&#x9;&#x9;,l.[Acad_Term]&#xA;&#x9;&#x9;,l.[Student_ID]&#xA;&#x9;&#x9;,l.[Fin_Aid_Category]&#xA;&#x9;&#x9;,l.[Fin_Aid_Type]&#xA;&#x9;&#x9;,l.[Fin_Aid_Desc]&#xA;&#x9;&#x9;,l.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,l.[App_ID]&#xA;&#x9;&#x9;,l.[App_Type]&#xA;&#x9;&#x9;,l.[App_Status]&#xA;&#x9;&#x9;,l.[App_Status_Desc]&#xA;&#x9;&#x9;,l.[Award_ID]&#xA;&#x9;&#x9;,l.[Award_Desc]&#xA;&#x9;&#x9;,l.[Award_Amt]&#xA;&#x9;&#x9;,l.[Date_Updated]&#xA;&#x9;&#x9;,l.[Award_Remarks]&#xA;&#x9;&#x9;,l.[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,l.[Verified_GHI_Award]&#xA;&#x9;&#x9;,l.[Verified_PCI_Award]&#xA;&#x9;&#x9;,l.[Num_Household_Members]&#xA;&#x9;&#x9;,l.[Property_Type]&#xA;&#x9;&#x9;,l.[Tenancy_Type]&#xA;&#x9;&#x9;,l.[Special_Circumstances]&#xA;&#x9;&#x9;,l.[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,l.[Disbursement_Date]&#xA;&#x9;from Grant_Claim_Table_Final l&#xA;&#x9;left join OSS_Fin_Aid_Final r &#xA;&#x9;on l.App_ID=r.App_ID and l.App_Type=r.App_Type and &#xA;&#x9;&#x9;l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and &#xA;&#x9;&#x9;l.Acad_Yr=r.Acad_Yr&#xA;&#x9;where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null&#xA;&#x9;--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null&#xA;)&#xA;&#xA;, Award_Base_Table_Final_remove_dup as (&#xA;&#x9;select &#xA;&#x9;&#x9;l.[Source]&#xA;&#x9;&#x9;,l.[Acad_Yr]&#xA;&#x9;&#x9;,l.[Acad_Term]&#xA;&#x9;&#x9;,l.[Student_ID]&#xA;&#x9;&#x9;,l.[Fin_Aid_Category]&#xA;&#x9;&#x9;,l.[Fin_Aid_Type]&#xA;&#x9;&#x9;,l.[Fin_Aid_Desc]&#xA;&#x9;&#x9;,l.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,l.[App_ID]&#xA;&#x9;&#x9;,l.[App_Type]&#xA;&#x9;&#x9;,l.[App_Status]&#xA;&#x9;&#x9;,l.[App_Status_Desc]&#xA;&#x9;&#x9;,l.[Award_ID]&#xA;&#x9;&#x9;,l.[Award_Desc]&#xA;&#x9;&#x9;,l.[Award_Amt]&#xA;&#x9;&#x9;,l.[Date_Updated]&#xA;&#x9;&#x9;,l.[Award_Remarks]&#xA;&#x9;&#x9;,l.[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,l.[Verified_GHI_Award]&#xA;&#x9;&#x9;,l.[Verified_PCI_Award]&#xA;&#x9;&#x9;,l.[Num_Household_Members]&#xA;&#x9;&#x9;,l.[Property_Type]&#xA;&#x9;&#x9;,l.[Tenancy_Type]&#xA;&#x9;&#x9;,l.[Special_Circumstances]&#xA;&#x9;&#x9;,l.[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,l.[Disbursement_Date]&#xA;&#x9;from Award_Base_Table_Final l&#xA;&#x9;left join OSS_Fin_Aid_Final r &#xA;&#x9;on l.App_ID=r.App_ID and l.App_Type=r.App_Type and &#xA;&#x9;&#x9;l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and &#xA;&#x9;&#x9;l.Acad_Yr=r.Acad_Yr&#xA;&#x9;where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null&#xA;&#x9;--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null&#xA;)&#xA;&#xA;, Fin_Scheme_App_Final_remove_dup as (&#xA;&#x9;select &#xA;&#x9;&#x9;l.[Source]&#xA;&#x9;&#x9;,l.[Acad_Yr]&#xA;&#x9;&#x9;,l.[Acad_Term]&#xA;&#x9;&#x9;,l.[Student_ID]&#xA;&#x9;&#x9;,l.[Fin_Aid_Category]&#xA;&#x9;&#x9;,l.[Fin_Aid_Type]&#xA;&#x9;&#x9;,l.[Fin_Aid_Desc]&#xA;&#x9;&#x9;,l.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,l.[App_ID]&#xA;&#x9;&#x9;,l.[App_Type]&#xA;&#x9;&#x9;,l.[App_Status]&#xA;&#x9;&#x9;,l.[App_Status_Desc]&#xA;&#x9;&#x9;,l.[Award_ID]&#xA;&#x9;&#x9;,l.[Award_Desc]&#xA;&#x9;&#x9;,l.[Award_Amt]&#xA;&#x9;&#x9;,l.[Date_Updated]&#xA;&#x9;&#x9;,l.[Award_Remarks]&#xA;&#x9;&#x9;,l.[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,l.[Verified_GHI_Award]&#xA;&#x9;&#x9;,l.[Verified_PCI_Award]&#xA;&#x9;&#x9;,l.[Num_Household_Members]&#xA;&#x9;&#x9;,l.[Property_Type]&#xA;&#x9;&#x9;,l.[Tenancy_Type]&#xA;&#x9;&#x9;,l.[Special_Circumstances]&#xA;&#x9;&#x9;,l.[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,l.[Disbursement_Date]&#xA;&#x9;from Fin_Scheme_App_Final l&#xA;&#x9;left join OSS_Fin_Aid_Final r &#xA;&#x9;on l.App_ID=r.App_ID and l.App_Type=r.App_Type and &#xA;&#x9;&#x9;l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and &#xA;&#x9;&#x9;l.Acad_Yr=r.Acad_Yr&#xA;&#x9;where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null&#xA;&#x9;--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null&#xA;)&#xA;&#xA;, Cust_Acct_Bal_Final_remove_dup as (&#xA;&#x9;select &#xA;&#x9;&#x9;l.[Source]&#xA;&#x9;&#x9;,l.[Acad_Yr]&#xA;&#x9;&#x9;,l.[Acad_Term]&#xA;&#x9;&#x9;,l.[Student_ID]&#xA;&#x9;&#x9;,l.[Fin_Aid_Category]&#xA;&#x9;&#x9;,l.[Fin_Aid_Type]&#xA;&#x9;&#x9;,l.[Fin_Aid_Desc]&#xA;&#x9;&#x9;,l.[Fin_Aid_Status_Desc]&#xA;&#x9;&#x9;,l.[App_ID]&#xA;&#x9;&#x9;,l.[App_Type]&#xA;&#x9;&#x9;,l.[App_Status]&#xA;&#x9;&#x9;,l.[App_Status_Desc]&#xA;&#x9;&#x9;,l.[Award_ID]&#xA;&#x9;&#x9;,l.[Award_Desc]&#xA;&#x9;&#x9;,l.[Award_Amt]&#xA;&#x9;&#x9;,l.[Date_Updated]&#xA;&#x9;&#x9;,l.[Award_Remarks]&#xA;&#x9;&#x9;,l.[Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;,l.[Verified_GHI_Award]&#xA;&#x9;&#x9;,l.[Verified_PCI_Award]&#xA;&#x9;&#x9;,l.[Num_Household_Members]&#xA;&#x9;&#x9;,l.[Property_Type]&#xA;&#x9;&#x9;,l.[Tenancy_Type]&#xA;&#x9;&#x9;,l.[Special_Circumstances]&#xA;&#x9;&#x9;,l.[Remarks_Staff_Verifier]&#xA;&#x9;&#x9;,l.[Disbursement_Date]&#xA;&#x9;from Cust_Acct_Bal_Final l&#xA;&#x9;left join OSS_Fin_Aid_Final r &#xA;&#x9;on l.App_ID=r.App_ID and l.App_Type=r.App_Type and &#xA;&#x9;&#x9;l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and &#xA;&#x9;&#x9;l.Acad_Yr=r.Acad_Yr&#xA;&#x9;where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null&#xA;&#x9;--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null&#xA;)&#xA;&#xA;, DW_Fin_Aid_Union as (&#xA;select * from OSS_Fin_Aid_Final&#xA;union&#xA;select * from OASIS_Fin_Aid_Final_remove_dup&#xA;union&#xA;select * from Grant_Claim_Table_Final_remove_dup&#xA;union&#xA;select * from Award_Base_Table_Final_remove_dup&#xA;union&#xA;select * from Fin_Scheme_App_Final_remove_dup&#xA;union&#xA;select * from Cust_Acct_Bal_Final_remove_dup&#xA;)&#xA;&#xA;insert into [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED](&#xA;&#x9;[Source]&#xA;&#x9;,[Acad_Yr]&#xA;&#x9;,[Acad_Term]&#xA;&#x9;,[Student_ID]&#xA;&#x9;,[Fin_Aid_Category]&#xA;&#x9;,[Fin_Aid_Type]&#xA;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;,[App_ID]&#xA;&#x9;,[App_Type]&#xA;&#x9;,[App_Status]&#xA;&#x9;,[App_Status_Desc]&#xA;&#x9;,[Award_ID]&#xA;&#x9;,[Award_Description]&#xA;&#x9;,[Award_Amt]&#xA;&#x9;,[Date_Updated]&#xA;&#x9;,[Award_Remarks]&#xA;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;,[Verified_GHI_Award]&#xA;&#x9;,[Verified_PCI_Award]&#xA;&#x9;,[Num_Household_Members]&#xA;&#x9;,[Property_Type]&#xA;&#x9;,[Tenancy_Type]&#xA;&#x9;,[Special_Circumstances]&#xA;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;,[Disbursement_Date]&#xA;&#x9;,[CREATED_ON]&#xA;&#x9;,[MODIFIED_ON]&#xA;)&#xA;&#xA;select &#xA;&#x9;[Source]&#xA;&#x9;,[Acad_Yr]&#xA;&#x9;,[Acad_Term]&#xA;&#x9;,[Student_ID]&#xA;&#x9;,[Fin_Aid_Category]&#xA;&#x9;,[Fin_Aid_Type]&#xA;&#x9;,[Fin_Aid_Desc]&#xA;&#x9;,[Fin_Aid_Status_Desc]&#xA;&#x9;,[App_ID]&#xA;&#x9;,[App_Type]&#xA;&#x9;,[App_Status]&#xA;&#x9;,[App_Status_Desc]&#xA;&#x9;,[Award_ID]&#xA;&#x9;,[Award_Desc] as [Award_Description]&#xA;&#x9;,[Award_Amt]&#xA;&#x9;,[Date_Updated]&#xA;&#x9;,[Award_Remarks]&#xA;&#x9;,[Eligibility_Govt_Bursary]&#xA;&#x9;,[Verified_GHI_Award]&#xA;&#x9;,[Verified_PCI_Award]&#xA;&#x9;,[Num_Household_Members]&#xA;&#x9;,[Property_Type]&#xA;&#x9;,[Tenancy_Type]&#xA;&#x9;,[Special_Circumstances]&#xA;&#x9;,[Remarks_Staff_Verifier]&#xA;&#x9;,[Disbursement_Date]&#xA;&#x9;,getdate() [Created_On]&#xA;&#x9;,getdate() [Modified_On]&#xA;from DW_Fin_Aid_Union&#xA;&#xA;; update faoc &#xA;&#x9;set faoc.[Eligibility_Govt_Bursary]=upd_faoc.[Eligibility_Govt_Bursary],&#xA;&#x9;&#x9;faoc.[MODIFIED_ON]=GETDATE()&#xA;&#x9;from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED] faoc &#xA;&#x9;inner join ( &#xA;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;[Student_ID]&#xA;&#x9;&#x9;&#x9;,[Acad_Yr]&#xA;&#x9;&#x9;&#x9;,case &#xA;&#x9;&#x9;&#x9;&#x9;when ext_Student_ID is not null then 'N'&#xA;&#x9;&#x9;&#x9;&#x9;when cdc_Student_ID is not null then 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;when sd_Residency_Type in ('PR', 'OTH') then 'N' &#xA;&#x9;&#x9;&#x9;&#x9;else 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;end [Eligibility_Govt_Bursary]&#xA;&#x9;&#x9;from (&#xA;&#x9;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;&#x9;dw_fao.Student_ID &#xA;&#x9;&#x9;&#x9;&#x9;,dw_fao.Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;,ext_fao.Student_ID as ext_Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;,ext_fao.Acad_Yr as ext_Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;,cdc.Student_ID as cdc_Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;,cdc.Acad_Yr as cdc_Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;,sd.Student_ID as sd_Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;,sd.Residency_Type as sd_Residency_Type&#xA;&#x9;&#x9;&#x9;from (&#xA;&#x9;&#x9;&#x9;&#x9;select distinct &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]) dw_fao &#xA;&#x9;&#x9;&#x9;&#x9;left join (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;select distinct &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,Acad_Yr &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;from [dbo].[DW_EXT_FINANCIAL_AID_OUTCOME] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where Eligibility_Govt_Bursary='N') ext_fao&#xA;&#x9;&#x9;&#x9;&#x9;on dw_fao.Student_ID=ext_fao.Student_ID and dw_fao.Acad_Yr=ext_fao.Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;left join (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;select distinct &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where App_Type='CDC' and App_Status not in ('REJ', 'RRP', 'WDN', 'WTD', 'WTH', 'AUS', 'WHD')) cdc &#xA;&#x9;&#x9;&#x9;&#x9;on dw_fao.Student_ID=cdc.Student_ID and dw_fao.Acad_Yr=cdc.Acad_Yr&#xA;&#x9;&#x9;&#x9;&#x9;left join (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Student_ID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,Residency_Type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,row_number() over (partition by Student_ID order by Effective_Date desc) as rownum&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;from [dbo].[DW_STUDENT_DETAILS]) sd &#xA;&#x9;&#x9;&#x9;&#x9;on dw_fao.Student_ID=sd.Student_ID and sd.rownum=1&#xA;&#x9;&#x9;) x ) upd_faoc&#xA;&#x9;on faoc.Student_ID=upd_faoc.Student_ID and faoc.Acad_Yr=upd_faoc.Acad_Yr&#xA;&#xA;--------------------------------------&#xA;COMMIT TRANSACTION&#xA;END TRY&#xA;&#xA;BEGIN CATCH&#xA;  ROLLBACK TRANSACTION&#xA;&#xA;  INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)&#xA;  SELECT   &#xA;         CAST(@jobstatusid as int) as JOB_STATUS_ID&#xA;        ,ERROR_MESSAGE() as ErrorMessage&#xA;&#x9;&#x9;,getdate() as created_on&#xA;  &#xA;END CATCH  &#xA;GO&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQL_DW_Load">
      <DTS:VariableValue
        DTS:DataType="8">BEGIN TRANSACTION
BEGIN TRY
------------
DECLARE @LastDWProcessdate datetime
,@processeddatetime datetime
,@jobstatusid varchar(10)
select @jobstatusid=0
select @LastDWProcessdate= Isnull(max(Modified_on),'1990-01-01 00:00:00.000') from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]--dw table
--select  @processeddatetime=?
--select @LastDWProcessdate
truncate table [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]
---------------------------------


; with Fin_Scheme_ID as (
	SELECT 
		[App_Type]
		,[App_Status]
		,[Award_Item_ID_Grant_Code]
		,[Priority]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
	FROM RPDW_PRD_STG.[dbo].[STG_EXT_FIN_SCHEME_ID]
	where [Latest_Ind]='Y'
)

, Award_Info as (
	select 
		[Award_ID]
		,[Desc]
	from RPDW_PRD_STG.[dbo].[STG_OASIS_AWARD_INFO] 
	where [Latest_Ind]='Y'
)

---Start on OSS_Fin_Aid table, which stems from STG_EXT_FIN_AID_OUTCOME_STATUS
, OSS_Fin_Aid as (
	SELECT 
		a.[Acad_Yr]
		,a.[Acad_Term]
		,a.[Student_ID]
		,case when b.[Fin_Aid_Category] is null then 'Others'
			else b.[Fin_Aid_Category]
			end [Fin_Aid_Category]
		,case when b.[Fin_Aid_Type] is null then a.App_Type
			else b.[Fin_Aid_Type]
			end [Fin_Aid_Type]
		,case when b.[Fin_Aid_Desc] is null then a.App_Type
			else b.[Fin_Aid_Desc]
			end [Fin_Aid_Desc]
		,case when b.[Fin_Aid_Status_Desc] is null then a.App_Status
			else b.[Fin_Aid_Status_Desc]
			end [Fin_Aid_Status_Desc]
			,b.[Priority]
		,ROW_NUMBER() OVER (
			Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.App_Type,a.App_Status 
			ORDER BY CAST(b.[Priority] AS INT)
		) Row_Num
		,a.[App_ID]
		,a.[App_Type]
		,a.[App_Status]
		,case when mc.[Long_Name] is NULL then NULL 
			else mc.[Long_Name] 
			end [App_Status_Desc]
		,a.[Award_ID]
		,case when ai.[Desc] is NULL then NULL 
			else ai.[Desc] 
			end [Award_Desc]
		,a.[Award_Amt]
		,a.[Date_Updated]
		,a.[Award_Remarks]
		,a.[Eligibility_Govt_Bursary]
		,a.[Verified_GHI_Award]
		,a.[Verified_PCI_Award]
		,a.[Num_Household_Members]
		,a.[Property_Type]
		,a.[Tenancy_Type]
		,a.[Special_Circumstances]
		,a.[Remarks_Staff_Verifier]
		,NULL [Disbursement_Date]
	FROM (select * from RPDW_PRD_STG.[dbo].[STG_EXT_FIN_AID_OUTCOME_STATUS] where Latest_Ind='Y') a
	LEFT JOIN Fin_Scheme_ID b 
	on (a.App_Type=b.App_Type or b.App_Type='*') AND
		(a.App_Status=b.App_Status or b.App_Status='*') AND 
		(a.Award_ID=b.Award_Item_ID_Grant_Code or b.Award_Item_ID_Grant_Code='*')
	LEFT JOIN RPDW_PRD_STG.[dbo].[STG_OASIS_MASTER_CODE] mc on a.App_Status=mc.Field_Value and mc.Field_Name='A_SF_APPL_STA'
	and mc.Effective_Status='A'
	LEFT JOIN Award_Info ai 
	on a.Award_ID=ai.Award_ID 
)
, OSS_Fin_Aid_Final as (
	select 
		'OSS External' as [Source] 
		,[Acad_Yr]
		,[Acad_Term]
		,[Student_ID]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
		,[App_ID]
		,[App_Type]
		,[App_Status]
		,[App_Status_Desc]
		,[Award_ID]
		,[Award_Desc]
		,[Award_Amt]
		,[Date_Updated]
		,[Award_Remarks]
		,[Eligibility_Govt_Bursary]
		,[Verified_GHI_Award]
		,[Verified_PCI_Award]
		,[Num_Household_Members]
		,[Property_Type]
		,[Tenancy_Type]
		,[Special_Circumstances]
		,[Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from OSS_Fin_Aid where Row_Num=1
)
--select * from OSS_Fin_Aid_Final
/* End of OSS_Fin_Aid Table. 
OSS_Fin_Aid Table is now ready for UNION as OSS_Fin_Aid_Final.*/


-----Start on OASIS_Fin_Aid table, which stems from STG_OASIS_BUR_SCHOLAR_STATUS
, OASIS_Bur_Schship as ( --this step is to get the base table for OASIS_Fin_Aid
	select 
		distinct 
		[Student_ID]
		,[Acad_Yr]
		,[App_ID]
		,[App_Type]
		,[App_Type_Decr] as [App_Type_Desc]
		,[App_Status]
		,[Schship_Bur_ID]
		,[Schship_Bur_Name]
		,[Amt]
		,[App_Date]
		,[Comments]
		,[Disbursed_Date]
	from RPDW_PRD_STG.[dbo].[STG_OASIS_BUR_SCHOLAR_STATUS] where Latest_Ind='Y'
)

, Stud_App_Bursary as ( -- joins the base table with STG_OASIS_STUDENT_APP
	SELECT 
		a.[Student_ID]
		,a.[Acad_Yr]
		,a.[App_Date]
		,a.[Disbursed_Date]
		,a.[App_Type]
		,a.[App_Type_Desc]
		,a.[App_Status]
		,case when mc.[Long_Name] is NULL then NULL 
			else mc.[Long_Name] 
			end [App_Status_Desc]
		,a.[App_ID]
		,a.[Schship_Bur_ID]
		,a.[Schship_Bur_Name]
		,a.[Amt]
		,a.[Comments]
		,b.[Gross_Monthly_Household_Income]
		,b.[Per_Capita_Income]
		,b.[Num_Household_Members]
		,b.[Property_Housing_Type]
		,b.[Tenancy_Type]
		,case when b.[Father_Deceased]='Y' then 'Father Deceased'
			else NULL
			end [Father_Deceased]
		,case when b.[Mother_Deceased]='Y' then 'Mother Deceased'
			else NULL
			end [Mother_Deceased]
		,case when b.[Parents_Divorced]='Y' then 'Parents Divorced'
			else NULL
			end [Parents_Divorced]
		,case when b.[Med_Cond_Family_Member]='Y' then 'Med Cond Family Member'
			else NULL
			end [Med_Cond_Family_Member]
		,case when b.[Med_Cond_Self]='Y' then 'Med Cond (Self)'
			else NULL
			end [Med_Cond_Self]
		,case when b.[Specify_Med_Cond] &lt;&gt; NULL then b.[Specify_Med_Cond]
			else NULL
			end [Specify_Med_Cond]
	FROM OASIS_Bur_Schship a
	LEFT JOIN (select * from RPDW_PRD_STG.[dbo].[STG_OASIS_STUDENT_APP] where Latest_Ind='Y') b 
	on a.[Student_ID]=b.[Student_ID] 
		and a.[Acad_Yr]=b.[Acad_Yr] 
		and a.[App_ID]=b.[App_ID] 
		and a.[App_Type]=b.[App_Type]
	LEFT JOIN RPDW_PRD_STG.[dbo].[STG_OASIS_MASTER_CODE] mc 
	on a.App_Status=mc.Field_Value and mc.Field_Name='A_SF_APPL_STA' and mc.Effective_Status='A'
)
--select * from Stud_App_Bursary

, OASIS_Fin_Aid as ( --joins Stud_App_Bursary with Fin_Scheme_ID
	select 
		a.[Acad_Yr]
		,case when 3&lt;= month([App_Date]) AND month([App_Date])&lt;=8 
			then concat('AY', right([Acad_Yr],2),'S1')
			else concat('AY', right([Acad_Yr],2),'S2')
			end [Acad_Term]
		,a.[Student_ID]
		,case when b.[Fin_Aid_Category] is null then 'Others'
			else b.[Fin_Aid_Category]
			end [Fin_Aid_Category]
		,case when b.[Fin_Aid_Type] is null then a.App_Type
			else b.[Fin_Aid_Type]
			end [Fin_Aid_Type]
		,case when b.[Fin_Aid_Desc] is null then a.App_Type_Desc
			else b.[Fin_Aid_Desc]
			end [Fin_Aid_Desc]
		,case when b.[Fin_Aid_Status_Desc] is null then a.App_Status_Desc
			else b.[Fin_Aid_Status_Desc]
			end [Fin_Aid_Status_Desc]
		,b.[Priority]
		,ROW_NUMBER() OVER (
			Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.App_Type,a.App_Status 
				ORDER BY CAST(b.[Priority] AS INT)
			) Row_Num
		,a.[App_ID]
		,a.[App_Type]
		,a.[App_Status]
		,a.[App_Status_Desc]
		,a.[Schship_Bur_ID] as [Award_ID]
		,a.[Schship_Bur_Name] as [Award_Desc]
		,a.[Amt] as [Award_Amt]
		,a.[App_Date] as [Date_Updated]
		,NULL as [Award_Remarks]
		,NULL as [Eligibility_Govt_Bursary]
		,a.[Gross_Monthly_Household_Income] as [Verified_GHI_Award]
		,a.[Per_Capita_Income] as [Verified_PCI_Award]
		,a.[Num_Household_Members]
		,a.[Property_Housing_Type] as [Property_Type]
		,a.[Tenancy_Type]
		,concat(a.[Father_Deceased],'|',a.[Mother_Deceased],'|',a.[Parents_Divorced],'|',
				a.[Med_Cond_Family_Member],'|',a.[Med_Cond_Self],'|',a.[Specify_Med_Cond]) 
				as [Special_Circumstances]
		,a.[Comments] as [Remarks_Staff_Verifier]
		,a.[Disbursed_Date] as [Disbursement_Date]
	from Stud_App_Bursary a 
	LEFT JOIN (select * from RPDW_PRD_STG.[dbo].[STG_EXT_FIN_SCHEME_ID] where Latest_Ind='Y') b 
		on (a.App_Type=b.App_Type or b.App_Type='*') AND
		(a.App_Status=b.App_Status or b.App_Status='*') AND 
		(a.Schship_Bur_ID=b.Award_Item_ID_Grant_Code or b.Award_Item_ID_Grant_Code='*')
)
--select * from OASIS_Fin_Aid
, OASIS_Fin_Aid_Final as (
	select 
		'Scholarship &amp; Bursary' as [Source] 
		,'AY'+[Acad_Yr] as [Acad_Yr]
		,[Acad_Term]
		,[Student_ID]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
		,[App_ID]
		,[App_Type]
		,[App_Status]
		,[App_Status_Desc]
		,[Award_ID]
		,[Award_Desc]
		,[Award_Amt]
		,[Date_Updated]
		,[Award_Remarks]
		,[Eligibility_Govt_Bursary]
		,[Verified_GHI_Award]
		,[Verified_PCI_Award]
		,[Num_Household_Members]
		,[Property_Type]
		,[Tenancy_Type]
		,[Special_Circumstances]
		,[Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from OASIS_Fin_Aid where Row_Num = 1
)
--select * from OASIS_Fin_Aid_Final
/* End of OASIS_Fin_Aid Table. 
OASIS_Fin_Aid Table is now ready for UNION as OASIS_Fin_Aid_Final.*/


---Start of RP_Grant_Claim_Table
, OASIS_RP_GRANT_CLAIM as(
	SELECT 
		  [Event_ID]
		  ,[Student_ID]
		  ,[Grant_Code]
		  ,[Desc]
		  ,[Amt]
	FROM RPDW_PRD_STG.[dbo].[STG_OASIS_RP_GRANT_CLAIM] 
	where [Latest_Ind]='Y'
)
, OASIS_EVENT_SETUP as (
	select 
		[Event_ID]
		,[Activity_Title]
		,[Actual_Event_Start_Date]
		,[Activity_Outline]
	FROM RPDW_PRD_STG.[dbo].[STG_OASIS_EVENT_SETUP] 
	where [Latest_Ind]='Y'
)
, RP_Claim_w_Event as ( -- joins STG_OASIS_RP_GRANT_CLAIM w STG_OASIS_EVENT_SETUP
	select 
		'AY'+convert(varchar, year(es.[Actual_Event_Start_Date])) as [Acad_Yr]
		,rpc.[Student_ID]
		,rpc.[Event_ID]
		,rpc.[Grant_Code]
		,'AWD' [App_Status]
		,'Awarded' [App_Status_Desc]
		,'OFSOT' [Award_ID]
		,rpc.[Desc]
		,rpc.[Amt]
		,es.[Actual_Event_Start_Date]
		,es.[Activity_Title]
		,es.[Activity_Outline]
	from OASIS_RP_GRANT_CLAIM rpc
	LEFT JOIN OASIS_EVENT_SETUP es 
	on rpc.Event_ID=es.Event_ID
)
--select * from RP_Claim_w_Event

, Grant_Claim_Table as ( -- joins RP_Claim_w_Event with Fin_Scheme_ID
	select 
		[Acad_Yr]
		,case when 3&lt;= month([Actual_Event_Start_Date]) AND month([Actual_Event_Start_Date])&lt;=8 
				then concat('AY', right([Acad_Yr],2),'S1')
				else concat('AY', right([Acad_Yr],2),'S2')
				end [Acad_Term]
		,[Student_ID]
		,case when b.[Fin_Aid_Category] is null then 'Others'
			else b.[Fin_Aid_Category]
			end [Fin_Aid_Category]
		,case when b.[Fin_Aid_Type] is null then a.[Grant_Code]
			else b.[Fin_Aid_Type]
			end [Fin_Aid_Type]
		,case when b.[Fin_Aid_Desc] is null then a.[Desc]
			else b.[Fin_Aid_Desc]
			end [Fin_Aid_Desc]
		,case when b.[Fin_Aid_Status_Desc] is null then a.[App_Status_Desc]
			else b.[Fin_Aid_Status_Desc]
			end [Fin_Aid_Status_Desc]
		,b.[Priority]
		,ROW_NUMBER() OVER (
		Partition BY a.Student_ID,a.Acad_Yr,a.Event_ID,a.Grant_Code,a.App_Status 
			ORDER BY CAST(b.[Priority] AS INT)
		) Row_Num
		,a.[Event_ID] as [App_ID]
		,a.[Grant_Code] as [App_Type]
		,a.[App_Status]
		,a.[App_Status_Desc]
		,a.[Award_ID]
		,a.[Desc] as [Award_Desc]
		,a.[Amt] as [Award_Amt]
		,a.[Actual_Event_Start_Date] as [Date_Updated]
		,a.[Activity_Title] as [Award_Remarks]
		,NULL as [Eligibility_Govt_Bursary]
		,NULL as [Verified_GHI_Award]
		,NULL as [Verified_PCI_Award]
		,NULL as [Num_Household_Members]
		,NULL as [Property_Type]
		,NULL as [Tenancy_Type]
		,NULL as [Special_Circumstances]
		,a.[Activity_Outline] as [Remarks_Staff_Verifier]
		,NULL as [Disbursement_Date]
		from RP_Claim_w_Event a
		LEFT JOIN Fin_Scheme_ID b
		on (a.Grant_Code=b.App_Type or b.App_Type='*') AND
			(a.App_Status=b.App_Status or b.App_Status='*') AND 
			(b.Award_Item_ID_Grant_Code='*')
)

, Grant_Claim_Table_Final as (
	select 
		'RP Grant Claim' [Source]
		,[Acad_Yr]
		,[Acad_Term]
		,[Student_ID]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
		,[App_ID]
		,[App_Type]
		,[App_Status]
		,[App_Status_Desc]
		,[Award_ID]
		,[Award_Desc]
		,[Award_Amt]
		,[Date_Updated]
		,[Award_Remarks]
		,[Eligibility_Govt_Bursary]
		,[Verified_GHI_Award]
		,[Verified_PCI_Award]
		,[Num_Household_Members]
		,[Property_Type]
		,[Tenancy_Type]
		,[Special_Circumstances]
		,[Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from Grant_Claim_Table where Row_Num=1
)
--select * from Grant_Claim_Table_Final
/* End of Grant_Claim Table. 
Grant_Claim Table is now ready for UNION as Grant_Claim_Table_Final.*/

, OASIS_Prize_Award as (
	select 
		'AY20'+left([Term],2) as [Acad_Yr]
		,case when substring([Term],3,1)=2 
			then 'AY'+left([Term],2)+'S2' 
			else 'AY'+left([Term],2)+'S1' 
			end [Acad_Term]
		,[Student_ID]
		,[Award_Type]
		,[Award_ID]
		,[Descr]
		,[Student_Award_Status]
		,[Award_Amount]
		,[Comment]
		,max([Disbursement_Date]) as [Disbursement_Date]
	from RPDW_PRD_STG.[dbo].[STG_OASIS_PRIZE_AND_AWARD]
	where [Award_Type] in ('EG', 'EM', 'ES') and
			[Student_Award_Status]='A' and 
			[Latest_ind]='Y' 
	group by 
		[Term]
		,[Student_ID]
		,[Award_Type]
		,[Award_ID]
		,[Descr]
		,[Student_Award_Status]
		,[Award_Amount]
		,[Comment]
)
--select * from OASIS_Prize_Award

, Prize_Award_Base as (
	select 
		[Student_ID]
		,[Acad_Yr]
		,[Acad_Term]
		,concat([Award_Type], [Award_ID], [Acad_Term]) as [App_ID]
		,[Award_Type]
		,'AWD' [App_Status]
		,'Awarded' [App_Status_Desc]
		,[Student_Award_Status]
		,[Award_ID]
		,[Award_Amount]
		,[Descr]
		,[Comment]
		,[Disbursement_Date]
	from OASIS_Prize_Award
)
--select distinct App_ID, Student_ID, Award_Type, App_Status, Acad_Yr from Prize_Award_Base
, Award_Base_Table as (
	select 
		a.[Acad_Yr]
		,a.[Acad_Term]
		,a.[Student_ID]
		,case when b.[Fin_Aid_Category] is null then 'Others'
			else b.[Fin_Aid_Category]
			end [Fin_Aid_Category]
		,case when b.[Fin_Aid_Type] is null then a.[Award_Type]
			else b.[Fin_Aid_Type]
			end [Fin_Aid_Type]
		,case when b.[Fin_Aid_Desc] is null then a.[Descr]
			else b.[Fin_Aid_Desc]
			end [Fin_Aid_Desc]
		,case when b.[Fin_Aid_Status_Desc] is null then a.[Student_Award_Status]
			else b.[Fin_Aid_Status_Desc]
			end [Fin_Aid_Status_Desc]
		,b.[Priority]
		,ROW_NUMBER() OVER (
			Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.Award_Type,a.App_Status 
			ORDER BY CAST(b.[Priority] AS INT)
		) Row_Num
		,a.[App_ID]
		,a.[Award_Type] as [App_Type]
		,a.[App_Status]
		,a.[App_Status_Desc]
		,a.[Award_ID]
		,a.[Descr] as [Award_Desc]
		,a.[Award_Amount] as [Award_Amt]
		,NULL as [Date_Updated]
		,NULL as [Award_Remarks]
		,NULL as [Eligibility_Govt_Bursary]
		,NULL as [Verified_GHI_Award]
		,NULL as [Verified_PCI_Award]
		,NULL as [Num_Household_Members]
		,NULL as [Property_Type]
		,NULL as [Tenancy_Type]
		,NULL as [Special_Circumstances]
		,[Comment] as [Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from Prize_Award_Base a 
	left join Fin_Scheme_ID b 
	on (a.Award_Type=b.App_Type or b.App_Type='*') and 
	(a.App_Status=b.App_Status or b.App_Status='*') and 
	(a.Award_ID=b.Award_Item_ID_Grant_Code or b.Award_Item_ID_Grant_Code='*') 
)

, Award_Base_Table_Final as (
	select 
		'Edusave Awards' [Source]
		,[Acad_Yr]
		,[Acad_Term]
		,[Student_ID]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
		,[App_ID]
		,[App_Type]
		,[App_Status]
		,[App_Status_Desc]
		,[Award_ID]
		,[Award_Desc]
		,[Award_Amt]
		,[Date_Updated]
		,[Award_Remarks]
		,[Eligibility_Govt_Bursary]
		,[Verified_GHI_Award]
		,[Verified_PCI_Award]
		,[Num_Household_Members]
		,[Property_Type]
		,[Tenancy_Type]
		,[Special_Circumstances]
		,[Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from Award_Base_Table where Row_Num = 1
)


, Fin_Scheme_App_w_Stud_Detail as (
	SELECT 
		a.[Student_ID]
		,a.[App_ID]
		,a.[Fin_Scheme_Applied]
		,a.[App_Status]
		,'Active' [App_Status_Desc]
		,a.[Fin_Scheme_Applied_Desc]
		,a.[Last_Updated_Date]
		,a.[Subsidy_Percentage]
		,a.[Comment]
		,'AY'+b.[Acad_Year] as [Acad_Yr]
	FROM (select * from [DW_FINANCIAL_SCHEME_APPLICATION] 
			where [Fin_Scheme_Applied] in ('MDK', 'TFL') 
			and [App_Status]='ACTV') a
INNER JOIN (select distinct [Student_ID], [Acad_Year] from [DW_STUDENT_DETAILS_BY_ACAD_TERM]) b 
on a.[Student_ID]=b.[Student_ID]
)

, Fin_Scheme_App as (
	select 
		[Acad_Yr]
		,[Student_ID]
		,case when b.[Fin_Aid_Category] is null then 'Others'
			else b.[Fin_Aid_Category]
			end [Fin_Aid_Category]
		,case when b.[Fin_Aid_Type] is null then a.[Fin_Scheme_Applied]
			else b.[Fin_Aid_Type]
			end [Fin_Aid_Type]
		,case when b.[Fin_Aid_Desc] is null then a.[Fin_Scheme_Applied_Desc]
			else b.[Fin_Aid_Desc]
			end [Fin_Aid_Desc]
		,case when b.[Fin_Aid_Status_Desc] is null then a.[App_Status_Desc]
			else b.[Fin_Aid_Status_Desc]
			end [Fin_Aid_Status_Desc]
		,b.[Priority]
		,ROW_NUMBER() OVER (
			Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.Fin_Scheme_Applied,a.App_Status 
			ORDER BY CAST(b.[Priority] AS INT)
		) Row_Num
		,a.[App_ID]
		,a.[Fin_Scheme_Applied] as [App_Type]
		,a.[App_Status]
		,a.[App_Status_Desc]
		,NULL as [Award_ID]
		,a.[Fin_Scheme_Applied_Desc] as [Award_Desc]
		,NULL as [Award_Amt]
		,a.[Last_Updated_Date] as [Date_Updated]
		,convert(varchar, a.[Subsidy_Percentage]) as [Award_Remarks]
		,NULL as [Eligibility_Govt_Bursary]
		,NULL as [Verified_GHI_Award]
		,NULL as [Verified_PCI_Award]
		,NULL as [Num_Household_Members]
		,NULL as [Property_Type]
		,NULL as [Tenancy_Type]
		,NULL as [Special_Circumstances]
		,a.[Comment] as [Remarks_Staff_Verifier]
		,NULL as [Disbursement_Date]
	from Fin_Scheme_App_w_Stud_Detail a 
	LEFT JOIN Fin_Scheme_ID b 
	on (a.Fin_Scheme_Applied=b.App_Type or b.App_Type='*') AND
	(a.App_Status=b.App_Status or b.App_Status='*') AND 
	(b.Award_Item_ID_Grant_Code='*')
)

, Fin_Scheme_App_Final as (
	select 
		'OFN Financial Scheme Application' [Source]
		,[Acad_Yr]
		,NULL as [Acad_Term]
		,[Student_ID]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
		,[App_ID]
		,[App_Type]
		,[App_Status]
		,[App_Status_Desc]
		,[Award_ID]
		,[Award_Desc]
		,[Award_Amt]
		,[Date_Updated]
		,[Award_Remarks]
		,[Eligibility_Govt_Bursary]
		,[Verified_GHI_Award]
		,[Verified_PCI_Award]
		,[Num_Household_Members]
		,[Property_Type]
		,[Tenancy_Type]
		,[Special_Circumstances]
		,[Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from Fin_Scheme_App 
	where Row_Num=1
)


, DW_Cust_Acct_Base as (
	select 
		'AY20'+left([Acct_Term],2) as [Acad_Yr]
		,case when right([Acct_Term],2)='10' 
			then 'AY'+left([Acct_Term],2)+'S1'
			else 'AY'+left([Acct_Term],2)+'S2'
			end [Acad_Term]
		,[Student_ID]
		,[Acct_Term]
		,[Item]
		,[Item_Type]
		,[Item_Type]+'_'+[Acct_Term] as [App_ID]
		,case when [Item]='Payment by PSEA SO' then 'PSSO'
				when [Item]='Payment by CPF' then 'CPF'
				when [Item]='Payment by Mendaki' then 'MDK'
				else 'TFL'
				end [App_Type]
		,'PAYM' [App_Status]
		,max([Effective]) as [Date_Updated]
		,max([Billed]) as [Disbursement_Date]
		,abs(sum([Amt])) as [Award_Amt]
	FROM [DW_CUSTOMER_ACCT_BALANCE_DETAIL]  
	WHERE [Item] in ('Payment by Mendaki', 'Payment by CPF', 'Payment by PSEA SO', 'Payment by TFL') 
	and [Business_Unit] = 'RPPET'
	group by 
		[Student_ID]
		,[Acct_Term]
		,[Item]
		,[Item_Type]
)

, Cust_Bal_w_Term_Setup as (
	select 
		'AY'+b.[Acad_Year] as [Acad_Yr]
		,'AY'+right(b.[Acad_Year],2)+'S'+b.[Semester] as [Acad_Term]
		,a.[Student_ID]
		,a.[Acct_Term]
		,a.[Item]
		,a.[Item_Type]
		,a.[App_ID]
		,a.[App_Type]
		,a.[App_Status]
		,a.[Date_Updated]
		,a.[Disbursement_Date]
		,a.[Award_Amt]
	from DW_Cust_Acct_Base a
	left join (select * from [DW_TERM_SETUP] where [Qual_Type]='DPFT') b 
	on a.[Acct_Term]=b.[Term]
)
--select * from Cust_Bal_w_Term_Setup
, Cust_Acct_Bal as (
	select 
		[Acad_Yr]
		,[Acad_Term]
		,[Student_ID]
		,case when b.[Fin_Aid_Category] is null then 'Others'
			else b.[Fin_Aid_Category]
			end [Fin_Aid_Category]
		,case when b.[Fin_Aid_Type] is null then a.[App_Type]
			else b.[Fin_Aid_Type]
			end [Fin_Aid_Type]
		,case when b.[Fin_Aid_Desc] is null then a.[Item]
			else b.[Fin_Aid_Desc]
			end [Fin_Aid_Desc]
		,case when b.[Fin_Aid_Status_Desc] is null then 'Payment'
			else b.[Fin_Aid_Status_Desc]
			end [Fin_Aid_Status_Desc]
		,b.[Priority]
		,ROW_NUMBER() OVER (
			Partition BY a.Student_ID,a.Acad_Yr,a.App_ID,a.App_Type,a.App_Status 
			ORDER BY CAST(b.[Priority] AS INT)
		) Row_Num
		,a.[App_ID]
		,a.[App_Type]
		,a.[App_Status]
		,'Payment' as [App_Status_Desc]
		,a.[Item_Type] as [Award_ID]
		,a.[Item] as [Award_Desc]
		,a.[Award_Amt]
		,a.[Date_Updated]
		,a.[Item] as [Award_Remarks]
		,NULL as [Eligibility_Govt_Bursary]
		,NULL as [Verified_GHI_Award]
		,NULL as [Verified_PCI_Award]
		,NULL as [Num_Household_Members]
		,NULL as [Property_Type]
		,NULL as [Tenancy_Type]
		,NULL as [Special_Circumstances]
		,NULL as [Remarks_Staff_Verifier]
		,a.[Disbursement_Date]
	from DW_Cust_Acct_Base a 
	LEFT JOIN Fin_Scheme_ID b 
	on (a.App_Type=b.App_Type or b.App_Type='*') AND
	(a.App_Status=b.App_Status or b.App_Status='*') AND 
	(b.Award_Item_ID_Grant_Code='*')
)
, Cust_Acct_Bal_Final as (
	select 
		'OFN Financial Scheme Payment' [Source]
		,[Acad_Yr]
		,[Acad_Term]
		,[Student_ID]
		,[Fin_Aid_Category]
		,[Fin_Aid_Type]
		,[Fin_Aid_Desc]
		,[Fin_Aid_Status_Desc]
		,[App_ID]
		,[App_Type]
		,[App_Status]
		,[App_Status_Desc]
		,[Award_ID]
		,[Award_Desc]
		,[Award_Amt]
		,[Date_Updated]
		,[Award_Remarks]
		,[Eligibility_Govt_Bursary]
		,[Verified_GHI_Award]
		,[Verified_PCI_Award]
		,[Num_Household_Members]
		,[Property_Type]
		,[Tenancy_Type]
		,[Special_Circumstances]
		,[Remarks_Staff_Verifier]
		,[Disbursement_Date]
	from Cust_Acct_Bal 
	where Row_Num=1
)

/* this table is only for used to insert dummy record to show how the join removes the duplicates, 
to be removed during production */
/*
, OSS_Fin_Aid_w_Mock as (
	select * from OSS_Fin_Aid_Final
	union
	select 
		'test-case' [Source]
		,'AY2010' [Acad_Yr]
		,'AY10S3' [Acad_Term]
		,'101083' [Student_ID]
		,'Others' [Fin_Aid_Category]
		,'IMDA' [Fin_Aid_Type]
		,'IMDA Laptop Scheme' [Fin_Aid_Desc]
		,'Approved' [Fin_Aid_Status_Desc]
		,'830000000020995' [App_ID]
		,'SEMS' [App_Type]
		,'WDN' [App_Status]
		,NULL [App_Status_Desc]
		,'Tier1' [Award_ID]
		,NULL [Award_Desc]
		,NULL [Award_Amt]
		,convert(date, '2014-04-21') [Date_Updated]
		,'LMP(1)' [Award_Remarks]
		,NULL [Eligibility_Govt_Bursary]
		,1494.50 [Verified_GHI_Award]
		,298.90 [Verified_PCI_Award]
		,NULL [Num_Household_Members]
		,NULL [Property_Type]
		,NULL [Tenancy_Type]
		,NULL [Special_Circumstances]
		,NULL [Remarks_Staff_Verifier]
		,NULL [Disbursement_Date]
)
*/
/* pls remove OSS_Fin_Aid_w_Mock for production*/

/*using Left Excluding Join, this step removes 
overlapping records based on PKs from the left table*/
, OASIS_Fin_Aid_Final_remove_dup as (
	select 
		l.[Source]
		,l.[Acad_Yr]
		,l.[Acad_Term]
		,l.[Student_ID]
		,l.[Fin_Aid_Category]
		,l.[Fin_Aid_Type]
		,l.[Fin_Aid_Desc]
		,l.[Fin_Aid_Status_Desc]
		,l.[App_ID]
		,l.[App_Type]
		,l.[App_Status]
		,l.[App_Status_Desc]
		,l.[Award_ID]
		,l.[Award_Desc]
		,l.[Award_Amt]
		,l.[Date_Updated]
		,l.[Award_Remarks]
		,l.[Eligibility_Govt_Bursary]
		,l.[Verified_GHI_Award]
		,l.[Verified_PCI_Award]
		,l.[Num_Household_Members]
		,l.[Property_Type]
		,l.[Tenancy_Type]
		,l.[Special_Circumstances]
		,l.[Remarks_Staff_Verifier]
		,l.[Disbursement_Date]
	from OASIS_Fin_Aid_Final l
	left join OSS_Fin_Aid_Final r 
	on l.App_ID=r.App_ID and l.App_Type=r.App_Type and 
		l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and 
		l.Acad_Yr=r.Acad_Yr
	where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null
	--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null
)
--select * from OASIS_Fin_Aid_Final_remove_dup
, Grant_Claim_Table_Final_remove_dup as (
	select 
		l.[Source]
		,l.[Acad_Yr]
		,l.[Acad_Term]
		,l.[Student_ID]
		,l.[Fin_Aid_Category]
		,l.[Fin_Aid_Type]
		,l.[Fin_Aid_Desc]
		,l.[Fin_Aid_Status_Desc]
		,l.[App_ID]
		,l.[App_Type]
		,l.[App_Status]
		,l.[App_Status_Desc]
		,l.[Award_ID]
		,l.[Award_Desc]
		,l.[Award_Amt]
		,l.[Date_Updated]
		,l.[Award_Remarks]
		,l.[Eligibility_Govt_Bursary]
		,l.[Verified_GHI_Award]
		,l.[Verified_PCI_Award]
		,l.[Num_Household_Members]
		,l.[Property_Type]
		,l.[Tenancy_Type]
		,l.[Special_Circumstances]
		,l.[Remarks_Staff_Verifier]
		,l.[Disbursement_Date]
	from Grant_Claim_Table_Final l
	left join OSS_Fin_Aid_Final r 
	on l.App_ID=r.App_ID and l.App_Type=r.App_Type and 
		l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and 
		l.Acad_Yr=r.Acad_Yr
	where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null
	--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null
)

, Award_Base_Table_Final_remove_dup as (
	select 
		l.[Source]
		,l.[Acad_Yr]
		,l.[Acad_Term]
		,l.[Student_ID]
		,l.[Fin_Aid_Category]
		,l.[Fin_Aid_Type]
		,l.[Fin_Aid_Desc]
		,l.[Fin_Aid_Status_Desc]
		,l.[App_ID]
		,l.[App_Type]
		,l.[App_Status]
		,l.[App_Status_Desc]
		,l.[Award_ID]
		,l.[Award_Desc]
		,l.[Award_Amt]
		,l.[Date_Updated]
		,l.[Award_Remarks]
		,l.[Eligibility_Govt_Bursary]
		,l.[Verified_GHI_Award]
		,l.[Verified_PCI_Award]
		,l.[Num_Household_Members]
		,l.[Property_Type]
		,l.[Tenancy_Type]
		,l.[Special_Circumstances]
		,l.[Remarks_Staff_Verifier]
		,l.[Disbursement_Date]
	from Award_Base_Table_Final l
	left join OSS_Fin_Aid_Final r 
	on l.App_ID=r.App_ID and l.App_Type=r.App_Type and 
		l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and 
		l.Acad_Yr=r.Acad_Yr
	where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null
	--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null
)

, Fin_Scheme_App_Final_remove_dup as (
	select 
		l.[Source]
		,l.[Acad_Yr]
		,l.[Acad_Term]
		,l.[Student_ID]
		,l.[Fin_Aid_Category]
		,l.[Fin_Aid_Type]
		,l.[Fin_Aid_Desc]
		,l.[Fin_Aid_Status_Desc]
		,l.[App_ID]
		,l.[App_Type]
		,l.[App_Status]
		,l.[App_Status_Desc]
		,l.[Award_ID]
		,l.[Award_Desc]
		,l.[Award_Amt]
		,l.[Date_Updated]
		,l.[Award_Remarks]
		,l.[Eligibility_Govt_Bursary]
		,l.[Verified_GHI_Award]
		,l.[Verified_PCI_Award]
		,l.[Num_Household_Members]
		,l.[Property_Type]
		,l.[Tenancy_Type]
		,l.[Special_Circumstances]
		,l.[Remarks_Staff_Verifier]
		,l.[Disbursement_Date]
	from Fin_Scheme_App_Final l
	left join OSS_Fin_Aid_Final r 
	on l.App_ID=r.App_ID and l.App_Type=r.App_Type and 
		l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and 
		l.Acad_Yr=r.Acad_Yr
	where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null
	--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null
)

, Cust_Acct_Bal_Final_remove_dup as (
	select 
		l.[Source]
		,l.[Acad_Yr]
		,l.[Acad_Term]
		,l.[Student_ID]
		,l.[Fin_Aid_Category]
		,l.[Fin_Aid_Type]
		,l.[Fin_Aid_Desc]
		,l.[Fin_Aid_Status_Desc]
		,l.[App_ID]
		,l.[App_Type]
		,l.[App_Status]
		,l.[App_Status_Desc]
		,l.[Award_ID]
		,l.[Award_Desc]
		,l.[Award_Amt]
		,l.[Date_Updated]
		,l.[Award_Remarks]
		,l.[Eligibility_Govt_Bursary]
		,l.[Verified_GHI_Award]
		,l.[Verified_PCI_Award]
		,l.[Num_Household_Members]
		,l.[Property_Type]
		,l.[Tenancy_Type]
		,l.[Special_Circumstances]
		,l.[Remarks_Staff_Verifier]
		,l.[Disbursement_Date]
	from Cust_Acct_Bal_Final l
	left join OSS_Fin_Aid_Final r 
	on l.App_ID=r.App_ID and l.App_Type=r.App_Type and 
		l.App_Status=r.App_Status and l.Student_ID=r.Student_ID and 
		l.Acad_Yr=r.Acad_Yr
	where r.App_ID is null or r.App_Type is null or r.App_Status is null or r.Student_ID is null or r.Acad_Yr is null
	--where r.App_ID is not null or r.App_Type is not null or r.App_Status is not null or r.Student_ID is not null or r.Acad_Yr is not null
)

, DW_Fin_Aid_Union as (
select * from OSS_Fin_Aid_Final
union
select * from OASIS_Fin_Aid_Final_remove_dup
union
select * from Grant_Claim_Table_Final_remove_dup
union
select * from Award_Base_Table_Final_remove_dup
union
select * from Fin_Scheme_App_Final_remove_dup
union
select * from Cust_Acct_Bal_Final_remove_dup
)

insert into [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED](
	[Source]
	,[Acad_Yr]
	,[Acad_Term]
	,[Student_ID]
	,[Fin_Aid_Category]
	,[Fin_Aid_Type]
	,[Fin_Aid_Desc]
	,[Fin_Aid_Status_Desc]
	,[App_ID]
	,[App_Type]
	,[App_Status]
	,[App_Status_Desc]
	,[Award_ID]
	,[Award_Description]
	,[Award_Amt]
	,[Date_Updated]
	,[Award_Remarks]
	,[Eligibility_Govt_Bursary]
	,[Verified_GHI_Award]
	,[Verified_PCI_Award]
	,[Num_Household_Members]
	,[Property_Type]
	,[Tenancy_Type]
	,[Special_Circumstances]
	,[Remarks_Staff_Verifier]
	,[Disbursement_Date]
	,[CREATED_ON]
	,[MODIFIED_ON]
)

select 
	[Source]
	,[Acad_Yr]
	,[Acad_Term]
	,[Student_ID]
	,[Fin_Aid_Category]
	,[Fin_Aid_Type]
	,[Fin_Aid_Desc]
	,[Fin_Aid_Status_Desc]
	,[App_ID]
	,[App_Type]
	,[App_Status]
	,[App_Status_Desc]
	,[Award_ID]
	,[Award_Desc] as [Award_Description]
	,[Award_Amt]
	,[Date_Updated]
	,[Award_Remarks]
	,[Eligibility_Govt_Bursary]
	,[Verified_GHI_Award]
	,[Verified_PCI_Award]
	,[Num_Household_Members]
	,[Property_Type]
	,[Tenancy_Type]
	,[Special_Circumstances]
	,[Remarks_Staff_Verifier]
	,[Disbursement_Date]
	,getdate() [Created_On]
	,getdate() [Modified_On]
from DW_Fin_Aid_Union

; update faoc 
	set faoc.[Eligibility_Govt_Bursary]=upd_faoc.[Eligibility_Govt_Bursary],
		faoc.[MODIFIED_ON]=GETDATE()
	from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED] faoc 
	inner join ( 
		select 
			[Student_ID]
			,[Acad_Yr]
			,case 
				when ext_Student_ID is not null then 'N'
				when cdc_Student_ID is not null then 'Y'
				when sd_Residency_Type in ('PR', 'OTH') then 'N' 
				else 'Y'
				end [Eligibility_Govt_Bursary]
		from (
			select 
				dw_fao.Student_ID 
				,dw_fao.Acad_Yr
				,ext_fao.Student_ID as ext_Student_ID
				,ext_fao.Acad_Yr as ext_Acad_Yr
				,cdc.Student_ID as cdc_Student_ID
				,cdc.Acad_Yr as cdc_Acad_Yr
				,sd.Student_ID as sd_Student_ID
				,sd.Residency_Type as sd_Residency_Type
			from (
				select distinct 
					Student_ID
					,Acad_Yr
				from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]) dw_fao 
				left join (
					select distinct 
						Student_ID
						,Acad_Yr 
					from [dbo].[DW_EXT_FINANCIAL_AID_OUTCOME] 
					where Eligibility_Govt_Bursary='N') ext_fao
				on dw_fao.Student_ID=ext_fao.Student_ID and dw_fao.Acad_Yr=ext_fao.Acad_Yr
				left join (
					select distinct 
						Student_ID
						,Acad_Yr
					from [dbo].[DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED]
					where App_Type='CDC' and App_Status not in ('REJ', 'RRP', 'WDN', 'WTD', 'WTH', 'AUS', 'WHD')) cdc 
				on dw_fao.Student_ID=cdc.Student_ID and dw_fao.Acad_Yr=cdc.Acad_Yr
				left join (
					select 
						Student_ID
						,Residency_Type
						,row_number() over (partition by Student_ID order by Effective_Date desc) as rownum
					from [dbo].[DW_STUDENT_DETAILS]) sd 
				on dw_fao.Student_ID=sd.Student_ID and sd.rownum=1
		) x ) upd_faoc
	on faoc.Student_ID=upd_faoc.Student_ID and faoc.Acad_Yr=upd_faoc.Acad_Yr

--------------------------------------
COMMIT TRANSACTION
END TRY

BEGIN CATCH
  ROLLBACK TRANSACTION

  INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)
  SELECT   
         CAST(@jobstatusid as int) as JOB_STATUS_ID
        ,ERROR_MESSAGE() as ErrorMessage
		,getdate() as created_on
  
END CATCH  
GO</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58978BF2-3D03-47AA-B1E2-ABFC91474EEA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="STAGE">
      <DTS:VariableValue
        DTS:DataType="8">DW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C6B596A-F9B3-46C0-A600-71D85427AA6B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TgtTableName">
      <DTS:VariableValue
        DTS:DataType="8">DW_FINANCIAL_AID_OUTCOME_CONSOLIDATED</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create ETL Job Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{43E00E7A-CF02-4640-95A0-FFB8DE8E83BA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ETL Job Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
          SQLTask:SqlStatementSource="Exec [dbo].[usp_InsertETLJobLog] ?, ?, ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Job_name"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::STAGE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::SourceTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::TgtTableName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Error Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{854E27C4-F788-4FC1-98CD-C60B05AC0C24}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Error Log"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
          SQLTask:SqlStatementSource="UPDATE [dbo].[ETL_JOB_STATUS]&#xA;SET&#xA;ERROR_MSG = 'STG table is not completed',&#xA;JOB_STATUS ='Fail'&#xA;--PROCESSED_ON =getdate()&#xA;WHERE JOB_STATUS_ID=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JOB_STATUS_ID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\JOB_STATUS_ID"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AB7878FF-7C7B-442F-99DA-658A7DDCBCA2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="JOB_STATUS_ID"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
          SQLTask:SqlStatementSource="SELECT max([JOB_STATUS_ID])&#xA;      &#xA;  FROM [dbo].[ETL_JOB_STATUS] where [SOURCE_FILENAME]=? &#xA;---and convert(varchar(8),CREATED_ON,112)=convert--(varchar(8) ,getdate(),112)"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::JOB_STATUS_ID" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::SourceTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Into DW"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8002B0EC-E3C6-4F44-9002-55D6C8226E16}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Into DW"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D4E48D50-1014-4A36-8BD8-8BFED0855761}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::SQL_DW_Load" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process_Date"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4B93D339-0465-49BA-832D-C96F05800DA8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process_Date"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D4E48D50-1014-4A36-8BD8-8BFED0855761}"
          SQLTask:SqlStatementSource="Select getdate()"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Process_date" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Process_date"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="135"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Job Status"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D564B4D6-45CC-45D0-AE9E-7B5BD6F823AB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Job Status"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
          SQLTask:SqlStatementSource="DECLARE &#xA;@jobstatusid INT &#xA;select @jobstatusid=?&#xA;IF exists(select * from dbo.ETL_ERROR_LOG where [JOB_STATUS_ID]=@jobstatusid)&#xA; BEGIN&#xA; Update [dbo].[ETL_JOB_STATUS]&#xA;SET [PROCESSED_ON] =getdate(),&#xA;[JOB_STATUS]='Fail'&#xA;where [JOB_STATUS_ID]=@jobstatusid&#xA;  END&#xA;ELSE&#xA;BEGIN&#xA;Update [dbo].[ETL_JOB_STATUS]&#xA;SET [PROCESSED_ON] =getdate(),&#xA;[JOB_STATUS]='Success'&#xA;where [JOB_STATUS_ID]=@jobstatusid&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JOB_STATUS_ID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="131"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Validate job status"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{E33D36F5-5A93-4A6F-98E6-05C5AC53DD75}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Validate job status"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
          SQLTask:SqlStatementSource="declare @STAGE varchar(100),&#xA;@TARGET_TABLENAME varchar(100)&#xA;select   @STAGE=?&#xA;select   @TARGET_TABLENAME=?&#xA;&#xA;select CASE WHEN JOB_STATUS='Success' then 0 ELSE 1 END AS  JOB_STATUS&#xA;&#xA;from [dbo].[ETL_JOB_STATUS]&#xA;  where STAGE=@STAGE and TARGET_TABLENAME=@TARGET_TABLENAME and &#xA;  JOB_STATUS_ID in (Select max(JOB_STATUS_ID) from [dbo].[ETL_JOB_STATUS]&#xA;  where STAGE=@STAGE and TARGET_TABLENAME=@TARGET_TABLENAME)"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Job_Status" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::PreStage"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::SourceTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{55ED2395-A063-44C3-B4A0-3CFF6521231E}"
      DTS:From="Package\Process_Date"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load Into DW" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CCB98502-0C5F-4E8C-9839-067F4F265363}"
      DTS:From="Package\Create ETL Job Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\JOB_STATUS_ID" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{208884DA-C004-4FC1-BE42-6DA7C95F18FC}"
      DTS:From="Package\JOB_STATUS_ID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Validate job status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{32B78BA7-5B54-40CC-8050-B6941FB80749}"
      DTS:From="Package\Load Into DW"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Update Job Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[False]"
      DTS:CreationName=""
      DTS:DTSID="{1F55E2E8-F77E-4248-B9A8-98C11107EF3B}"
      DTS:Expression="@[User::Job_Status]==1"
      DTS:From="Package\Validate job status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="False"
      DTS:To="Package\Error Log" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[True]"
      DTS:CreationName=""
      DTS:DTSID="{8AC8A700-F528-47F6-95E5-D83271B504DB}"
      DTS:Expression="@[User::Job_Status]==0"
      DTS:From="Package\Validate job status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="True"
      DTS:To="Package\Process_Date" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{341C014A-E4AF-43C9-88D9-D3F9DA43400F}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{F9A75D50-8916-4BD6-B05D-0FBE583563CC}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\ETL_ERROR_LOG"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{84C843A8-AADF-4793-B5DC-0789CBC69CDF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ETL_ERROR_LOG">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{70859C2A-9D14-48B1-9EA4-509DC13F3CB6}"
              SQLTask:SqlStatementSource="[dbo].[usp_InsertETLErrorLog] ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::JOB_STATUS_ID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157.333333333334,42"
          Id="Package\Create ETL Job Log"
          TopLeft="17,13" />
        <NodeLayout
          Size="122.666666666667,42"
          Id="Package\Error Log"
          TopLeft="699,21" />
        <NodeLayout
          Size="142,42"
          Id="Package\JOB_STATUS_ID"
          TopLeft="230,18" />
        <NodeLayout
          Size="144,42"
          Id="Package\Load Into DW"
          TopLeft="487,221" />
        <NodeLayout
          Size="142,42"
          Id="Package\Process_Date"
          TopLeft="487,131" />
        <NodeLayout
          Size="165.333333333334,42"
          Id="Package\Update Job Status"
          TopLeft="526,322" />
        <NodeLayout
          Size="166,42"
          Id="Package\Validate job status"
          TopLeft="446,22" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="558.5,173">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="174,36.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56,0"
              Start="0,0"
              End="48.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="372,41">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="74,0"
              Start="0,0"
              End="66.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="66.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="559,263">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.5,59"
              Start="0,0"
              End="49.5,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="45.5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="45.5,29.5"
                    Point2="49.5,29.5"
                    Point3="49.5,33.5" />
                  <mssgle:LineSegment
                    End="49.5,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[False]"
          TopLeft="612,42.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87,0"
              Start="0,0"
              End="79.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="79.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="28.01365234375,5,23.4726953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[True]"
          TopLeft="529,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29,67"
              Start="0,0"
              End="29,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.5"
                    Point2="0,33.5"
                    Point3="4,33.5" />
                  <mssgle:LineSegment
                    End="25,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="25,33.5"
                    Point2="29,33.5"
                    Point3="29,37.5" />
                  <mssgle:LineSegment
                    End="29,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="3.48755859375,38.5,22.0248828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package.EventHandlers[OnError]\ETL_ERROR_LOG"
          TopLeft="370,98" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[False]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[True]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>