<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/31/2019 4:40:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-140119GM07"
  DTS:CreatorName="NCS\P0500450"
  DTS:DTSID="{A0C73ABE-29C5-4A32-9E4B-29045E318CA1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="18441"
  DTS:ObjectName="DM_CED_PET_MODULE_SURVEY"
  DTS:PackageType="5"
  DTS:VersionBuild="144"
  DTS:VersionGUID="{CE7D91A7-F001-46D2-B9CF-03BC0C80766A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_DW]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
      DTS:ObjectName="RPDW_DW">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::DW_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAlCwu7a+0BkKkvKRrRO6REwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAA7H7vqRT2mlkSQZj2S79G9AAAAAASAAACgAAAAEAAAALiRUFyWU+qLbTacJOPWKggYAAAASdTYshbPYZn1m12KO5qpUvQlnQ8VR0hcFAAAAN+rMgEGEKqyNvev/aiBjfk2npZQ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_STG]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{D841EAA6-BE74-44F7-BE4E-E78CFA06B2F7}"
      DTS:ObjectName="RPDW_STG">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::Staging_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD_STG;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAlCwu7a+0BkKkvKRrRO6REwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAB+hsIGVkcGnT5eeSCaQ4vmAAAAAASAAACgAAAAEAAAAGje0GjVDZXuhSeC4HllryAYAAAAOboIbJK9G6QY7ruR7f6KDXL3LBUqRIcKFAAAANQpqtCOBpu6GUWhk5OPDtVNHI4K</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1E44AAFF-952B-4AA1-95DB-F755B8B0C506}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BEGIN TRANSACTION&#xA;BEGIN TRY&#xA;------------&#xA;DELETE FROM DM_CED_PET_MODULE_SURVEY&#xA;--------------DECLARE PROCESS DATE--------&#xA;DECLARE @PROCESSDATE DATETIME&#xA;,@jobstatusid varchar(5)&#xA;SELECT @PROCESSDATE=GETDATE()&#xA;select @jobstatusid=&quot;+ (DT_STR, 5,1252) @[User::JobStatusId] +&quot;&#xA;&#xA;INSERT INTO [dbo].[DM_CED_PET_MODULE_SURVEY]&#xA;([Academic_Year]&#xA;      ,[Semester]&#xA;      ,[Academic_Term]&#xA;      ,[Module_ID]&#xA;      ,[Module_Code]&#xA;      ,[Module_Name]&#xA;      ,[Module]&#xA;      ,[Module_Owner]&#xA;      ,[Module_Owner_Descr]&#xA;      ,[Class]&#xA;      ,[Student_ID]&#xA;      ,[Programme]&#xA;      ,[Department]&#xA;      ,[Department_Descr]&#xA;      ,[Question_Number]&#xA;      ,[Question]&#xA;      ,[Construct]&#xA;      ,[Construct_Descr]&#xA;      ,[Student_Survey_Type]&#xA;      ,[Rating]&#xA;      ,[CREATED_ON]&#xA;      ,[MODIFIED_ON])&#xA;&#xA;select distinct [Academic_Year]&#xA;      ,[Semester]&#xA;      ,[Academic_Term]&#xA;      ,[Module_ID]&#xA;      ,[Module_Code]&#xA;      ,[Module_Name]&#xA;      ,[Module]&#xA;      ,[Module_Owner]&#xA;      ,[Module_Owner_Descr]&#xA;      ,[Class]&#xA;      ,[Student_ID]&#xA;      ,[Programme]&#xA;      ,[Department]&#xA;      ,[Department_Descr]&#xA;      ,[Question_Number]&#xA;      ,[Question]&#xA;      ,[Construct]&#xA;      ,[Construct_Descr]&#xA;      ,[Student_Survey_Type]&#xA;      ,[Rating]&#xA;      ,[CREATED_ON]&#xA;      ,[MODIFIED_ON]  from (SELECT CAST(('AY'+CAST(s.Acad_Year AS char(4))) AS CHAR(6)) AS Academic_Year&#xA;,CAST(('S'+ CAST(S.Semester AS CHAR(1))) AS CHAR(2)) AS Semester&#xA;,CAST('AY'+RIGHT( CAST(S.Acad_Year AS CHAR(4)),2)+'S'+CAST(S.Semester AS CHAR(1)) AS CHAR(6)) AS Academic_Term&#xA;,CAST(s.OASIS_Module_ID AS VARCHAR(6)) AS Module_ID&#xA;,CAST(S.Module_Code  AS VARCHAR(10)) AS Module_Code&#xA;,CAST(M.Module_Title AS VARCHAR(250)) AS  Module_Name&#xA;,CAST((M.Module_Code+' '+M.Module_Title) AS VARCHAR(270)) AS Module&#xA;,CAST(M.School_Centre AS varchar(10)) AS  Module_Owner&#xA;,CAST(D.Descr AS VARCHAR(100)) AS Module_Owner_Descr&#xA;,CAST(s.Class_Label  AS VARCHAR(20))AS Class  &#xA;,CAST(S.User_Id AS  VARCHAR(11))  AS Student_ID&#xA;,CAST((LP.Programme_CODE+' - '+Programme_Name) AS VARCHAR(100)) AS Programme&#xA;,CAST(P.School_Centre AS VARCHAR(10)) AS Department&#xA;,CAST(D1.Descr AS VARCHAR(100)) AS Department_Descr&#xA;,CAST(S.Question_Order AS VARCHAR(3)) AS Question_Number&#xA;, CAST(Question AS VARCHAR(250)) AS Question&#xA;,( CASE WHEN Dimensions = 'Perceived Quality of Curriculum' Then 'PQC' &#xA;WHEN Dimensions ='Perceived Quality of Learning Resources' Then 'PQR'&#xA;WHEN Dimensions ='Perceived Value of Learning' Then 'PVL' &#xA;Else 'Others' END) AS Construct&#xA;, CAST(Dimensions AS VARCHAR(100)) AS Construct_Descr&#xA;,CAST(Instructional_Strategy AS varchar(100)) AS  Student_Survey_Type&#xA;,cast(Response as int) AS Rating&#xA;,GETDATE() AS Created_on&#xA;,getdate() as modified_on&#xA;--into ##test&#xA;FROM  (select s.*,se.acad_year,se.semester,se.semester_code ,SE.CLASS_CODE AS Class_label&#xA;from   (SELECT a.User_Id, a.User_type, a.Qual_Type,b.Module_ID, isnull(b.OASIS_Module_ID,'NA') as OASIS_Module_ID,&#xA;&#x9;&#x9;b.Question_Order, a.Question, (CASE WHEN A.Response='' THEN NULL&#xA;ELSE A.Response END) AS Response, b.Dimensions,a.Status, &#xA;&#x9;&#x9;isnull(b.Module_Code,'NA') AS Module_Code, b.Sub_Category, b.Section_Name,b.Survey_Status, b.Question_Type  &#xA;&#x9;&#x9;FROM DW_SURVEY_RESPONSE a, DW_SURVEY b&#xA;&#x9;&#x9;WHERE a.Survey_ID=b.Survey_ID AND a.Question_ID=b.Question_ID AND a.Section_ID=b.Section_ID&#xA;&#x9;&#x9;AND b.Main_Category='PET' AND b.Sub_Category &lt;&gt; 'Lecturer Survey'&#xA;&#x9;&#x9;AND b.Question_Type='6'&#xA;&#x9;&#x9;and Dimensions in ('Perceived Quality of Curriculum','Perceived Quality of Learning Resources','Perceived Value of Learning' )&#xA;&#x9;&#x9;--and b.OASIS_Module_ID is not null&#xA;&#x9;&#x9;&#x9;AND A.Status='Completed'&#x9;&#xA;&#x9;&#x9;&#x9;) S&#xA;&#x9;&#x9;INNER JOIN DW_LEO_STUDENT_ENROLMT  SE ON SE.Student_ID=S.User_Id and SE.Module_ID=S.Module_ID&#xA;&#x9;&#x9;&#x9;)s&#xA;LEFT JOIN  (SELECT  Module_Code,ModuleID,Module_Title,School_Centre,&#xA;ROW_NUMBER() OVER( PARTITION BY Module_Code,ModuleID oRDER BY EFFECTIVE_DATE DESC)ROW_NUM&#xA;from DW_MODULE)as  M ON m.ROW_NUM=1 and  M.ModuleID=S.OASIS_Module_ID&#xA;LEFT JOIN DW_EXT_DEPARTMENT D ON  M.School_Centre=D.Department &#xA;lEFT JOIN DW_LEO_STUDENT_INFO_COMMON SI ON SI.QUAL_TYPE=s.Qual_Type AND S.User_ID=SI.Student_ID--2599010 INCREASING COUNT, SHOULD BE CHNAGED TO INNER JOIN , CHECK WITH HUIMEI&#xA;LEFT JOIN DW_LEO_PROG LP ON SI.Prog_ID=LP.ID --2599010&#xA;LEFT JOIN  (SELECT  School_Centre,Prog_Code,Prog_Descr,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM DW_PET_PROGRAMME) P ON P.ROW_NUM=1 AND LP.Programme_Code=P.Prog_Code &#xA;LEFT JOIN DW_EXT_DEPARTMENT D1 ON P.School_Centre=D1.Department &#xA;LEFT JOIN (  SELECT  Acad_Sem,Acad_Term,Module_Code&#x9;,Instructional_Strategy,ROW_NUMBER()OVER(PARTITION BY Acad_Sem,Acad_Term,Module_Code&#x9;  ORDER BY Module_Corhort DESC)ROW_NUM&#xA;FROM DW_EXT_MODULE_OFFERED)  f on F.ROW_NUM=1 AND s.Module_Code=f.Module_Code&#xA;  and s.semester_code=f.Acad_Term&#xA;  and s.Semester=f.Acad_Sem&#xA;&#xA;  union all&#xA;  &#xA;SELECT CAST(('AY'+CAST(s.Acad_Year AS char(4))) AS CHAR(6)) AS Academic_Year&#xA;,CAST(('S'+ CAST(S.Semester AS CHAR(1))) AS CHAR(2)) AS Semester&#xA;,CAST('AY'+RIGHT( CAST(S.Acad_Year AS CHAR(4)),2)+'S'+CAST(S.Semester AS CHAR(1)) AS CHAR(6)) AS Academic_Term&#xA;,CAST(s.OASIS_Module_ID AS VARCHAR(6)) AS Module_ID&#xA;,CAST(S.Module_Code  AS VARCHAR(10)) AS Module_Code&#xA;,CAST(M.Module_Title AS VARCHAR(250)) AS  Module_Name&#xA;,CAST((M.Module_Code+' '+M.Module_Title) AS VARCHAR(270)) AS Module&#xA;,CAST(M.School_Centre AS varchar(10)) AS  Module_Owner&#xA;,CAST(D.Descr AS VARCHAR(100)) AS Module_Owner_Descr&#xA;,CAST(s.Class_Label  AS VARCHAR(20))AS Class  &#xA;,CAST(S.User_Id AS  VARCHAR(11))  AS Student_ID&#xA;,CAST((LP.Programme_CODE+' - '+Programme_Name) AS VARCHAR(100)) AS Programme&#xA;,CAST(P.School_Centre AS VARCHAR(10)) AS Department&#xA;,CAST(D1.Descr AS VARCHAR(100)) AS Department_Descr&#xA;,CAST(S.Question_Order AS VARCHAR(3)) AS Question_Number&#xA;, CAST(Question AS VARCHAR(250)) AS Question&#xA;,( 'Overall') AS Construct&#xA;, ('Overall') AS Construct_Descr&#xA;,CAST(Instructional_Strategy AS varchar(100)) AS  Student_Survey_Type&#xA;,cast(Response as int) AS Rating&#xA;,GETDATE() AS Created_on&#xA;,getdate() as modified_on&#xA;FROM  (select s.*,se.acad_year,se.semester,se.semester_code ,SE.CLASS_CODE AS Class_label&#xA;from   (SELECT a.User_Id, a.User_type, a.Qual_Type,b.Module_ID, isnull(b.OASIS_Module_ID,'NA') as OASIS_Module_ID,&#xA;&#x9;&#x9;b.Question_Order, a.Question, (CASE WHEN A.Response='' THEN NULL&#xA;ELSE A.Response END) AS Response, b.Dimensions,a.Status, &#xA;&#x9;&#x9;isnull(b.Module_Code,'NA') AS Module_Code, b.Sub_Category, b.Section_Name,b.Survey_Status, b.Question_Type &#xA;&#x9;&#x9;FROM DW_SURVEY_RESPONSE a, DW_SURVEY b&#xA;&#x9;&#x9;WHERE a.Survey_ID=b.Survey_ID AND a.Question_ID=b.Question_ID AND a.Section_ID=b.Section_ID&#xA;&#x9;&#x9;AND b.Main_Category='PET' AND b.Sub_Category &lt;&gt; 'Lecturer Survey'&#xA;&#x9;&#x9;AND b.Question_Type='6'&#xA;&#x9;&#x9;and Dimensions in ('Perceived Quality of Curriculum','Perceived Quality of Learning Resources','Perceived Value of Learning' )&#xA;&#x9;&#x9;--and b.OASIS_Module_ID is not null&#xA;&#x9;&#x9;&#x9;AND A.Status='Completed'&#x9;&#xA;&#x9;&#x9;&#x9;) S&#xA;&#x9;&#x9;INNER JOIN DW_LEO_STUDENT_ENROLMT  SE ON SE.Student_ID=S.User_Id and SE.Module_ID=S.Module_ID&#xA;&#x9;&#x9;&#x9;)s&#xA;LEFT JOIN  (SELECT  Module_Code,ModuleID,Module_Title,School_Centre,&#xA;ROW_NUMBER() OVER( PARTITION BY Module_Code,ModuleID oRDER BY EFFECTIVE_DATE DESC)ROW_NUM&#xA;from DW_MODULE)as  M ON m.ROW_NUM=1 and  M.ModuleID=S.OASIS_Module_ID&#xA;LEFT JOIN DW_EXT_DEPARTMENT D ON  M.School_Centre=D.Department &#xA;lEFT JOIN DW_LEO_STUDENT_INFO_COMMON SI ON SI.QUAL_TYPE=s.Qual_Type AND S.User_ID=SI.Student_ID--2599010 INCREASING COUNT, SHOULD BE CHNAGED TO INNER JOIN , CHECK WITH HUIMEI&#xA;LEFT JOIN DW_LEO_PROG LP ON SI.Prog_ID=LP.ID --2599010&#xA;LEFT JOIN  (SELECT  School_Centre,Prog_Code,Prog_Descr,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM DW_PET_PROGRAMME) P ON P.ROW_NUM=1 AND LP.Programme_Code=P.Prog_Code &#xA;LEFT JOIN DW_EXT_DEPARTMENT D1 ON P.School_Centre=D1.Department &#xA;LEFT JOIN (  SELECT  Acad_Sem,Acad_Term,Module_Code&#x9;,Instructional_Strategy,ROW_NUMBER()OVER(PARTITION BY Acad_Sem,Acad_Term,Module_Code&#x9;  ORDER BY Module_Corhort DESC)ROW_NUM&#xA;FROM DW_EXT_MODULE_OFFERED)  f on F.ROW_NUM=1 AND s.Module_Code=f.Module_Code&#xA;  and s.semester_code=f.Acad_Term&#xA;  and s.Semester=f.Acad_Sem&#xA;)a;&#xA;--------------------------------------&#xA;COMMIT TRANSACTION&#xA;END TRY&#xA;&#xA;BEGIN CATCH&#xA;  ROLLBACK TRANSACTION&#xA;INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)&#xA;  SELECT   &#xA;         CAST(@jobstatusid as int) as JOB_STATUS_ID&#xA;        ,ERROR_MESSAGE() AS ErrorMessage&#xA;&#x9;&#x9;,@PROCESSDATE  as created_on&#xA;  &#xA;  &#xA;END CATCH  &#xA;GO&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InsertQuery">
      <DTS:VariableValue
        DTS:DataType="8">BEGIN TRANSACTION
BEGIN TRY
------------
DELETE FROM DM_CED_PET_MODULE_SURVEY
--------------DECLARE PROCESS DATE--------
DECLARE @PROCESSDATE DATETIME
,@jobstatusid varchar(5)
SELECT @PROCESSDATE=GETDATE()
select @jobstatusid=0

INSERT INTO [dbo].[DM_CED_PET_MODULE_SURVEY]
([Academic_Year]
      ,[Semester]
      ,[Academic_Term]
      ,[Module_ID]
      ,[Module_Code]
      ,[Module_Name]
      ,[Module]
      ,[Module_Owner]
      ,[Module_Owner_Descr]
      ,[Class]
      ,[Student_ID]
      ,[Programme]
      ,[Department]
      ,[Department_Descr]
      ,[Question_Number]
      ,[Question]
      ,[Construct]
      ,[Construct_Descr]
      ,[Student_Survey_Type]
      ,[Rating]
      ,[CREATED_ON]
      ,[MODIFIED_ON])

select distinct [Academic_Year]
      ,[Semester]
      ,[Academic_Term]
      ,[Module_ID]
      ,[Module_Code]
      ,[Module_Name]
      ,[Module]
      ,[Module_Owner]
      ,[Module_Owner_Descr]
      ,[Class]
      ,[Student_ID]
      ,[Programme]
      ,[Department]
      ,[Department_Descr]
      ,[Question_Number]
      ,[Question]
      ,[Construct]
      ,[Construct_Descr]
      ,[Student_Survey_Type]
      ,[Rating]
      ,[CREATED_ON]
      ,[MODIFIED_ON]  from (SELECT CAST(('AY'+CAST(s.Acad_Year AS char(4))) AS CHAR(6)) AS Academic_Year
,CAST(('S'+ CAST(S.Semester AS CHAR(1))) AS CHAR(2)) AS Semester
,CAST('AY'+RIGHT( CAST(S.Acad_Year AS CHAR(4)),2)+'S'+CAST(S.Semester AS CHAR(1)) AS CHAR(6)) AS Academic_Term
,CAST(s.OASIS_Module_ID AS VARCHAR(6)) AS Module_ID
,CAST(S.Module_Code  AS VARCHAR(10)) AS Module_Code
,CAST(M.Module_Title AS VARCHAR(250)) AS  Module_Name
,CAST((M.Module_Code+' '+M.Module_Title) AS VARCHAR(270)) AS Module
,CAST(M.School_Centre AS varchar(10)) AS  Module_Owner
,CAST(D.Descr AS VARCHAR(100)) AS Module_Owner_Descr
,CAST(s.Class_Label  AS VARCHAR(20))AS Class  
,CAST(S.User_Id AS  VARCHAR(11))  AS Student_ID
,CAST((LP.Programme_CODE+' - '+Programme_Name) AS VARCHAR(100)) AS Programme
,CAST(P.School_Centre AS VARCHAR(10)) AS Department
,CAST(D1.Descr AS VARCHAR(100)) AS Department_Descr
,CAST(S.Question_Order AS VARCHAR(3)) AS Question_Number
, CAST(Question AS VARCHAR(250)) AS Question
,( CASE WHEN Dimensions = 'Perceived Quality of Curriculum' Then 'PQC' 
WHEN Dimensions ='Perceived Quality of Learning Resources' Then 'PQR'
WHEN Dimensions ='Perceived Value of Learning' Then 'PVL' 
Else 'Others' END) AS Construct
, CAST(Dimensions AS VARCHAR(100)) AS Construct_Descr
,CAST(Instructional_Strategy AS varchar(100)) AS  Student_Survey_Type
,cast(Response as int) AS Rating
,GETDATE() AS Created_on
,getdate() as modified_on
--into ##test
FROM  (select s.*,se.acad_year,se.semester,se.semester_code ,SE.CLASS_CODE AS Class_label
from   (SELECT a.User_Id, a.User_type, a.Qual_Type,b.Module_ID, isnull(b.OASIS_Module_ID,'NA') as OASIS_Module_ID,
		b.Question_Order, a.Question, (CASE WHEN A.Response='' THEN NULL
ELSE A.Response END) AS Response, b.Dimensions,a.Status, 
		isnull(b.Module_Code,'NA') AS Module_Code, b.Sub_Category, b.Section_Name,b.Survey_Status, b.Question_Type  
		FROM DW_SURVEY_RESPONSE a, DW_SURVEY b
		WHERE a.Survey_ID=b.Survey_ID AND a.Question_ID=b.Question_ID AND a.Section_ID=b.Section_ID
		AND b.Main_Category='PET' AND b.Sub_Category &lt;&gt; 'Lecturer Survey'
		AND b.Question_Type='6'
		and Dimensions in ('Perceived Quality of Curriculum','Perceived Quality of Learning Resources','Perceived Value of Learning' )
		--and b.OASIS_Module_ID is not null
			AND A.Status='Completed'	
			) S
		INNER JOIN DW_LEO_STUDENT_ENROLMT  SE ON SE.Student_ID=S.User_Id and SE.Module_ID=S.Module_ID
			)s
LEFT JOIN  (SELECT  Module_Code,ModuleID,Module_Title,School_Centre,
ROW_NUMBER() OVER( PARTITION BY Module_Code,ModuleID oRDER BY EFFECTIVE_DATE DESC)ROW_NUM
from DW_MODULE)as  M ON m.ROW_NUM=1 and  M.ModuleID=S.OASIS_Module_ID
LEFT JOIN DW_EXT_DEPARTMENT D ON  M.School_Centre=D.Department 
lEFT JOIN DW_LEO_STUDENT_INFO_COMMON SI ON SI.QUAL_TYPE=s.Qual_Type AND S.User_ID=SI.Student_ID--2599010 INCREASING COUNT, SHOULD BE CHNAGED TO INNER JOIN , CHECK WITH HUIMEI
LEFT JOIN DW_LEO_PROG LP ON SI.Prog_ID=LP.ID --2599010
LEFT JOIN  (SELECT  School_Centre,Prog_Code,Prog_Descr,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM DW_PET_PROGRAMME) P ON P.ROW_NUM=1 AND LP.Programme_Code=P.Prog_Code 
LEFT JOIN DW_EXT_DEPARTMENT D1 ON P.School_Centre=D1.Department 
LEFT JOIN (  SELECT  Acad_Sem,Acad_Term,Module_Code	,Instructional_Strategy,ROW_NUMBER()OVER(PARTITION BY Acad_Sem,Acad_Term,Module_Code	  ORDER BY Module_Corhort DESC)ROW_NUM
FROM DW_EXT_MODULE_OFFERED)  f on F.ROW_NUM=1 AND s.Module_Code=f.Module_Code
  and s.semester_code=f.Acad_Term
  and s.Semester=f.Acad_Sem

  union all
  
SELECT CAST(('AY'+CAST(s.Acad_Year AS char(4))) AS CHAR(6)) AS Academic_Year
,CAST(('S'+ CAST(S.Semester AS CHAR(1))) AS CHAR(2)) AS Semester
,CAST('AY'+RIGHT( CAST(S.Acad_Year AS CHAR(4)),2)+'S'+CAST(S.Semester AS CHAR(1)) AS CHAR(6)) AS Academic_Term
,CAST(s.OASIS_Module_ID AS VARCHAR(6)) AS Module_ID
,CAST(S.Module_Code  AS VARCHAR(10)) AS Module_Code
,CAST(M.Module_Title AS VARCHAR(250)) AS  Module_Name
,CAST((M.Module_Code+' '+M.Module_Title) AS VARCHAR(270)) AS Module
,CAST(M.School_Centre AS varchar(10)) AS  Module_Owner
,CAST(D.Descr AS VARCHAR(100)) AS Module_Owner_Descr
,CAST(s.Class_Label  AS VARCHAR(20))AS Class  
,CAST(S.User_Id AS  VARCHAR(11))  AS Student_ID
,CAST((LP.Programme_CODE+' - '+Programme_Name) AS VARCHAR(100)) AS Programme
,CAST(P.School_Centre AS VARCHAR(10)) AS Department
,CAST(D1.Descr AS VARCHAR(100)) AS Department_Descr
,CAST(S.Question_Order AS VARCHAR(3)) AS Question_Number
, CAST(Question AS VARCHAR(250)) AS Question
,( 'Overall') AS Construct
, ('Overall') AS Construct_Descr
,CAST(Instructional_Strategy AS varchar(100)) AS  Student_Survey_Type
,cast(Response as int) AS Rating
,GETDATE() AS Created_on
,getdate() as modified_on
FROM  (select s.*,se.acad_year,se.semester,se.semester_code ,SE.CLASS_CODE AS Class_label
from   (SELECT a.User_Id, a.User_type, a.Qual_Type,b.Module_ID, isnull(b.OASIS_Module_ID,'NA') as OASIS_Module_ID,
		b.Question_Order, a.Question, (CASE WHEN A.Response='' THEN NULL
ELSE A.Response END) AS Response, b.Dimensions,a.Status, 
		isnull(b.Module_Code,'NA') AS Module_Code, b.Sub_Category, b.Section_Name,b.Survey_Status, b.Question_Type 
		FROM DW_SURVEY_RESPONSE a, DW_SURVEY b
		WHERE a.Survey_ID=b.Survey_ID AND a.Question_ID=b.Question_ID AND a.Section_ID=b.Section_ID
		AND b.Main_Category='PET' AND b.Sub_Category &lt;&gt; 'Lecturer Survey'
		AND b.Question_Type='6'
		and Dimensions in ('Perceived Quality of Curriculum','Perceived Quality of Learning Resources','Perceived Value of Learning' )
		--and b.OASIS_Module_ID is not null
			AND A.Status='Completed'	
			) S
		INNER JOIN DW_LEO_STUDENT_ENROLMT  SE ON SE.Student_ID=S.User_Id and SE.Module_ID=S.Module_ID
			)s
LEFT JOIN  (SELECT  Module_Code,ModuleID,Module_Title,School_Centre,
ROW_NUMBER() OVER( PARTITION BY Module_Code,ModuleID oRDER BY EFFECTIVE_DATE DESC)ROW_NUM
from DW_MODULE)as  M ON m.ROW_NUM=1 and  M.ModuleID=S.OASIS_Module_ID
LEFT JOIN DW_EXT_DEPARTMENT D ON  M.School_Centre=D.Department 
lEFT JOIN DW_LEO_STUDENT_INFO_COMMON SI ON SI.QUAL_TYPE=s.Qual_Type AND S.User_ID=SI.Student_ID--2599010 INCREASING COUNT, SHOULD BE CHNAGED TO INNER JOIN , CHECK WITH HUIMEI
LEFT JOIN DW_LEO_PROG LP ON SI.Prog_ID=LP.ID --2599010
LEFT JOIN  (SELECT  School_Centre,Prog_Code,Prog_Descr,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM DW_PET_PROGRAMME) P ON P.ROW_NUM=1 AND LP.Programme_Code=P.Prog_Code 
LEFT JOIN DW_EXT_DEPARTMENT D1 ON P.School_Centre=D1.Department 
LEFT JOIN (  SELECT  Acad_Sem,Acad_Term,Module_Code	,Instructional_Strategy,ROW_NUMBER()OVER(PARTITION BY Acad_Sem,Acad_Term,Module_Code	  ORDER BY Module_Corhort DESC)ROW_NUM
FROM DW_EXT_MODULE_OFFERED)  f on F.ROW_NUM=1 AND s.Module_Code=f.Module_Code
  and s.semester_code=f.Acad_Term
  and s.Semester=f.Acad_Sem
)a;
--------------------------------------
COMMIT TRANSACTION
END TRY

BEGIN CATCH
  ROLLBACK TRANSACTION
INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)
  SELECT   
         CAST(@jobstatusid as int) as JOB_STATUS_ID
        ,ERROR_MESSAGE() AS ErrorMessage
		,@PROCESSDATE  as created_on
  
  
END CATCH  
GO</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{018B2D38-DDB7-4837-98AD-5AF1B2CC9D3D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobStatusId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{026AAF0B-0E8C-48B9-A1D5-B11EE8BE9085}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MndColumncheck">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E622628B-CF11-4389-B290-12B77E78A186}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PrevJobStatus">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4936FAC-1A0F-40EF-BB26-B311883821D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlprimarykeycheck">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F4EC920-F47E-4ABA-AB6D-D47355CB1C4B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlprocesseddate">
      <DTS:VariableValue
        DTS:DataType="7">2/27/2019 11:28:20 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4BF5ACAA-7EFD-4DF9-8A88-5D24E3D99910}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SrcTable">
      <DTS:VariableValue
        DTS:DataType="8">DW_SURVEY</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60D5D891-5DCC-4B69-8B10-BB70EDC08BC6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Stage">
      <DTS:VariableValue
        DTS:DataType="8">DW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{35061B02-44AD-4E63-B707-4226DB6A78A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TgtTable">
      <DTS:VariableValue
        DTS:DataType="8">DM_CED_PET_MODULE_SURVEY</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create ETL Job Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{405846CA-F678-40F3-9BB5-36E9A08CD79B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ETL Job Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
          SQLTask:SqlStatementSource="&#xA;EXEC dbo.[usp_InsertETLJobLog]  ?,?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::Stage"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::SrcTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::TgtTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\get Job Status Id"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6AB2FE78-3295-4323-9194-D49B16304902}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="get Job Status Id"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
          SQLTask:SqlStatementSource="declare  @JobstatusID int&#xA;&#xA;select @JobstatusID=max(job_status_id) from [ETL_JOB_STATUS]&#xA;where [TARGET_TABLENAME]=?&#xA;&#xA;&#xA;Select @JobstatusID "
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::JobStatusId" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::TgtTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\getprocesseddate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2A42C552-24FE-4C45-85DD-EE1642D5A627}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="getprocesseddate"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
          SQLTask:SqlStatementSource="SELECT GETDATE()"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::sqlprocesseddate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\insert into main table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{13F265E0-FF25-433E-9711-6BBB0BD1A333}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="insert into main table"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::InsertQuery" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UpdateJobStatus"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{885F389E-ADB7-43C6-9EFF-AD455A6D0DAA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="UpdateJobStatus"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
          SQLTask:SqlStatementSource="&#xA; &#xA;&#xA;DECLARE &#xA;@jobstatusid INT&#xA;select @jobstatusid=?&#xA;IF EXISTS(SELECT * FROM dbo.ETL_ERROR_LOG WHERE [JOB_STATUS_ID]=@jobstatusid)&#xA;&#xA; BEGIN&#xA;&#xA;&#xA;&#xA; UPDATE [dbo].[ETL_JOB_STATUS]&#xA;&#xA;SET [PROCESSED_ON] =GETDATE(),&#xA;&#xA;[JOB_STATUS]='FAIL'&#xA;&#xA;WHERE [JOB_STATUS_ID]=@jobstatusid&#xA;&#xA;  END&#xA;&#xA;ELSE&#xA;&#xA;BEGIN&#xA;&#xA;UPDATE [DBO].[ETL_JOB_STATUS]&#xA;&#xA;SET [PROCESSED_ON] =GETDATE(),&#xA;&#xA;[JOB_STATUS]='Success'&#xA;&#xA;WHERE [JOB_STATUS_ID]=@jobstatusid&#xA;&#xA;END&#xA;&#xA; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JobStatusId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{653E62E3-C478-4D19-B0F5-AB5397B7F671}"
      DTS:From="Package\get Job Status Id"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\getprocesseddate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D2824D18-2BAE-432E-9843-09C4974D3392}"
      DTS:From="Package\Create ETL Job Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\get Job Status Id" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CE24479D-86BB-4C9A-8EA4-1CA6BD2019E7}"
      DTS:From="Package\getprocesseddate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\insert into main table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{886C9E08-4F2D-4D21-98ED-425AE530F641}"
      DTS:From="Package\insert into main table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\UpdateJobStatus" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{EF531ADF-1291-41EF-8C7A-778E8F418C9C}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{8B65DDF9-E52F-4EA6-B303-482CF3CE85E0}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Error Log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8AFBF7B4-23A8-4AE5-9290-0A6A27F79311}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Error Log">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
              SQLTask:SqlStatementSource="  insert into [dbo].[ETL_ERROR_LOG]([JOB_STATUS_ID],[ERROR_RECORD])&#xA;  select ?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::JobStatusId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\ETL Job Status Log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A883AD3C-7A89-403D-A752-4467B324B09F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ETL Job Status Log">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0FB10D9A-E447-448A-8940-8E8E36AFBC5E}"
              SQLTask:SqlStatementSource="update [ETL_JOB_STATUS]&#xA;set Job_Status='Fail'&#xA;,Error_Msg=?&#xA;where job_status_id=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::JobStatusId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{851B3800-AF9B-408E-9EC1-50ADDF93C670}"
          DTS:From="Package.EventHandlers[OnError]\Error Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\ETL Job Status Log" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170,42"
          Id="Package\Create ETL Job Log"
          TopLeft="9,30" />
        <NodeLayout
          Size="159,42"
          Id="Package\get Job Status Id"
          TopLeft="225,31" />
        <NodeLayout
          Size="162,42"
          Id="Package\getprocesseddate"
          TopLeft="421,36" />
        <NodeLayout
          Size="179,42"
          Id="Package\insert into main table"
          TopLeft="409,135" />
        <NodeLayout
          Size="158,42"
          Id="Package\UpdateJobStatus"
          TopLeft="422,221" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="384,54.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37,0"
              Start="0,0"
              End="29.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="179,51.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46,0"
              Start="0,0"
              End="38.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="500.25,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="499.75,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="123,42"
          Id="Package.EventHandlers[OnError]\Error Log"
          TopLeft="60,60" />
        <NodeLayout
          Size="169,42"
          Id="Package.EventHandlers[OnError]\ETL Job Status Log"
          TopLeft="60,162" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="121.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,60"
              Start="0,0"
              End="23,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="19,30" />
                  <mssgle:CubicBezierSegment
                    Point1="19,30"
                    Point2="23,30"
                    Point3="23,34" />
                  <mssgle:LineSegment
                    End="23,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>