<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/31/2019 4:40:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-140119GM07"
  DTS:CreatorName="NCS\P0500450"
  DTS:DTSID="{E488BD69-631C-45AC-8140-9B714DE900A3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="18441"
  DTS:ObjectName="DM_ORG_MODULE_GRADES_BY_PROGRAMME"
  DTS:PackageType="5"
  DTS:VersionBuild="156"
  DTS:VersionGUID="{4D38CC48-1EAC-4C96-80CC-56AFC2D7DA6B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_DW]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
      DTS:ObjectName="RPDW_DW">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::DW_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAjmfcLoftrkO4CNyVi2x+sAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAC7Sevg5X9OO/COjE0FEsfCAAAAAASAAACgAAAAEAAAANrAz7Z3beJm254PKZ6ctYcYAAAAnCJCQ33LYmk5cLIlTl2oBKDln/eIvotYFAAAADKyzl9EE4riY2ySj+w67qTbsvjJ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_STG]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{D4434CAC-C7E6-4AAA-AF86-814FAE36D5A3}"
      DTS:ObjectName="RPDW_STG">
      <DTS:PropertyExpression
        DTS:Name="InitialCatalog">@[$Project::Staging_Initial_Catalog]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Project::Password]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::ServerName]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="UserName">@[$Project::UserName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=172.22.2.38;User ID=svc-dw-prod-etl;Initial Catalog=RPDW_PRD_STG;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAjmfcLoftrkO4CNyVi2x+sAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAChBQ5TBy9R52EaIDdjMpuaAAAAAASAAACgAAAAEAAAAI+cAdG1J6nC/aY/sd/bBz4YAAAADD/rE27OJCDvJCzrxAoJ0RIn0gDT8UAmFAAAACWtpcBlZRzLfPZj0GWChhEUCbz9</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9404B1C-1EC0-4E65-BFAF-595FD7CC8F6E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;BEGIN TRANSACTION&#xA;BEGIN TRY&#xA;------------&#xA;DELETE FROM [DM_ORG_MODULE_GRADES_BY_PROGRAMME]&#xA;--------------DECLARE PROCESS DATE--------&#xA;&#xA;DECLARE @jobstatusid varchar(5)&#xA;&#xA;select @jobstatusid=&quot;+ (DT_STR, 5,1252) @[User::JobStatusId] +&quot;&#xA;----------Query---------&#xA;/* get data for distinct_Student_Module_Grades*/&#xA;;WITH TMP_DW_STUDENT_MODULE_GRADES AS&#xA;((SELECT DISTINCT Student_Id, Acad_Term,'AY20'+LEFT(CAST([Acad_Term] AS VARCHAR(4)),2) AS Academic_Year&#xA;, CASE WHEN RIGHT(CAST([Acad_Term] AS varchar(4)),2) ='10' THEN 'S1'&#xA; WHEN RIGHT(CAST([Acad_Term] AS varchar(4)),2) ='20' THEN 'S2'&#xA; ELSE 'NA'END Semester&#xA;, Module_Code, Module_Id, Final_Grade, Cumulative_Gpa, No_Of_Attempts&#xA;FROM DW_STUDENT_MODULE_GRADES&#xA;WHERE Qual_Type = 'DPFT')&#xA;UNION&#xA;(select distinct a.Student_Id, a.Acad_Term,&#xA;'AY20'+LEFT(CAST(a.[Acad_Term] AS VARCHAR(4)),2) AS Academic_Year&#xA;, CASE WHEN RIGHT(CAST(a.[Acad_Term] AS varchar(4)),2) ='10' THEN 'S1'&#xA; WHEN RIGHT(CAST(a.[Acad_Term] AS varchar(4)),2) ='20' THEN 'S2'&#xA; ELSE 'NA'END Semester,&#xA; b.Module_Code, b.Module_Id, b.Grade as Final_Grade, a.Cumulative_Gpa,&#xA;0 as No_Of_Attempts from DW_STUDENT_MODULE_GRADES a,&#xA;DW_MODULE_EXEMPTION b &#xA;where a.Student_Id=b.Student_ID and a.Qual_Type='DPFT'))&#xA;-------------------------insert into main table-------------------------------&#xA;&#xA;INSERT INTO [dbo].[DM_ORG_MODULE_GRADES_BY_PROGRAMME]&#xA;&#xA;SELECT &#xA;B.Student_Id&#xA;,FE.Frozen_Intake_Term AS Frozen_Enrolment_Term&#xA;,FE.Acad_Prog AS Frozen_Enrolment_Programme_Code&#xA;,(PT.Prog_Code+' - '+ PT.Prog_Descr) AS Frozen_Enrolment_Programme&#xA;,B.Admit_Term &#xA;,PT1.School_Centre AS Department&#xA;,DP.Descr AS Department_Descr&#xA;,B.Prog AS Programme_Code&#xA;,(PT1.Prog_Code+' - '+ PT1.Prog_Descr) Programme&#xA;,(CASE WHEN (Residency_Type IN ( 'SGP' , 'PR')) Then 'Local Students' &#xA;WHEN Residency_Type = 'OTH' and Local_Foreign='Local' then 'Flow-through'&#xA;Else 'Non Flow-through' END) AS International_Student_Ind&#xA;,NULL AS Admission_Exercise&#xA;,E.Entry_Qual_type AS Entry_Qualification&#xA;,B.Student_Status AS Latest_Student_Status&#xA;,B.Academic_Year AS Academic_Year&#xA;,B.Semester AS Semester&#xA;,B.Academic_Term AS Academic_Term&#xA;,B.Cumulative_Gpa AS Term_cGPA&#xA;,B.Module_Id AS Module_ID&#xA;,B.Module_Code AS Module_Code&#xA;,M.Module_Title AS Module_Name&#xA;,(B.Module_Code+' '+ M.Module_Title ) AS Module&#x9;&#xA;,B.No_Of_Attempts AS Attempt_Number&#xA;,B.Final_Grade AS Final_Grade&#xA;,(CASE WHEN AW.Student_ID IS NULL THEN 'N' ELSE 'Y' END )  Award_Recipient_Ind&#xA;,GETDATE() [Created_On]&#xA;,GETDATE() [Modified_On]&#xA;FROM  (SELECT MG.*, Admit_Term, Prog, Reqmt_Term, Student_Status FROM &#xA;   (SELECT *,('AY'+LEFT(CAST([Acad_Term] AS VARCHAR(4)),2) + Semester) as Academic_Term&#xA; FROM TMP_DW_STUDENT_MODULE_GRADES) MG--&#xA;&#xA;INNER JOIN  &#xA;/* calculating Distinct_Active_Students*/&#xA;&#xA;(SELECT Student_Id, Admit_Term, Prog, Reqmt_Term, Student_Status&#xA;FROM (&#xA;       SELECT Student_Id, Admit_Term, Prog, Reqmt_Term, Student_Status,&#xA;              ROW_NUMBER() OVER (&#xA;                     PARTITION BY Student_Id&#xA;                     ORDER BY Effective_Date DESC, Effective_Seq DESC, Student_Career_Number DESC) rownum&#xA;       FROM DW_STUDENT_MOVEMENT&#xA;       WHERE Qual_Type = 'DPFT') sm&#xA;WHERE sm.rownum = 1&#xA;) B ON MG.Student_Id=B.Student_Id )B&#xA;--&#xA;LEFT JOIN  &#xA;&#xA;--(SELECT DISTINCT STUDENT_ID,Admit_Term,Applicatn_Number,Residency_Type FROM DW_STUDENT_DETAILS  where Applicatn_Number is not null) SD &#xA;-- ON B.Student_Id=SD.Student_ID AND SD.Admit_Term=B.ADMIT_TERM &#xA;&#xA; (SELECT DISTINCT STUDENT_ID,Admit_Term,Applicatn_Number,Residency_Type,ROW_NUMBER() OVER (PARTITION BY STUDENT_ID,Admit_Term,Applicatn_Number ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM DW_STUDENT_DETAILS  where Applicatn_Number is not null) SD &#xA; ON B.Student_Id=SD.Student_ID AND SD.Admit_Term=B.ADMIT_TERM AND SD.ROW_NUM=1&#xA;--&#xA;Left JOIN  (SELECT DISTINCT App_Number,Entry_Qual  FROM DW_APPLICANT_DETAILS&#xA; WHERE Qual_Type='DPFT' ) A ON SD.Applicatn_Number=A.App_Number&#xA;--&#xA; LEFT JOIN  DW_EXT_ENTRY_QUAL_TYPE  E ON A.Entry_Qual=E.Entry_Qual&#xA;--&#xA;LEFT JOIN (SELECT  Prog_Descr,Prog_Code,School_Centre,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM &#xA;FROM DW_PET_PROGRAMME) PT1 ON PT1.ROW_NUM=1 and PT1.Prog_Code=B.Prog&#xA;--&#xA;LEFT JOIN DW_STUDENT_FROZEN_ENROLMENT FE ON B.STUDENT_ID=FE.STUDENT_ID AND B.ADMIT_TERM=FE.ADMIT_TERM&#xA;--&#xA;LEFT JOIN (SELECT  Prog_Descr,Prog_Code,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM &#xA;FROM DW_PET_PROGRAMME) PT ON PT.ROW_NUM=1 AND PT.Prog_Code=FE.Acad_Prog&#xA;--&#xA;LEFT JOIN DW_EXT_DEPARTMENT DP ON PT1.ROW_NUM=1 AND PT1.School_Centre=DP.Department&#xA;--&#xA;LEFT JOIN (SELECT DISTINCT MODULEID,Module_Code,School_Centre,Module_Title, &#xA;ROW_NUMBER()OVER(PARTITION BY Module_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM  DW_Module&#xA;WHERE Qual_Type = 'DPFT') M ON M.ROW_NUM=1 AND B.Module_Id=M.MODULEID AND B.Module_Code=M.Module_Code&#xA;--&#xA;LEFT JOIN (SELECT  DISTINCT Acad_Term,Student_ID FROM DW_AWARDS A WHERE A.Qual_Type = 'DPFT'&#xA;AND A.Student_Award_Status = 'A') AW ON AW.Student_ID=B.Student_Id AND B.Acad_Term = AW.Acad_Term;&#xA;&#xA;&#xA;---------------------------------------------------------------------update admission excercise--------------------------------------------&#xA;update a&#xA;  set Admission_Exercise=Admit_Type+' - '+long_name&#xA;  from     [DM_ORG_MODULE_GRADES_BY_PROGRAMME] a&#xA;left join &#xA;(select b.*,a.Programme_Code,Admit_Term, row_number() over(partition by Applicant_Id order by a.App_Number)rn from&#xA;   (select Student_ID, Qual_Type, App_Number, programme_code ,admit_term from (&#xA;   select Student_ID, Qual_Type, App_Number, programme_code,Admit_Term, ROW_NUMBER() OVER (&#xA;   PARTITION BY Student_Id, Qual_Type, App_Number, programme_code&#xA;   ORDER BY Effective_Date DESC, Effective_Seq DESC) rownum&#xA;   from DW_APPLICANT_PROGRAM_STATUS&#xA;   where Programme_Action='MATR' and Qual_Type='DPFT'&#xA;   )a where rownum = 1) a,&#xA;   (select distinct Applicant_Id, App_Number, Admit_Type, App_Date from DW_APPLICANT_DETAILS) b&#xA;  where a.Student_Id=b.Applicant_Id and a.App_Number=b.App_Number)  z&#xA;  on &#xA;  --z.rn=1 &#xA;--and  &#xA; a.student_id=z.applicant_id&#xA;--and a.Programme_Code=z.programme_code&#xA;and a.Admit_Term=z.Admit_Term&#xA;left join &quot;+@[$Project::Staging_Initial_Catalog]+&quot;..STG_OASIS_MASTER_CODE mc  on  z.Admit_Type=mc.Field_Value and mc.Field_Name='ADMIT_TYPE' ;&#xA;&#xA;--------------------------------------&#xA;COMMIT TRANSACTION&#xA;END TRY&#xA;&#xA;BEGIN CATCH&#xA;  ROLLBACK TRANSACTION&#xA;INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)&#xA;  SELECT   &#xA;         CAST(@jobstatusid as int) as JOB_STATUS_ID&#xA;        ,ERROR_MESSAGE() AS ErrorMessage&#xA;&#x9;&#x9;,GETDATE()  as created_on&#xA;  &#xA;  &#xA;END CATCH  &#xA;GO&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InsertQuery">
      <DTS:VariableValue
        DTS:DataType="8">BEGIN TRANSACTION
BEGIN TRY
------------
DELETE FROM [DM_ORG_MODULE_GRADES_BY_PROGRAMME]
--------------DECLARE PROCESS DATE--------

DECLARE @jobstatusid varchar(5)

select @jobstatusid=0
----------Query---------
/* get data for distinct_Student_Module_Grades*/
;WITH TMP_DW_STUDENT_MODULE_GRADES AS
((SELECT DISTINCT Student_Id, Acad_Term,'AY20'+LEFT(CAST([Acad_Term] AS VARCHAR(4)),2) AS Academic_Year
, CASE WHEN RIGHT(CAST([Acad_Term] AS varchar(4)),2) ='10' THEN 'S1'
 WHEN RIGHT(CAST([Acad_Term] AS varchar(4)),2) ='20' THEN 'S2'
 ELSE 'NA'END Semester
, Module_Code, Module_Id, Final_Grade, Cumulative_Gpa, No_Of_Attempts
FROM DW_STUDENT_MODULE_GRADES
WHERE Qual_Type = 'DPFT')
UNION
(select distinct a.Student_Id, a.Acad_Term,
'AY20'+LEFT(CAST(a.[Acad_Term] AS VARCHAR(4)),2) AS Academic_Year
, CASE WHEN RIGHT(CAST(a.[Acad_Term] AS varchar(4)),2) ='10' THEN 'S1'
 WHEN RIGHT(CAST(a.[Acad_Term] AS varchar(4)),2) ='20' THEN 'S2'
 ELSE 'NA'END Semester,
 b.Module_Code, b.Module_Id, b.Grade as Final_Grade, a.Cumulative_Gpa,
0 as No_Of_Attempts from DW_STUDENT_MODULE_GRADES a,
DW_MODULE_EXEMPTION b 
where a.Student_Id=b.Student_ID and a.Qual_Type='DPFT'))
-------------------------insert into main table-------------------------------

INSERT INTO [dbo].[DM_ORG_MODULE_GRADES_BY_PROGRAMME]

SELECT 
B.Student_Id
,FE.Frozen_Intake_Term AS Frozen_Enrolment_Term
,FE.Acad_Prog AS Frozen_Enrolment_Programme_Code
,(PT.Prog_Code+' - '+ PT.Prog_Descr) AS Frozen_Enrolment_Programme
,B.Admit_Term 
,PT1.School_Centre AS Department
,DP.Descr AS Department_Descr
,B.Prog AS Programme_Code
,(PT1.Prog_Code+' - '+ PT1.Prog_Descr) Programme
,(CASE WHEN (Residency_Type IN ( 'SGP' , 'PR')) Then 'Local Students' 
WHEN Residency_Type = 'OTH' and Local_Foreign='Local' then 'Flow-through'
Else 'Non Flow-through' END) AS International_Student_Ind
,NULL AS Admission_Exercise
,E.Entry_Qual_type AS Entry_Qualification
,B.Student_Status AS Latest_Student_Status
,B.Academic_Year AS Academic_Year
,B.Semester AS Semester
,B.Academic_Term AS Academic_Term
,B.Cumulative_Gpa AS Term_cGPA
,B.Module_Id AS Module_ID
,B.Module_Code AS Module_Code
,M.Module_Title AS Module_Name
,(B.Module_Code+' '+ M.Module_Title ) AS Module	
,B.No_Of_Attempts AS Attempt_Number
,B.Final_Grade AS Final_Grade
,(CASE WHEN AW.Student_ID IS NULL THEN 'N' ELSE 'Y' END )  Award_Recipient_Ind
,GETDATE() [Created_On]
,GETDATE() [Modified_On]
FROM  (SELECT MG.*, Admit_Term, Prog, Reqmt_Term, Student_Status FROM 
   (SELECT *,('AY'+LEFT(CAST([Acad_Term] AS VARCHAR(4)),2) + Semester) as Academic_Term
 FROM TMP_DW_STUDENT_MODULE_GRADES) MG--

INNER JOIN  
/* calculating Distinct_Active_Students*/

(SELECT Student_Id, Admit_Term, Prog, Reqmt_Term, Student_Status
FROM (
       SELECT Student_Id, Admit_Term, Prog, Reqmt_Term, Student_Status,
              ROW_NUMBER() OVER (
                     PARTITION BY Student_Id
                     ORDER BY Effective_Date DESC, Effective_Seq DESC, Student_Career_Number DESC) rownum
       FROM DW_STUDENT_MOVEMENT
       WHERE Qual_Type = 'DPFT') sm
WHERE sm.rownum = 1
) B ON MG.Student_Id=B.Student_Id )B
--
LEFT JOIN  

--(SELECT DISTINCT STUDENT_ID,Admit_Term,Applicatn_Number,Residency_Type FROM DW_STUDENT_DETAILS  where Applicatn_Number is not null) SD 
-- ON B.Student_Id=SD.Student_ID AND SD.Admit_Term=B.ADMIT_TERM 

 (SELECT DISTINCT STUDENT_ID,Admit_Term,Applicatn_Number,Residency_Type,ROW_NUMBER() OVER (PARTITION BY STUDENT_ID,Admit_Term,Applicatn_Number ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM DW_STUDENT_DETAILS  where Applicatn_Number is not null) SD 
 ON B.Student_Id=SD.Student_ID AND SD.Admit_Term=B.ADMIT_TERM AND SD.ROW_NUM=1
--
Left JOIN  (SELECT DISTINCT App_Number,Entry_Qual  FROM DW_APPLICANT_DETAILS
 WHERE Qual_Type='DPFT' ) A ON SD.Applicatn_Number=A.App_Number
--
 LEFT JOIN  DW_EXT_ENTRY_QUAL_TYPE  E ON A.Entry_Qual=E.Entry_Qual
--
LEFT JOIN (SELECT  Prog_Descr,Prog_Code,School_Centre,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM 
FROM DW_PET_PROGRAMME) PT1 ON PT1.ROW_NUM=1 and PT1.Prog_Code=B.Prog
--
LEFT JOIN DW_STUDENT_FROZEN_ENROLMENT FE ON B.STUDENT_ID=FE.STUDENT_ID AND B.ADMIT_TERM=FE.ADMIT_TERM
--
LEFT JOIN (SELECT  Prog_Descr,Prog_Code,ROW_NUMBER()OVER( PARTITION BY Prog_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM 
FROM DW_PET_PROGRAMME) PT ON PT.ROW_NUM=1 AND PT.Prog_Code=FE.Acad_Prog
--
LEFT JOIN DW_EXT_DEPARTMENT DP ON PT1.ROW_NUM=1 AND PT1.School_Centre=DP.Department
--
LEFT JOIN (SELECT DISTINCT MODULEID,Module_Code,School_Centre,Module_Title, 
ROW_NUMBER()OVER(PARTITION BY Module_Code ORDER BY EFFECTIVE_DATE DESC)ROW_NUM FROM  DW_Module
WHERE Qual_Type = 'DPFT') M ON M.ROW_NUM=1 AND B.Module_Id=M.MODULEID AND B.Module_Code=M.Module_Code
--
LEFT JOIN (SELECT  DISTINCT Acad_Term,Student_ID FROM DW_AWARDS A WHERE A.Qual_Type = 'DPFT'
AND A.Student_Award_Status = 'A') AW ON AW.Student_ID=B.Student_Id AND B.Acad_Term = AW.Acad_Term;


---------------------------------------------------------------------update admission excercise--------------------------------------------
update a
  set Admission_Exercise=Admit_Type+' - '+long_name
  from     [DM_ORG_MODULE_GRADES_BY_PROGRAMME] a
left join 
(select b.*,a.Programme_Code,Admit_Term, row_number() over(partition by Applicant_Id order by a.App_Number)rn from
   (select Student_ID, Qual_Type, App_Number, programme_code ,admit_term from (
   select Student_ID, Qual_Type, App_Number, programme_code,Admit_Term, ROW_NUMBER() OVER (
   PARTITION BY Student_Id, Qual_Type, App_Number, programme_code
   ORDER BY Effective_Date DESC, Effective_Seq DESC) rownum
   from DW_APPLICANT_PROGRAM_STATUS
   where Programme_Action='MATR' and Qual_Type='DPFT'
   )a where rownum = 1) a,
   (select distinct Applicant_Id, App_Number, Admit_Type, App_Date from DW_APPLICANT_DETAILS) b
  where a.Student_Id=b.Applicant_Id and a.App_Number=b.App_Number)  z
  on 
  --z.rn=1 
--and  
 a.student_id=z.applicant_id
--and a.Programme_Code=z.programme_code
and a.Admit_Term=z.Admit_Term
left join RPDW_PRD_STG..STG_OASIS_MASTER_CODE mc  on  z.Admit_Type=mc.Field_Value and mc.Field_Name='ADMIT_TYPE' ;

--------------------------------------
COMMIT TRANSACTION
END TRY

BEGIN CATCH
  ROLLBACK TRANSACTION
INSERT INTO ETL_ERROR_LOG(JOB_STATUS_ID,ERROR_RECORD,created_on)
  SELECT   
         CAST(@jobstatusid as int) as JOB_STATUS_ID
        ,ERROR_MESSAGE() AS ErrorMessage
		,GETDATE()  as created_on
  
  
END CATCH  
GO</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA3A5F46-C2AC-4F1A-A266-9E84490037FE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobStatusId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5CE06C0D-F408-44CA-B6D8-5DF91D850ED7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PrevJobStatus">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4030469B-7BB6-43EC-ADF6-CDE489C5790E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlprocesseddate">
      <DTS:VariableValue
        DTS:DataType="7">2/27/2019 11:28:20 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F563DD9F-9C13-411E-A42A-16DB3B5CFBE8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SrcTable">
      <DTS:VariableValue
        DTS:DataType="8">DW_STUDENT_MODULE_GRADES</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7BC778E9-AF2A-46FF-B2D1-D2A3ECA2BF85}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Stage">
      <DTS:VariableValue
        DTS:DataType="8">DW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C0340CD-8554-4C34-B359-BB20CC337B2B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TgtTable">
      <DTS:VariableValue
        DTS:DataType="8">DM_ORG_MODULE_GRADES_BY_PROGRAMME</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create ETL Job Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{72CEE745-62E3-4648-8B25-1D8130AC6ED3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ETL Job Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
          SQLTask:SqlStatementSource="&#xA;EXEC dbo.[usp_InsertETLJobLog]  ?,?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::Stage"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::SrcTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::TgtTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\get Job Status Id"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{EDA6FAC5-1B21-43C4-9718-78E1D1C2A85E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="get Job Status Id"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
          SQLTask:SqlStatementSource="declare  @JobstatusID int&#xA;&#xA;select @JobstatusID=max(job_status_id) from [ETL_JOB_STATUS]&#xA;where [TARGET_TABLENAME]=?&#xA;&#xA;&#xA;Select @JobstatusID "
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::JobStatusId" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::TgtTable"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\getprocesseddate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{428B2609-A4D2-41F8-BBCE-0CDB293FF40E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="getprocesseddate"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
          SQLTask:SqlStatementSource="SELECT GETDATE()"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::sqlprocesseddate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\insert into main table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1DD9CDC4-732B-40EA-A9A8-AC4A3F72E1D0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="insert into main table"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::InsertQuery" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UpdateJobStatus"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{80A04C41-FA35-4109-998A-3BE3774F5E75}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="UpdateJobStatus"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
          SQLTask:SqlStatementSource="&#xA; &#xA;&#xA;DECLARE &#xA;@jobstatusid INT&#xA;select @jobstatusid=?&#xA;IF EXISTS(SELECT * FROM dbo.ETL_ERROR_LOG WHERE [JOB_STATUS_ID]=@jobstatusid)&#xA;&#xA; BEGIN&#xA;&#xA;&#xA;&#xA; UPDATE [dbo].[ETL_JOB_STATUS]&#xA;&#xA;SET [PROCESSED_ON] =GETDATE(),&#xA;&#xA;[JOB_STATUS]='FAIL'&#xA;&#xA;WHERE [JOB_STATUS_ID]=@jobstatusid&#xA;&#xA;  END&#xA;&#xA;ELSE&#xA;&#xA;BEGIN&#xA;&#xA;UPDATE [DBO].[ETL_JOB_STATUS]&#xA;&#xA;SET [PROCESSED_ON] =GETDATE(),&#xA;&#xA;[JOB_STATUS]='Success'&#xA;&#xA;WHERE [JOB_STATUS_ID]=@jobstatusid&#xA;&#xA;END&#xA;&#xA; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::JobStatusId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{1D06146B-8EB6-47D4-90BF-EA68E850CA9C}"
      DTS:From="Package\get Job Status Id"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\getprocesseddate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1FFFCFF3-8060-408F-871E-E3392A696FF3}"
      DTS:From="Package\Create ETL Job Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\get Job Status Id" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CF37A4E5-3508-46E7-854F-E226EED7E389}"
      DTS:From="Package\getprocesseddate"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\insert into main table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{58E945B3-1C8B-4184-A49C-6BCF56F1DC2E}"
      DTS:From="Package\insert into main table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\UpdateJobStatus" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{1AAB7B95-33FE-4B08-B09E-03EEB4CE2752}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{483FA331-8665-4056-90CF-4C5AD18DCD07}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Error Log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{318CC565-7D1C-438F-9412-CF99CD22E731}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Error Log">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
              SQLTask:SqlStatementSource="  insert into [dbo].[ETL_ERROR_LOG]([JOB_STATUS_ID],[ERROR_RECORD])&#xA;  select ?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::JobStatusId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\ETL Job Status Log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5E23ED60-05DC-4A78-8D17-9E865F56B497}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ETL Job Status Log">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{16BBCAF8-9315-4952-B9B7-105BC8F42DD4}"
              SQLTask:SqlStatementSource="update [ETL_JOB_STATUS]&#xA;set Job_Status='Fail'&#xA;,Error_Msg=?&#xA;where job_status_id=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::JobStatusId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{89830E10-8918-421A-8AEB-8AC67FC81AE1}"
          DTS:From="Package.EventHandlers[OnError]\Error Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\ETL Job Status Log" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170,42"
          Id="Package\Create ETL Job Log"
          TopLeft="9,30" />
        <NodeLayout
          Size="159,42"
          Id="Package\get Job Status Id"
          TopLeft="225,31" />
        <NodeLayout
          Size="162,42"
          Id="Package\getprocesseddate"
          TopLeft="421,36" />
        <NodeLayout
          Size="179,42"
          Id="Package\insert into main table"
          TopLeft="409,135" />
        <NodeLayout
          Size="158,42"
          Id="Package\UpdateJobStatus"
          TopLeft="422,221" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="384,54.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37,0"
              Start="0,0"
              End="29.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="179,51.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46,0"
              Start="0,0"
              End="38.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="500.25,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="499.75,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="123,42"
          Id="Package.EventHandlers[OnError]\Error Log"
          TopLeft="60,60" />
        <NodeLayout
          Size="169,42"
          Id="Package.EventHandlers[OnError]\ETL Job Status Log"
          TopLeft="60,162" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="121.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,60"
              Start="0,0"
              End="23,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="19,30" />
                  <mssgle:CubicBezierSegment
                    Point1="19,30"
                    Point2="23,30"
                    Point3="23,34" />
                  <mssgle:LineSegment
                    End="23,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>