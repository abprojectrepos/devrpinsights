<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/5/2020 1:34:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-261219MZ02"
  DTS:CreatorName="NCS\P1327973"
  DTS:DTSID="{798A35F4-EA0B-4E49-8181-1E82DB76693F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1033"
  DTS:ObjectName="Csv_Extraction_ManualRun"
  DTS:PackageType="5"
  DTS:VersionBuild="518"
  DTS:VersionGUID="{51058D12-0ED1-4969-BC05-073CB39C3B30}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO_RPDW]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{EE31B508-A8DA-454D-9133-F76E99CEDCA7}"
      DTS:ObjectName="ADO_RPDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT;Application Name=SSIS-Csv_Extraction-{EE31B508-A8DA-454D-9133-F76E99CEDCA7}RP-ETL-DW-UAT.RPDW_UAT1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAD9h06Eeb6WVgfj2YQT5gY8s/w6VOs2Htn8VmAIOOEZlwAAAAAOgAAAAAIAACAAAACg6MPqFWkRCQZKq7YVms5Qfr9yGgfcnQaWQNQR6TXqqzAAAAC2btIhLWkOenF+uRHWPS3ska9xqR92jb6OdYushiV79eD2HkmEZkpXcwNuDysPO4BAAAAAnj5CEqDeyyLDXtg067Y5e2XhX6t6EmvHwtR0Cb0w+V8tl6Oe/9tZWSu2R1ahFCmtusFws3B60NFZwX/Bd1Kk0w</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO_RPDW_PSTG]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{AB76DE80-C9E4-466C-8579-FF496C260DBE}"
      DTS:ObjectName="ADO_RPDW_PSTG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT_PSTG;Application Name=SSIS-Csv_Extraction-{AB76DE80-C9E4-466C-8579-FF496C260DBE}RP-ETL-DW-UAT.RPDW_PSTG1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADHsKpO7tcmZZkfizhOTqa5+hQADNm48K6oV+o3aXnQMQAAAAAOgAAAAAIAACAAAAAQjSPkYHzaV7StVmBHHYuSKQpNBROiNOcwo+cJkWSEFTAAAABxWtY/7OJk22thHbKqmHNS0K6+aBwtrHrTxmoKv/NXJ8SlPzzkIJM+wFWKhMmjvWFAAAAAhVYTxCSHPw00N1FXAcbzHjfbCjqtZfBgL15yGkyB5LSRnzRQYuTXptSdbOlt7Oo0+wh7GeTO/A6OhWK7nmGRCw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E99C5144-324E-436D-9BE6-A83EE7152FE6}"
      DTS:ObjectName="RPDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAByWt9RBtlWyjO17FmUXZuZ3EkoFgqWmxPYvpljPCEfnQAAAAAOgAAAAAIAACAAAACu/aBAcy9h/qxPM1nF13vlNQdKX/zq/SxdlIjWyDOsoDAAAABioZjidFr/wW35Kj/ubBrCz3MrJ0YdHCaj+Y+o2rgTKY5JFsqfBlGUDfBsIlJiGMtAAAAAqdAoTX0H2/qgDEPbWkGmq/GS8cTm5vhIbwhOquGIW2xsA1M5S7vwRPnKc+kbrCpzYTDArMgEeFYttJdBuJlyOA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_PSTG]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D385496D-5F80-45D4-851E-9CA1EF249836}"
      DTS:ObjectName="RPDW_PSTG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT_PSTG;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACgdaWdq2n8+Sn5b4LtYuVCHmZ3rCJBvLW8DKJupjmMEAAAAAAOgAAAAAIAACAAAADUXnkkT2UqY8lGhTAnW2+HkBCgsBvri9HI/QgjHt4zYjAAAADcb/eT4aHDI53Gt1OkG6RZpN1iIidxPee6fGVp5wpJHU8pMO9Jo2haojBGXuARxc9AAAAAoMS3Cx9giOg0wbhxtPFa+v7vhfa2FhGHQQD5lmVTBD247rXfKYK44iE2Z3u10IH64fptrtkzrt5UvyFoPh6zxw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A0C8F17-529F-43FE-BB90-A06CFEDA4EA6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivedFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D124B2A4-82BE-4BDF-BE6F-3FF27899241E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivedTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1183F784-F32D-4EFE-BB68-CAF4C3098DF2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Delimiter">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F1D34CF-7207-4758-92C2-C2C1A422F540}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExistFlag">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00AB7B1F-1104-4D98-8554-C565B902C8B1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="1"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Frequency">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C133E0C-D083-4773-8B84-9C8DBA10817D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsOASIS">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{841A2166-BB75-416B-941C-871B20EA88B0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobId">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B63CD64-EDDE-44C6-BFC3-E613F95DC712}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobStatusId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EA7564E7-813D-4AF4-A95B-59AD222F5531}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RetentionCopies">
      <DTS:VariableValue
        DTS:DataType="3">3</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9E65048B-34F0-4C05-827F-F21DA8367444}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{03259779-0D88-409E-A16D-0FF601DE99C7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B492097-43C6-49DD-9695-2EFC16567A2B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceSystem">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{450DCF20-28A1-4138-94AC-DF1D4E446D6B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C1620F64-A297-4C8A-B0DB-AD393F5A4AB0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D88705C-4BA1-4B3C-A952-DF6A42DE6729}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TheResultSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0F416C1E-96AE-48F0-89D1-AB3BBE1CF96B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{B699C2F7-B0F4-4CCC-8E8C-686D4943E45F}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{E3BA789E-F65A-44F1-A782-8DBEF4E592DC}"
            DTS:ObjectName="{E3BA789E-F65A-44F1-A782-8DBEF4E592DC}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::TheResultSet" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{36DB4C00-6B38-4E26-BC6C-9B698B3C4576}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check File Exist"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f57f37ada7fc4e3893538ceb9b0757a2"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::SourceFolder,User::SourceName,User::SourceType"
                  ReadWriteVariables="User::FileExistFlag">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName + "_20*" + FileExtension);


            if (fileEntries.Length > 0)
            {
                Dts.Variables["User::FileExistFlag"].Value = 1;
            }
            else
            {
                Dts.Variables["User::FileExistFlag"].Value = 0;
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f57f37ada7fc4e3893538ceb9b0757a2.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D52724EF-9F3B-45F0-8361-1E2337664193}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f57f37ada7fc4e3893538ceb9b0757a2</RootNamespace>
    <AssemblyName>ST_f57f37ada7fc4e3893538ceb9b0757a2</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f57f37ada7fc4e3893538ceb9b0757a2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f57f37ada7fc4e3893538ceb9b0757a2</msb:DisplayName>
    <msb:ProjectId>{272DF0D3-02E9-450B-A448-D3CEAB273958}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f57f37ada7fc4e3893538ceb9b0757a2.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Settings.get_Default():ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Sett" +
    "ings")]

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f57f37ada7fc4e3893538ceb9b0757a2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f57f37ada7fc4e3893538ceb9b0757a2")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f57f37ada7fc4e3893538ceb9b0757a2.dll">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
awB3ABsAAwABAAQAAwAAAC8EqAAAAPgArQAAAGEFsgACAAQAAwACAAUABQABAAYABQACAAcABwAE
gAAAAQAAAJQfGCoAAAAAAAAHAAAABAAAAAAAAAAAAAAAYABlAAAAAAAPAAAAAAAAAAAAAABpAB8D
AAAAAAQAAAAAAAAAAAAAAGAAwAMAAAAADwAAAAAAAAAAAAAAaQA+AAAAAAAAAAAAAQAAAJAEAAAF
AAIAAAAASW50MzIAU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4Y2ViOWIwNzU3YTIAPE1vZHVsZT4A
U3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUX2Y1N2YzN2FkYTdmYzRlMzg5MzUzOGNlYjliMDc1N2EyLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4
Y2ViOWIwNzU3YTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2Y1N2YzN2FkYTdmYzRlMzg5MzUzOGNlYjliMDc1N2EyLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25j
YXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQBEaXJlY3Rv
cnkAAAAlVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAACFVAHMAZQByADoAOgBT
AG8AdQByAGMAZQBUAHkAcABlAAAhVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUATgBhAG0AZQAACV8A
MgAwACoAACdVAHMAZQByADoAOgBGAGkAbABlAEUAeABpAHMAdABGAGwAYQBnAABxUwBUAF8AZgA1
ADcAZgAzADcAYQBkAGEANwBmAGMANABlADMAOAA5ADMANQAzADgAYwBlAGIAOQBiADAANwA1ADcA
YQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAZdYD1C+qgkqS
hqfJEXc6wAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQHAg4OBCAAEmEEIAASZQUgARJpHAMg
ABwDIAAOBgADDg4ODgYAAh0ODg4EIAEBHAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQ
AwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4Y2ViOWIwNzU3YTIAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2C4A
AAAAAAAAAAAA8i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAYKpQfAAABABgqlB8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMAZQBi
ADkAYgAwADcANQA3AGEAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADAAOAA0AC4AMQAwADcANwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMAZQBiADkA
YgAwADcANQA3AGEAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgA1ADcAZgAzADcAYQBkAGEANwBmAGMANABlADMAOAA5ADMANQAzADgA
YwBlAGIAOQBiADAANwA1ADcAYQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMA
ZQBiADkAYgAwADcANQA3AGEAMgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAAwADgANAAuADEAMAA3ADcANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAwADgANAAuADEAMAA3ADcANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Check Source System For Validate COUNT File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{F386404B-DD0D-43A8-A118-6B319D3D040F}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check Source System For Validate COUNT File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_b9a141a7885a4a8ea27469c88e92b991"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::SourceSystem"
                  ReadWriteVariables="User::IsOASIS">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b9a141a7885a4a8ea27469c88e92b991")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b9a141a7885a4a8ea27469c88e92b991")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_b9a141a7885a4a8ea27469c88e92b991
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string Source = Dts.Variables["User::SourceSystem"].Value.ToString();
            if (Source == "OASIS")
            {
                Dts.Variables["User::IsOASIS"].Value = 1;
            }
            else
            {
                Dts.Variables["User::IsOASIS"].Value = 0;
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b9a141a7885a4a8ea27469c88e92b991</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b9a141a7885a4a8ea27469c88e92b991</msb:DisplayName>
    <msb:ProjectId>{03D599D8-29BD-4481-8CE5-F8E9F1DA484A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b9a141a7885a4a8ea27469c88e92b991.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9a141a7885a4a8ea27469c88e92b991.Properties.Settings.get_Default():ST_b9a141a7885a4a8ea27469c88e92b991.Properties.Sett" +
    "ings")]

namespace ST_b9a141a7885a4a8ea27469c88e92b991.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_b9a141a7885a4a8ea27469c88e92b991.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7011b7d7-8962-4f59-b32c-cecc0b6e82bf}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b9a141a7885a4a8ea27469c88e92b991</RootNamespace>
    <AssemblyName>ST_b9a141a7885a4a8ea27469c88e92b991</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9a141a7885a4a8ea27469c88e92b991.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9a141a7885a4a8ea27469c88e92b991.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9a141a7885a4a8ea27469c88e92b991.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b9a141a7885a4a8ea27469c88e92b991.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b9a141a7885a4a8ea27469c88e92b991.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_b9a141a7885a4a8ea27469c88e92b991.dll">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
UQBbAAAAAAAPAAAAAAAAAAAAAABaABUDAAAAAAQAAAAAAAAAAAAAAFEAtgMAAAAADwAAAAAAAAAA
AAAAWgA0AAAAAAAAAAAAAQAAAIYEAAAFAAIAAAAAAABTVF9iOWExNDFhNzg4NWE0YThlYTI3NDY5
Yzg4ZTkyYjk5MQBJbnQzMgA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTVF9iOWExNDFhNzg4NWE0YThlYTI3NDY5Yzg4ZTkyYjk5MS5k
bGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJl
SW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2I5YTE0
MWE3ODg1YTRhOGVhMjc0NjljODhlOTJiOTkxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF9iOWExNDFhNzg4NWE0YThlYTI3NDY5Yzg4ZTkyYjk5MS5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQBvcF9FcXVh
bGl0eQAAACVVAHMAZQByADoAOgBTAG8AdQByAGMAZQBTAHkAcwB0AGUAbQAAC08AQQBTAEkAUwAA
G1UAcwBlAHIAOgA6AEkAcwBPAEEAUwBJAFMAAHFTAFQAXwBiADkAYQAxADQAMQBhADcAOAA4ADUA
YQA0AGEAOABlAGEAMgA3ADQANgA5AGMAOAA4AGUAOQAyAGIAOQA5ADEALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAMkSP3uuFiJNghJhe2By3NEABCABAQgDIAAB
BSABARERBCABAQ4FIAEBEVEEIAASYQQgABJlBSABEmkcAyAAHAMgAA4FAAICDg4EIAEBHAYAARJ1
EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYI
AwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2I5YTE0MWE3ODg1YTRh
OGVhMjc0NjljODhlOTJiOTkxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC43AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABAuAAAAAAAAAAAAACouAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAcLgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAZKpQfAAABABkqlB8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGIAOQBhADEANAAxAGEANwA4ADgANQBhADQAYQA4AGUAYQAyADcANAA2ADkAYwA4
ADgAZQA5ADIAYgA5ADkAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADAAOAA0AC4AMQAwADcANwA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGIAOQBhADEANAAxAGEANwA4ADgANQBhADQAYQA4AGUAYQAyADcANAA2ADkAYwA4ADgA
ZQA5ADIAYgA5ADkAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYgA5AGEAMQA0ADEAYQA3ADgAOAA1AGEANABhADgAZQBhADIANwA0ADYA
OQBjADgAOABlADkAMgBiADkAOQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGIAOQBhADEANAAxAGEANwA4ADgANQBhADQAYQA4AGUAYQAyADcANAA2ADkA
YwA4ADgAZQA5ADIAYgA5ADkAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOAAwADgANAAuADEAMAA3ADcANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAwADgANAAuADEAMAA3ADcANwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAA8PgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{5536ED8F-FCAF-4931-9528-2D90A2178310}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Clear Archived Folder File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_1424fb95d15d495cb266a8c8ce4fff32"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::RetentionCopies,User::SourceName,User::SourceType">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_1424fb95d15d495cb266a8c8ce4fff32.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C1FEA3CB-3B98-4F1D-B25F-E8CBD53AACF8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9bf73ca80c664246846c47a50908d5f6</RootNamespace>
    <AssemblyName>ST_1424fb95d15d495cb266a8c8ce4fff32</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_9bf73ca80c664246846c47a50908d5f6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            //Declare Variables

            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            int RetentionCopies = (int) Dts.Variables["User::RetentionCopies"].Value;

            // Get total number of files in archived folder
            int fileCount = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension, SearchOption.TopDirectoryOnly).Length;
            if (fileCount > RetentionCopies)
            {
                while (fileCount > RetentionCopies)
                {
                    try
                    {
                        string[] fileEntries = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension);
                        if (Path.GetFileName(fileEntries.FirstOrDefault()) != null)
                            File.Delete(ArchiveFolder + Path.GetFileName(fileEntries.FirstOrDefault()));

                    }
                    catch (Exception e)
                    {
                        //MessageBox.Show(e.Message.ToString());
                    }

                    fileCount--;
                }


            }
            

                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_1424fb95d15d495cb266a8c8ce4fff32</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_1424fb95d15d495cb266a8c8ce4fff32</msb:DisplayName>
    <msb:ProjectId>{6CCB5C9A-49FF-44A8-A99D-535D304B86D9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1424fb95d15d495cb266a8c8ce4fff32.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Settings.get_Default():ST_9bf73ca80c664246846c47a50908d5f6.Properties.Sett" +
    "ings")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_1424fb95d15d495cb266a8c8ce4fff32.dll">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
BgCRANkEBgAhAfEAdQAhASEGfgCZANkEhAC5ANkEBgAIABQAngAIABgAowApAHMACwEuAAsA4wAu
ABMA7AAuABsACwEuACMAFAEuACsAPQEuADMAPQEuADsAPQEuAEMAFAEuAEsAQwEuAFMAPQEuAFsA
WgFDAGMAowBJAHMACwFhAHsAowBjAGsAowAbAAMAAQAEAAMAAADJBNQAAABtAdkAAAAKBt4AAgAE
AAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAACUHxoqAAAAAAAADwAAAAQAAAAAAAAAAAAAAIwA
lwAAAAAADwAAAAAAAAAAAAAAlQCWAwAAAAAEAAAAAAAAAAAAAACMADcEAAAAAA8AAAAAAAAAAAAA
AJUAcAAAAAAABAAAAAAAAAAAAAAAjAA5AQAAAAAAAAAAAQAAACoFAAAFAAIAMQBhAAAAAElFbnVt
ZXJhYmxlYDEAU1RfMTQyNGZiOTVkMTVkNDk1Y2IyNjZhOGM4Y2U0ZmZmMzIASW50MzIAU1RfOWJm
NzNjYTgwYzY2NDI0Njg0NmM0N2E1MDkwOGQ1ZjYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAR2V0RmlsZU5hbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
XzE0MjRmYjk1ZDE1ZDQ5NWNiMjY2YThjOGNlNGZmZjMyLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNlYXJjaE9wdGlvbgBFeGNlcHRpb24AQ3VsdHVy
ZUluZm8AU3lzdGVtLkxpbnEAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF85YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOWJmNzNjYTgwYzY2NDI0Njg0NmM0N2E1
MDkwOGQ1ZjYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQARmlyc3RP
ckRlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQAAIVUAcwBlAHIA
OgA6AFMAbwB1AHIAYwBlAFQAeQBwAGUAACFVAHMAZQByADoAOgBTAG8AdQByAGMAZQBOAGEAbQBl
AAApVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBkAEYAbwBsAGQAZQByAAArVQBzAGUAcgA6ADoA
UgBlAHQAZQBuAHQAaQBvAG4AQwBvAHAAaQBlAHMAAAlfADIAMAAqAABxUwBUAF8AOQBiAGYANwAz
AGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUAMAA5ADAAOABkADUAZgA2AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAARTAa2S3o00idQ+J8p72M
kQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQkHBg4ODggIHQ4EIAASZQQgABJpBSABEm0cAyAA
HAMgAA4GAAMODg4OCAADHQ4ODhF9BgACHQ4ODgwQAQEeABUSgIUBHgADCgEOBAABDg4FAAIODg4E
AAEBDggAARKAkRGAlQUgABKAmQcgAgEOEoCZCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
Ek0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF85
YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuN7QAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABUMAAAAAAAAAAAAABuMAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYDAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABABoqlB8AAAEAGiqUHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AOQBiAGYANwAzAGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUA
MAA5ADAAOABkADUAZgA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMAA4ADQALgAxADAANwA3ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMQA0ADIANABmAGIAOQA1AGQAMQA1AGQANAA5ADUAYwBiADIANgA2AGEAOABjADgAYwBl
ADQAZgBmAGYAMwAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAxADQAMgA0AGYAYgA5ADUAZAAxADUAZAA0ADkANQBjAGIAMgA2ADYAYQA4
AGMAOABjAGUANABmAGYAZgAzADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AOQBiAGYANwAzAGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBh
ADUAMAA5ADAAOABkADUAZgA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADAAOAA0AC4AMQAwADcANwA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADAAOAA0AC4AMQAwADcANwA4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Clear OASIS Archived Folder File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{7286A130-6623-43E4-9176-BD7F7EB22A02}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Clear OASIS Archived Folder File"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_b6b5e93c88f84ff89af53bf5dabede77"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::RetentionCopies,User::SourceName,User::SourceType">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_9bf73ca80c664246846c47a50908d5f6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            //Declare Variables

            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            int RetentionCopies = (int) Dts.Variables["User::RetentionCopies"].Value;

            // Get total number of files in archived folder
            int fileCount = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension, SearchOption.TopDirectoryOnly).Length;
            int CountFileCount = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*.txt", SearchOption.TopDirectoryOnly).Length;
            if (fileCount > RetentionCopies)
            {
                while (fileCount > RetentionCopies)
                {
                    try
                    {
                        string[] fileEntries = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension);
                        if (Path.GetFileName(fileEntries.FirstOrDefault()) != null)
                            File.Delete(ArchiveFolder + Path.GetFileName(fileEntries.FirstOrDefault()));

                    }
                    catch (Exception e)
                    {
                        //MessageBox.Show(e.Message.ToString());
                    }

                    fileCount--;
                }

                if (CountFileCount > RetentionCopies)
                {
                    while (CountFileCount > RetentionCopies)
                    {
                        try
                        {
                            string[] CountFileEntries = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*.txt");
                            if (Path.GetFileName(CountFileEntries.FirstOrDefault()) != null)
                                File.Delete(ArchiveFolder + Path.GetFileName(CountFileEntries.FirstOrDefault()));

                        }
                        catch (Exception e)
                        {
                            //MessageBox.Show(e.Message.ToString());
                        }

                        CountFileCount--;
                    }

                }

            }
            

                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_b6b5e93c88f84ff89af53bf5dabede77.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C1FEA3CB-3B98-4F1D-B25F-E8CBD53AACF8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9bf73ca80c664246846c47a50908d5f6</RootNamespace>
    <AssemblyName>ST_b6b5e93c88f84ff89af53bf5dabede77</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b6b5e93c88f84ff89af53bf5dabede77</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b6b5e93c88f84ff89af53bf5dabede77</msb:DisplayName>
    <msb:ProjectId>{4A104BFB-B5A9-4A95-A824-4FF7EB2DB9B2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b6b5e93c88f84ff89af53bf5dabede77.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Settings.get_Default():ST_9bf73ca80c664246846c47a50908d5f6.Properties.Sett" +
    "ings")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_b6b5e93c88f84ff89af53bf5dabede77.dll">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
2QQQAGEA2QQQAGkA2QQGAIkA2QQGALEA2QQVAMEA2QQGAHEA0wUoAMkAqwUtANEALgQyANkAXgM4
AJEAiAM8AOkA6QVAAPEAuQVHAOkA6QVQAPEAuQVWAAEBAwZdABEBCAFuABkBvgFzAMkAEgYBAHEA
2QQGAJEA2QQGACEB8QB4ACEBIQaBAJkA2QSHALkA2QQGAAgAFAChAAgAGACmACkAcwAOAS4ACwDm
AC4AEwDvAC4AGwAOAS4AIwAXAS4AKwBAAS4AMwBAAS4AOwBAAS4AQwAXAS4ASwBGAS4AUwBAAS4A
WwBdAUMAYwCmAEkAcwAOAWEAewCmAGMAawCmABsAAwABAAQAAwAAAMkE1wAAAG0B3AAAAAoG4QAC
AAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAJQfHCoAAAAAAAA5AAAABAAAAAAAAAAAAAAA
jwCXAAAAAAAPAAAAAAAAAAAAAACYAJYDAAAAAAQAAAAAAAAAAAAAAI8ANwQAAAAADwAAAAAAAAAA
AAAAmABwAAAAAAAEAAAAAAAAAAAAAACPADkBAAAAAAAAAAABAAAAKgUAAAUAAgAzAGoAAAAASUVu
dW1lcmFibGVgMQBJbnQzMgBTVF85YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNgBTVF9i
NmI1ZTkzYzg4Zjg0ZmY4OWFmNTNiZjVkYWJlZGU3NwA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAEVudW1lcmFibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBHZXRGaWxlTmFtZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFR5cGUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0
aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U1RfYjZiNWU5M2M4OGY4NGZmODlhZjUzYmY1ZGFiZWRlNzcuZGxsAGdldF9JdGVtAFN5c3RlbQBF
bnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU2VhcmNoT3B0aW9uAEV4Y2VwdGlvbgBDdWx0
dXJlSW5mbwBTeXN0ZW0uTGlucQBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUXzliZjczY2E4MGM2NjQyNDY4NDZjNDdhNTA5MDhkNWY2LlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF85YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3
YTUwOTA4ZDVmNi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABGaXJz
dE9yRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkARGlyZWN0b3J5AAAhVQBzAGUA
cgA6ADoAUwBvAHUAcgBjAGUAVAB5AHAAZQAAIVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAAClVAHMAZQByADoAOgBBAHIAYwBoAGkAdgBlAGQARgBvAGwAZABlAHIAACtVAHMAZQByADoA
OgBSAGUAdABlAG4AdABpAG8AbgBDAG8AcABpAGUAcwAACV8AMgAwACoAABFfADIAMAAqAC4AdAB4
AHQAAHFTAFQAXwA5AGIAZgA3ADMAYwBhADgAMABjADYANgA0ADIANAA2ADgANAA2AGMANAA3AGEA
NQAwADkAMAA4AGQANQBmADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAAAAAFwyoSwHnb1LiMigmKI3Wg0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUMBwgODg4I
CAgdDh0OBCAAEmUEIAASaQUgARJtHAMgABwDIAAOBgADDg4ODggAAx0ODg4RfQUAAg4ODgYAAh0O
Dg4MEAEBHgAVEoCFAR4AAwoBDgQAAQ4OBAABAQ4IAAESgJERgJUFIAASgJkHIAIBDhKAmQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQES
UQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfOWJmNzNjYTgwYzY2NDI0Njg0NmM0N2E1MDkwOGQ1ZjYA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAOAwAAAAAAAAAAAAAPowAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsMAAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABABwqlB8AAAEAHCqUHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AOQBiAGYANwAzAGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUA
MAA5ADAAOABkADUAZgA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgAMAA4ADQALgAxADAANwA4ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYgA2AGIANQBlADkAMwBjADgAOABmADgANABmAGYAOAA5AGEAZgA1ADMAYgBmADUAZABh
AGIAZQBkAGUANwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBiADYAYgA1AGUAOQAzAGMAOAA4AGYAOAA0AGYAZgA4ADkAYQBmADUAMwBi
AGYANQBkAGEAYgBlAGQAZQA3ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AOQBiAGYANwAzAGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBh
ADUAMAA5ADAAOABkADUAZgA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADAAOAA0AC4AMQAwADcAOAAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADAAOAA0AC4AMQAwADcAOAAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAwxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{2F924CC2-5374-4100-AC24-A99CC2722059}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert Data Into PreStaging"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f62f2457363645f597f519c0cadfe06e"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::ArchivedTable,User::Delimiter,User::JobId,User::SourceFolder,User::SourceName,User::SourceSystem,User::SourceType,User::TargetTable">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f62f2457363645f597f519c0cadfe06e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6ECCE1A-550E-48F9-B34C-8B27EDC84A8D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8e52562da3bf4483942ea1a933620dca</RootNamespace>
    <AssemblyName>ST_f62f2457363645f597f519c0cadfe06e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data.SqlClient;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8e52562da3bf4483942ea1a933620dca
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");

            ////SQL Connection
            //SqlConnection myADONETConnection = new SqlConnection();
            //myADONETConnection = (SqlConnection)
            //(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //PSTG SQL Connection
            SqlConnection PSTG_Connection = new SqlConnection();
            PSTG_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW_PSTG"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //DW SQL Connection
            SqlConnection DW_Connection = new SqlConnection();
            DW_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //Declare Variables
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string FileDelimiter = Dts.Variables["User::Delimiter"].Value.ToString();
            string TableName = Dts.Variables["User::TargetTable"].Value.ToString();
            string ArchiveTable = Dts.Variables["User::ArchivedTable"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceSystem = Dts.Variables["User::SourceSystem"].Value.ToString();
            string JobId = Dts.Variables["User::JobId"].Value.ToString();

            //Truncate PreStaging table
            string truncateQuery = "TRUNCATE TABLE " + TableName;
            SqlCommand truncateCommand = new SqlCommand(truncateQuery, PSTG_Connection);
            truncateCommand.ExecuteNonQuery();

            //Reading file names one by one
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName+"_20*" + FileExtension);
            foreach (string fileName in fileEntries)
            {
                try
                {
                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    //Writing Data of File Into Table
                    int counter = 0;
                    string line;
                    string ColumnNameTrimmed = "";

                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(fileName);
                    while ((line = SourceFile.ReadLine()) != null)
                    {
                        if (counter == 0)
                        {
                            SqlCommand myCommand1 = new SqlCommand("[dbo].[SP_GetPreStagingColumnHeader]", PSTG_Connection);
                            myCommand1.CommandType = CommandType.StoredProcedure;
                            myCommand1.Parameters.AddWithValue("@TableName", TableName);

                            myCommand1.Parameters.Add("@COLUMNNAME", SqlDbType.VarChar, 2000);
                            myCommand1.Parameters["@COLUMNNAME"].Direction = ParameterDirection.Output;
                            myCommand1.ExecuteNonQuery();
                                    
                            var ColumnName = (string)myCommand1.Parameters["@COLUMNNAME"].Value;
                            ColumnNameTrimmed = ColumnName.Remove(ColumnName.Length - 1, 1);
                        }
                        else
                        {
                            line = line.Replace("'", "''");
                            string query = "Insert into " + TableName + " (" + ColumnNameTrimmed + ") ";
                            query += "VALUES('" + line.Replace(FileDelimiter, "','") + "', '" + getdate + "', '" + getdate + "', '" + Path.GetFileName(fileName) + "')";

                            SqlCommand myCommand1 = new SqlCommand(query, PSTG_Connection);
                            myCommand1.ExecuteNonQuery();
                        }

                        counter++;
                    }


                    SourceFile.Close();


                    // Move Pre-Staging data into Archived Table
                    string ArchiveQuery = "INSERT INTO " + ArchiveTable + " SELECT * FROM " + TableName + " WITH(NOLOCK) WHERE Source_Filename = '" + Path.GetFileName(fileName) + "';";
                    SqlCommand archiveCommand = new SqlCommand(ArchiveQuery, PSTG_Connection);
                    archiveCommand.CommandTimeout = 0;
                    archiveCommand.ExecuteNonQuery();


                    // Insert ETL_JOB_STATUS
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Success', '', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();


                    //move the file to archive folder after adding datetime to it
                    //File.Move(fileName, ArchiveFolder + "\\" +
                    //    (fileName.Replace(SourceFolderPath, "")).Replace(FileExtension, "")
                    //    + "_" + datetime + FileExtension);
                    if (File.Exists(ArchiveFolder + Path.GetFileName(fileName)))
                    {
                        File.Delete(ArchiveFolder + Path.GetFileName(fileName));
                    }
                    File.Move(fileName, ArchiveFolder + Path.GetFileName(fileName));
                    Dts.TaskResult = (int)ScriptResults.Success;

                }
                catch (Exception exception)
                {
                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    // Insert ETL_JOB_STATUS
                    string ErrorMessage = exception.Message.ToString().Replace("'", "\"");
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Fail', '" + ErrorMessage + "', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();

                    // Get Max Job Status ID
                    int JOB_STATUS_ID;
                    string GetJobStatusId = "SELECT MAX(JOB_STATUS_ID) FROM [dbo].[ETL_JOB_STATUS] WITH(NOLOCK) WHERE TARGET_TABLENAME = '" + TableName + "';";
                    SqlCommand JobStatusIdCommand = new SqlCommand(GetJobStatusId, DW_Connection);
                    JOB_STATUS_ID = Convert.ToInt32(JobStatusIdCommand.ExecuteScalar());

                    // Insert ETL_ERROR_LOG
                    string query = "Insert into [dbo].[ETL_ERROR_LOG]";
                    query += " VALUES(" + JOB_STATUS_ID + ", '" + ErrorMessage + "', '" + getdate + "');";

                    SqlCommand myCommand1 = new SqlCommand(query, DW_Connection);
                    myCommand1.ExecuteNonQuery();

                    //Delete data due to insert halfway file got issue.
                    string query2 = "DELETE FROM " + TableName + " WHERE Source_Filename = '" + Path.GetFileName(fileName) + "'";
                    SqlCommand myCommand2 = new SqlCommand(query2, PSTG_Connection);
                    myCommand2.ExecuteNonQuery();

                }

            }
            
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f62f2457363645f597f519c0cadfe06e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f62f2457363645f597f519c0cadfe06e</msb:DisplayName>
    <msb:ProjectId>{37EECEC6-B530-4B95-B008-E69232249AE5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f62f2457363645f597f519c0cadfe06e.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Settings.get_Default():ST_8e52562da3bf4483942ea1a933620dca.Properties.Sett" +
    "ings")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f62f2457363645f597f519c0cadfe06e.dll">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
EgAOAFsBZwAOAPIENwcOAMsFNwcOAE0BZwAOAL8FVAUOADcFZwAGANIDEgAGAI4FEgAGAAoBEgAG
AE0HgwQGAAMAgwQGAGIBgwQGAOYAgwQGAHQH4AQAAAAACQAAAAAAAQABAAEAEACbBEMAOQABAAEA
AAAQAB8GewZVAAEAAwAAARAAwQZ7BmkAAwAHAAMBAAD5BgAATQAEAAoAEQCPBCEBEQCHASUBEQDB
ACkBBgY7AC0BVoDpBjABVoBnATABUCAAAAAAhgChBAYAAQCgJgAAAACGGNgFBgABAKgmAAAAAIMY
2AUGAAEAsCYAAAAAkwiZBTQBAQDcJgAAAACTCG8BOQEBAOMmAAAAAJMIewE+AQEA6yYAAAAAlggc
B0QBAgDyJgAAAACGGNgFBgACAPomAAAAAJEY3gVJAQIAAAABAJ0DCQDYBQEAEQDYBQYAGQDYBQoA
KQDYBRAAMQDYBRAAOQDYBRAAQQDYBRAASQDYBRAAUQDYBRAAWQDYBRAAYQDYBRAAaQDYBQYAoQDY
BQYAyQDYBRUA2QDYBQYAgQBoBzwAgQDJA0EAeQDYBQYAcQDxBkYA4QDKBksA6QB6BFAA4QDQBFYA
8QAJBVoA4QCqBl8A+QB6BGQAAQGGA1YAqQDJA2sACQEOB28AEQHYBXUAGQF9B3wACQEOB4AAIQG4
BocAiQDYBRAAGQFXAY4AEQHaBpUAMQGQA5sAMQF8AKMAMQF6BK4ASQEpBbUASQGGA1YACQHXA3wA
CQGoA7wACQG5AMIACQEOB8gAWQEPAc4AYQFEAWsAYQHLAQYAGQFVBwEAaQEHB9MAaQHmAdgAaQGj
A90A4QAoBwEAkQDRAGsAGQFzBVYAcQEBAOMACQEOB+gAcQDYBQYAqQDYBQYAgQH4AO4AgQFwB/cA
sQDYBf0A0QDYBQYACAAUABcBCAAYABwBKQBzAIQBLgALAFwBLgATAGUBLgAbAIQBLgAjAI0BLgAr
ALYBLgAzALYBLgA7ALYBLgBDAI0BLgBLALwBLgBTALYBLgBbANMBQwBjABwBSQBzAIQBYQB7ABwB
YwBrABwBGwADAAEABAADAAAAnQVNAQAAjwFSAQAAIAdXAQIABAADAAIABQAFAAEABgAFAAIABwAH
AASAAAABAAAAlB8dKgAAAAAAAJUAAAAEAAAAAAAAAAAAAAAFAXMAAAAAAA8AAAAAAAAAAAAAAA4B
4gMAAAAABAAAAAAAAAAAAAAABQFnAAAAAAAEAAAAAAAAAAAAAAAFAYMEAAAAAA8AAAAAAAAAAAAA
AA4BHAAAAAAAAAAAAAEAAAApBgAABQACAAAAAFRvSW50MzIAPE1vZHVsZT4AU3lzdGVtLklPAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzhlNTI1NjJkYTNiZjQ0ODM5
NDJlYTFhOTMzNjIwZGNhAFN5c3RlbS5EYXRhAG1zY29ybGliAEFkZABEYkNvbW1hbmQAU3FsQ29t
bWFuZABTVF9mNjJmMjQ1NzM2MzY0NWY1OTdmNTE5YzBjYWRmZTA2ZQBSZXBsYWNlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBGaWxlAEdldEZpbGVOYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAUmVhZExpbmUAU3FsRGJUeXBlAHNldF9Db21tYW5kVHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
RGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAQWRkV2l0aFZhbHVlAHZhbHVlAE1vdmUAUmVtb3Zl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABnZXRfTGVuZ3RoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9mNjJm
MjQ1NzM2MzY0NWY1OTdmNTE5YzBjYWRmZTA2ZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVj
dGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAHNldF9EaXJlY3Rpb24AUGFyYW1l
dGVyRGlyZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8ARXhl
Y3V0ZVNjYWxhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENv
bm5lY3Rpb25NYW5hZ2VyAERiUGFyYW1ldGVyAFNxbFBhcmFtZXRlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTVF84ZTUyNTYyZGEzYmY0NDgzOTQyZWExYTkzMzYyMGRjYS5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOGU1MjU2MmRhM2JmNDQ4Mzk0MmVh
MWE5MzM2MjBkY2EuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAGdl
dF9Db25uZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBFeGlzdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0u
RGF0YS5TcWxDbGllbnQAQ29udmVydABzZXRfQ29tbWFuZFRpbWVvdXQAZ2V0X05vdwBnZXRfQXNz
ZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AERpcmVjdG9yeQAAAB15AHkAeQB5AE0ATQBkAGQASABIAG0A
bQBzAHMAABtBAEQATwBfAFIAUABEAFcAXwBQAFMAVABHAAARQQBEAE8AXwBSAFAARABXAAAlVQBz
AGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAACFVAHMAZQByADoAOgBTAG8AdQByAGMA
ZQBUAHkAcABlAAAfVQBzAGUAcgA6ADoARABlAGwAaQBtAGkAdABlAHIAACNVAHMAZQByADoAOgBU
AGEAcgBnAGUAdABUAGEAYgBsAGUAACdVAHMAZQByADoAOgBBAHIAYwBoAGkAdgBlAGQAVABhAGIA
bABlAAApVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBkAEYAbwBsAGQAZQByAAAhVQBzAGUAcgA6
ADoAUwBvAHUAcgBjAGUATgBhAG0AZQAAJVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAFMAeQBzAHQA
ZQBtAAAXVQBzAGUAcgA6ADoASgBvAGIASQBkAAAfVABSAFUATgBDAEEAVABFACAAVABBAEIATABF
ACAAAAlfADIAMAAqAAAveQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgASAA6AG0AbQA6AHMAcwAuAGYA
ZgBmAAEBAElbAGQAYgBvAF0ALgBbAFMAUABfAEcAZQB0AFAAcgBlAFMAdABhAGcAaQBuAGcAQwBv
AGwAdQBtAG4ASABlAGEAZABlAHIAXQAAFUAAVABhAGIAbABlAE4AYQBtAGUAABdAAEMATwBMAFUA
TQBOAE4AQQBNAEUAAAMnAAEFJwAnAAEZSQBuAHMAZQByAHQAIABpAG4AdABvACAAAAUgACgAAAUp
ACAAABFWAEEATABVAEUAUwAoACcAAQcnACwAJwABCScALAAgACcAAQUnACkAARlJAE4AUwBFAFIA
VAAgAEkATgBUAE8AIAAAHyAAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAABPIABXAEkAVABI
ACgATgBPAEwATwBDAEsAKQAgAFcASABFAFIARQAgAFMAbwB1AHIAYwBlAF8ARgBpAGwAZQBuAGEA
bQBlACAAPQAgACcAAQUnADsAAUVJAG4AcwBlAHIAdAAgAGkAbgB0AG8AIABbAGQAYgBvAF0ALgBb
AEUAVABMAF8ASgBPAEIAXwBTAFQAQQBUAFUAUwBdAAATIABWAEEATABVAEUAUwAoACcAAQcgAC0A
IAABGScALAAgACcAUABTAFQARwAnACwAIAAnAAEJJwAgACwAJwABJycALAAgACcAUwB1AGMAYwBl
AHMAcwAnACwAIAAnACcALAAgACcAAQcnACkAOwABAyIAABknACwAIAAnAEYAYQBpAGwAJwAsACAA
JwABgLtTAEUATABFAEMAVAAgAE0AQQBYACgASgBPAEIAXwBTAFQAQQBUAFUAUwBfAEkARAApACAA
RgBSAE8ATQAgAFsAZABiAG8AXQAuAFsARQBUAEwAXwBKAE8AQgBfAFMAVABBAFQAVQBTAF0AIABX
AEkAVABIACgATgBPAEwATwBDAEsAKQAgAFcASABFAFIARQAgAFQAQQBSAEcARQBUAF8AVABBAEIA
TABFAE4AQQBNAEUAIAA9ACAAJwABQ0kAbgBzAGUAcgB0ACAAaQBuAHQAbwAgAFsAZABiAG8AXQAu
AFsARQBUAEwAXwBFAFIAUgBPAFIAXwBMAE8ARwBdAAARIABWAEEATABVAEUAUwAoAAAHLAAgACcA
ARlEAEUATABFAFQARQAgAEYAUgBPAE0AIAAANSAAVwBIAEUAUgBFACAAUwBvAHUAcgBjAGUAXwBG
AGkAbABlAG4AYQBtAGUAIAA9ACAAJwABcVMAVABfADgAZQA1ADIANQA2ADIAZABhADMAYgBmADQA
NAA4ADMAOQA0ADIAZQBhADEAYQA5ADMAMwA2ADIAMABkAGMAYQAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABjhITazjezT7IlZFRcI2ltAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFhIAcZEj0SPQ4ODg4ODg4RQR0OCA4OCA4OEkUODg4ODggOBAAAEUEEIAEODgQg
ABJxBCAAEnUFIAESeRwDIAAcBCABHBwEIAASfQYgARKAgRwDIAAOBQACDg4OBiACAQ4SPQMgAAgG
AAMODg4OBgACHQ4ODgYgAQERgJUFIAASgJkHIAISgJ0OHAogAxKAnQ4RgKEIBiABEoCdDgYgAQER
gKkFIAIOCAgFIAIODg4FAAEOHQ4EAAEODgQAAQIOBAABAQ4FAAIBDg4EAAEIHAUAAQ4dHAgAARKA
wRGAxQUgABKAyQcgAgEOEoDJCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElkDBhJdAwYS
EAIGCAMGERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkECAASXQQIABIQCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84ZTUyNTYyZGEz
YmY0NDgzOTQyZWExYTkzMzYyMGRjYQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4PQAAAAAAAAAAAABSPQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAARD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAB0qlB8AAAEAHSqUHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOABlADUAMgA1ADYAMgBkAGEAMwBiAGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAzADYA
MgAwAGQAYwBhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAMAA4
ADQALgAxADAANwA4ADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZgA2ADIAZgAyADQANQA3ADMANgAzADYANAA1AGYANQA5ADcAZgA1ADEAOQBjADAAYwBhAGQAZgBl
ADAANgBlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBmADYAMgBmADIANAA1ADcAMwA2ADMANgA0ADUAZgA1ADkANwBmADUAMQA5AGMAMABj
AGEAZABmAGUAMAA2AGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AOABlADUAMgA1ADYAMgBkAGEAMwBiAGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAz
ADYAMgAwAGQAYwBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA4ADAAOAA0AC4AMQAwADcAOAAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA4ADAAOAA0AC4AMQAwADcAOAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{11B170AB-A629-40B9-99F8-06A1AF97ABDD}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{E99C5144-324E-436D-9BE6-A83EE7152FE6}"
                  SQLTask:SqlStatementSource="EXEC [RPDW_PRD_PSTG].[dbo].[SP_InsertMissingFileErrorLog] ?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::SourceSystem"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::SourceName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert OASIS Data Into PreStaging"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{26ED8B50-2D6C-4BF4-B86D-F7072AA05DEF}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert OASIS Data Into PreStaging"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_6705ecbf39404d99a091c763cb4046d1"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::ArchivedTable,User::Delimiter,User::JobId,User::SourceFolder,User::SourceName,User::SourceSystem,User::SourceType,User::TargetTable">
                  <ProjectItem
                    Name="ST_6705ecbf39404d99a091c763cb4046d1.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6ECCE1A-550E-48F9-B34C-8B27EDC84A8D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8e52562da3bf4483942ea1a933620dca</RootNamespace>
    <AssemblyName>ST_6705ecbf39404d99a091c763cb4046d1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data.SqlClient;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8e52562da3bf4483942ea1a933620dca
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
     
            ////SQL Connection
            //SqlConnection myADONETConnection = new SqlConnection();
            //myADONETConnection = (SqlConnection)
            //(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //PSTG SQL Connection
            SqlConnection PSTG_Connection = new SqlConnection();
            PSTG_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW_PSTG"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //DW SQL Connection
            SqlConnection DW_Connection = new SqlConnection();
            DW_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //Declare Variables
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string FileDelimiter = Dts.Variables["User::Delimiter"].Value.ToString();
            string TableName = Dts.Variables["User::TargetTable"].Value.ToString();
            string ArchiveTable = Dts.Variables["User::ArchivedTable"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceSystem = Dts.Variables["User::SourceSystem"].Value.ToString();
            string JobId = Dts.Variables["User::JobId"].Value.ToString();


            //Truncate PreStaging table
            string truncateQuery = "TRUNCATE TABLE " + TableName;
            SqlCommand truncateCommand = new SqlCommand(truncateQuery, PSTG_Connection);
            truncateCommand.ExecuteNonQuery();

           
            //Reading file names one by one
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName+"_20*" + FileExtension);
            foreach (string fileName in fileEntries)
            {
                string FilenameTrimed = Path.GetFileName(fileName).Substring(0,Path.GetFileName(fileName).Length -4);
                string[] CountFileEntries = Directory.GetFiles(SourceDirectory, FilenameTrimed + "_CNT.txt");

                if (CountFileEntries.Length > 0)
                {
                    
                    foreach (string countfile in CountFileEntries)
                    {
                        try
                        {
                            string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                            System.IO.StreamReader CountSourceFile = new System.IO.StreamReader(countfile);
                            string CountFileTotalRecord = CountSourceFile.ReadLine();
                            int CastCountFileTotalRecord = Int32.Parse(CountFileTotalRecord.ToString().Trim());

                            string[] ReadSourceFile = File.ReadAllLines(fileName);
                            int CastSourceFile = Int32.Parse(ReadSourceFile.Length.ToString().Trim());
                            int SourceFileTotalRecord = CastSourceFile - 1;

                            if (SourceFileTotalRecord == CastCountFileTotalRecord)
                            {

                                //Writing Data of File Into Table
                                int counter = 0;
                                string line;
                                string ColumnNameTrimmed = "";

                                
                                System.IO.StreamReader SourceFile = new System.IO.StreamReader(fileName);
                                while ((line = SourceFile.ReadLine()) != null)
                                {
                                    if (counter == 0)
                                    {
                                        SqlCommand myCommand1 = new SqlCommand("[dbo].[SP_GetPreStagingColumnHeader]", PSTG_Connection);
                                        myCommand1.CommandType = CommandType.StoredProcedure;
                                        myCommand1.Parameters.AddWithValue("@TableName", TableName);

                                        myCommand1.Parameters.Add("@COLUMNNAME", SqlDbType.VarChar, 2000);
                                        myCommand1.Parameters["@COLUMNNAME"].Direction = ParameterDirection.Output;
                                        myCommand1.ExecuteNonQuery();

                                        var ColumnName = (string)myCommand1.Parameters["@COLUMNNAME"].Value;
                                        ColumnNameTrimmed = ColumnName.Remove(ColumnName.Length - 1, 1);
                         
                                    }
                                    else
                                    {
                                        
                                        line = line.Replace("'", "''");
                                        string query = "Insert into " + TableName + " (" + ColumnNameTrimmed + ") ";
                                        query += "VALUES('" + line.Replace(FileDelimiter, "','") + "', '"+ getdate + "', '" + getdate + "', '" + Path.GetFileName(fileName) + "')";

                                        SqlCommand myCommand1 = new SqlCommand(query, PSTG_Connection);
                                        myCommand1.ExecuteNonQuery();
                                    }

                                    counter++;
                                }

                                CountSourceFile.Close();
                                SourceFile.Close();

                                // Move Pre-Staging data into Archived Table
                                string ArchiveQuery = "INSERT INTO " + ArchiveTable + " SELECT * FROM " + TableName + " WITH(NOLOCK) WHERE Source_Filename = '" + Path.GetFileName(fileName) + "';";
                                SqlCommand archiveCommand = new SqlCommand(ArchiveQuery, PSTG_Connection);
                                archiveCommand.CommandTimeout = 0;
                                archiveCommand.ExecuteNonQuery();


                                // Insert ETL_JOB_STATUS
                                string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                                JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' , '" + getdate + "', 'Success', '', '" + getdate + "');";

                                SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                                JobStatusCommand.ExecuteNonQuery();


                                //move the file to archive folder
                                //File.Move(fileName, ArchiveFolder + "\\" +
                                //    (fileName.Replace(SourceFolderPath, "")).Replace(FileExtension, "")
                                //    + "_" + datetime + FileExtension);
                                if (File.Exists(ArchiveFolder + Path.GetFileName(fileName)))
                                {
                                    File.Delete(ArchiveFolder + Path.GetFileName(fileName));
                                }

                                File.Move(fileName, ArchiveFolder + Path.GetFileName(fileName));

                                // Move Count file to archived folder
                                if (File.Exists(ArchiveFolder + Path.GetFileName(countfile)))
                                {
                                    File.Delete(ArchiveFolder + Path.GetFileName(countfile));
                                }

                                File.Move(countfile, ArchiveFolder + Path.GetFileName(countfile));
                                

                                Dts.TaskResult = (int)ScriptResults.Success;

                            }
                            else
                            {

                                // Insert ETL_JOB_STATUS
                                string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                                JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' , '" + getdate + "', 'Fail', 'Mismatch between number of records loaded and CNT file', '" + getdate + "');";

                                SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                                JobStatusCommand.ExecuteNonQuery();

                                // Get Max Job Status ID
                                int JOB_STATUS_ID;
                                string GetJobStatusId = "SELECT MAX(JOB_STATUS_ID) FROM [dbo].[ETL_JOB_STATUS] WITH(NOLOCK) WHERE TARGET_TABLENAME = '" + TableName +"';";
                                SqlCommand JobStatusIdCommand = new SqlCommand(GetJobStatusId, DW_Connection);
                                JOB_STATUS_ID = Convert.ToInt32(JobStatusIdCommand.ExecuteScalar());

                                // Insert ETL_ERROR_LOG
                                string query = "Insert into [dbo].[ETL_ERROR_LOG]";
                                query += " VALUES(" + JOB_STATUS_ID + ", 'Total Records not tally with Count File ( " + Path.GetFileName(fileName) + " & " + FilenameTrimed + "_CNT.txt )', '" + getdate + "');";

                                SqlCommand myCommand1 = new SqlCommand(query, DW_Connection);
                                myCommand1.ExecuteNonQuery();

                            }


                        }
                        catch (Exception exception)
                        {
                            string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                            // Insert ETL_JOB_STATUS
                            string ErrorMessage = exception.Message.ToString().Replace("'", "\"");
                            string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                            JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Fail', '"+ ErrorMessage + "', '" + getdate + "');";

                            SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                            JobStatusCommand.ExecuteNonQuery();

                            // Get Max Job Status ID
                            int JOB_STATUS_ID;
                            string GetJobStatusId = "SELECT MAX(JOB_STATUS_ID) FROM [dbo].[ETL_JOB_STATUS] WITH(NOLOCK) WHERE TARGET_TABLENAME = '" + TableName + "';";
                            SqlCommand JobStatusIdCommand = new SqlCommand(GetJobStatusId, DW_Connection);
                            JOB_STATUS_ID = Convert.ToInt32(JobStatusIdCommand.ExecuteScalar());

                            // Insert ETL_ERROR_LOG
                            string query = "Insert into [dbo].[ETL_ERROR_LOG]";
                            query += " VALUES(" + JOB_STATUS_ID + ", '" + ErrorMessage + "', '" + getdate + "');";

                            SqlCommand myCommand1 = new SqlCommand(query, DW_Connection);
                            myCommand1.ExecuteNonQuery();


                            //Delete data due to insert halfway file got issue.
                            string query2 = "DELETE FROM " + TableName + " WHERE Source_Filename = '" + Path.GetFileName(fileName) + "'";
                            SqlCommand myCommand2 = new SqlCommand(query2, PSTG_Connection);
                            myCommand2.ExecuteNonQuery();

                            //// Create Log File for Errors
                            //using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString()
                            //    + "\\" + "ErrorLog_" + datetime + ".log"))
                            //{
                            //    sw.WriteLine(exception.ToString());
                            //    Dts.TaskResult = (int)ScriptResults.Failure;
                            //}

                        }

                    }

                }
                else
                {
                    // Count file missing insert error log table //

                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    // Insert ETL_JOB_STATUS
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Fail', 'CNT file missing', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();

                    // Get Max Job Status ID
                    int JOB_STATUS_ID;
                    string GetJobStatusId = "SELECT MAX(JOB_STATUS_ID) FROM [dbo].[ETL_JOB_STATUS] WITH(NOLOCK) WHERE TARGET_TABLENAME = '" + TableName + "';";
                    SqlCommand JobStatusIdCommand = new SqlCommand(GetJobStatusId, DW_Connection);
                    JOB_STATUS_ID = Convert.ToInt32(JobStatusIdCommand.ExecuteScalar());

                    // Insert ETL_ERROR_LOG
                    string query = "Insert into [dbo].[ETL_ERROR_LOG]";
                    query += " VALUES(" + JOB_STATUS_ID + ", 'Count file missing ( " + FilenameTrimed + "_CNT.txt )', '" + getdate + "');";

                    SqlCommand myCommand1 = new SqlCommand(query, DW_Connection);
                    myCommand1.ExecuteNonQuery();

                }
                
            }
            
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6705ecbf39404d99a091c763cb4046d1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6705ecbf39404d99a091c763cb4046d1</msb:DisplayName>
    <msb:ProjectId>{BB893AEF-6583-47DB-BFB7-D76FD63A9527}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6705ecbf39404d99a091c763cb4046d1.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Settings.get_Default():ST_8e52562da3bf4483942ea1a933620dca.Properties.Sett" +
    "ings")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_6705ecbf39404d99a091c763cb4046d1.dll">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
AHCiJRoRB6IlG3K9AwBwoiUcEQ0oIQAACqIlHXK7AgBwoiUeEQSiJR8JcjsGAHCiJR8KESWiJR8L
crcGAHCiJR8MESWiJR8NcgsEAHCiKDMAAAoTJhEmB3MdAAAKbx4AAAomcqIEAHARBHJVAwBwKB8A
AAoHcx0AAApvOgAACig7AAAKEydyXwUAcBMoHo0VAAABJRYRKKIlF3KjBQBwoiUYESeMJwAAAaIl
GXL5BgBwoiUaEQ6iJRtyGQYAcKIlHBEloiUdcgsEAHCiKDwAAAoTKBEoB3MdAAAKbx4AAAomEQwX
WBMMEQwRC45pP4z4//8CKBMAAAoWbzkAAAoqAEEcAAAAAAAAJgIAAFkEAAB/BgAAhQEAABIAAAEe
Aig+AAAKKh4CKD8AAAoqrn4BAAAELR5yKwcAcNADAAACKEAAAApvQQAACnNCAAAKgAEAAAR+AQAA
BCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoQwAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAEAFAAAjfgAArAUAALwHAAAjU3RyaW5ncwAAAABoDQAA
oAcAACNVUwAIFQAAEAAAACNHVUlEAAAAGBUAADwCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA
+gEzABYAAAEAAAAyAAAABQAAAAYAAAAJAAAAAQAAAEMAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQA
AAABAAAABQAAAAEAAAABAAAAAABiBAEAAAAAAAYA3wINBgYAbgMNBgYAKwL6BQ8AgQYAAAYAWAL1
BAYAwgL1BAYAowL1BAYAVQP1BAYA/wL1BAYAGAP1BAYAbwL1BAYAigK1AwoAMwMRBAoAlwERBA4A
MAVZBwYAGwGTBAYAlgU2AAYAXwWTBAYAnwSTBAYADgL6BQYANweTBAYAsgUtBgYAfAXQBBIA1wFM
BBIAPwJMBBIAswG7BAYA8wENBgoAOgQRBBYA8AYkARYAwgUkARYAwwYkARYA3QAkAQYA0QOTBA4A
rgBZBw4ApABpBQYArwc2AAYA4gM2AAYAowU2AAYAJwCTBAYACgE2AA4AWwGLAA4ABwVZBw4A4AVZ
Bw4ATQGLAA4A1AVpBQ4ATAWLAAYAbweTBAYAYgGTBAYA5gCTBAYAlgf1BAAAAAAtAAAAAAABAAEA
AQAQALAEZwA5AAEAAQAAABAANAaQBlUAAQADAAABEADjBpAGaQADAAcAAwEAABsHAABNAAQACgAR
AKQEPwERAIcBQwERAMEARwEGBl8ASwFWgAsHTgFWgGcBTgFQIAAAAACGALYEBgABAMwpAAAAAIYY
7QUGAAEA1CkAAAAAgxjtBQYAAQDcKQAAAACTCK4FUgEBAAgqAAAAAJMIbwFXAQEADyoAAAAAkwh7
AVwBAQAXKgAAAACWCD4HYgECAB4qAAAAAIYY7QUGAAIAJioAAAAAkRjzBWcBAgAAAAEAowMJAO0F
AQARAO0FBgAZAO0FCgApAO0FEAAxAO0FEAA5AO0FEABBAO0FEABJAO0FEABRAO0FEABZAO0FEABh
AO0FEABpAO0FBgChAO0FBgDJAO0FFQDZAO0FBgCBAIoHTwCBAM8DVAB5AO0FBgBxABMHWQDhAOwG
XgDpAIoEYwDhAOUEaQDxAB4FbQDhAL8GcgD5AIoEdwABAYwDaQCpAM8DfgAJATAHggARAe0FiAAZ
AZ8HjwAJATAHkwAhAc0GmgApAQ8BoQAJAecDjwAJAdgDpgCJAO0FEAAxAUQBfgAJAZoEfgA5AdEB
rABBAdYGsQA5Ac8DfgAZAVcBtwARAfwGvgBRAZYDxABRAaAAzABRAYoE1wBpAT4F3gBpAYwDaQAJ
Aa4DpgAJAbkA5QAJATAH6wAxAcsBBgAZAXcHAQBBASkH8QBBAewB9gBBAakD+wDhAEoHAQAZAYgF
aQB5ASUAAQEJATAHBgGRANEAfgBxAO0FBgCpAO0FBgCBAfgADAGBAZIHFQGxAO0FGwHRAO0FBgAI
ABQANQEIABgAOgEpAHMAogEuAAsAegEuABMAgwEuABsAogEuACMAqwEuACsA1AEuADMA1AEuADsA
1AEuAEMAqwEuAEsA2gEuAFMA1AEuAFsA8QFDAGMAOgFJAHMAogFhAHsAOgFjAGsAOgEbAAMAAQAE
AAMAAACyBWsBAACPAXABAABCB3UBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAACUHx8q
AAAAAAAAAQAAAAQAAAAAAAAAAAAAACMBlwAAAAAADwAAAAAAAAAAAAAALAHyAwAAAAAEAAAAAAAA
AAAAAAAjAYsAAAAAAAQAAAAAAAAAAAAAACMBkwQAAAAADwAAAAAAAAAAAAAALAFAAAAAAAAAAAAA
AQAAAD4GAAAFAAIAAAAAAABTVF82NzA1ZWNiZjM5NDA0ZDk5YTA5MWM3NjNjYjQwNDZkMQBUb0lu
dDMyADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBTVF84ZTUyNTYyZGEzYmY0NDgzOTQyZWExYTkzMzYyMGRjYQBTeXN0ZW0uRGF0YQBtc2Nv
cmxpYgBBZGQARGJDb21tYW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X01lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmls
ZQBHZXRGaWxlTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFJl
YWRMaW5lAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBNb3ZlAFJlbW92ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBQYXRoAGdldF9MZW5ndGgA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
XzY3MDVlY2JmMzk0MDRkOTlhMDkxYzc2M2NiNDA0NmQxLmRsbABnZXRfSXRlbQBTeXN0ZW0AVHJp
bQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFt
ZXRlckNvbGxlY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBzZXRfRGlyZWN0
aW9uAFBhcmFtZXRlckRpcmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1
cmVJbmZvAEV4ZWN1dGVTY2FsYXIAU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfOGU1MjU2MmRhM2JmNDQ4Mzk0MmVhMWE5MzM2MjBkY2EuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzhlNTI1NjJkYTNi
ZjQ0ODM5NDJlYTFhOTMzNjIwZGNhLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBS
ZWFkQWxsTGluZXMAU2V0dGluZ3MAZ2V0X0Nvbm5lY3Rpb25zAGdldF9QYXJhbWV0ZXJzAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0
AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABDb252ZXJ0AHNldF9Db21tYW5k
VGltZW91dABnZXRfTm93AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkARGlyZWN0b3J5AAAA
AAAdeQB5AHkAeQBNAE0AZABkAEgASABtAG0AcwBzAAAbQQBEAE8AXwBSAFAARABXAF8AUABTAFQA
RwAAEUEARABPAF8AUgBQAEQAVwAAJVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAEYAbwBsAGQAZQBy
AAAhVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUAVAB5AHAAZQAAH1UAcwBlAHIAOgA6AEQAZQBsAGkA
bQBpAHQAZQByAAAjVQBzAGUAcgA6ADoAVABhAHIAZwBlAHQAVABhAGIAbABlAAAnVQBzAGUAcgA6
ADoAQQByAGMAaABpAHYAZQBkAFQAYQBiAGwAZQAAKVUAcwBlAHIAOgA6AEEAcgBjAGgAaQB2AGUA
ZABGAG8AbABkAGUAcgAAIVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAE4AYQBtAGUAACVVAHMAZQBy
ADoAOgBTAG8AdQByAGMAZQBTAHkAcwB0AGUAbQAAF1UAcwBlAHIAOgA6AEoAbwBiAEkAZAAAH1QA
UgBVAE4AQwBBAFQARQAgAFQAQQBCAEwARQAgAAAJXwAyADAAKgAAEV8AQwBOAFQALgB0AHgAdAAA
L3kAeQB5AHkALQBNAE0ALQBkAGQAIABIAEgAOgBtAG0AOgBzAHMALgBmAGYAZgABAQBJWwBkAGIA
bwBdAC4AWwBTAFAAXwBHAGUAdABQAHIAZQBTAHQAYQBnAGkAbgBnAEMAbwBsAHUAbQBuAEgAZQBh
AGQAZQByAF0AABVAAFQAYQBiAGwAZQBOAGEAbQBlAAAXQABDAE8ATABVAE0ATgBOAEEATQBFAAAD
JwABBScAJwABGUkAbgBzAGUAcgB0ACAAaQBuAHQAbwAgAAAFIAAoAAAFKQAgAAARVgBBAEwAVQBF
AFMAKAAnAAEHJwAsACcAAQknACwAIAAnAAEFJwApAAEZSQBOAFMARQBSAFQAIABJAE4AVABPACAA
AB8gAFMARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIAAATyAAVwBJAFQASAAoAE4ATwBMAE8AQwBL
ACkAIABXAEgARQBSAEUAIABTAG8AdQByAGMAZQBfAEYAaQBsAGUAbgBhAG0AZQAgAD0AIAAnAAEF
JwA7AAFFSQBuAHMAZQByAHQAIABpAG4AdABvACAAWwBkAGIAbwBdAC4AWwBFAFQATABfAEoATwBC
AF8AUwBUAEEAVABVAFMAXQAAEyAAVgBBAEwAVQBFAFMAKAAnAAEHIAAtACAAARknACwAIAAnAFAA
UwBUAEcAJwAsACAAJwABCycAIAAsACAAJwABJycALAAgACcAUwB1AGMAYwBlAHMAcwAnACwAIAAn
ACcALAAgACcAAQcnACkAOwABgI0nACwAIAAnAEYAYQBpAGwAJwAsACAAJwBNAGkAcwBtAGEAdABj
AGgAIABiAGUAdAB3AGUAZQBuACAAbgB1AG0AYgBlAHIAIABvAGYAIAByAGUAYwBvAHIAZABzACAA
bABvAGEAZABlAGQAIABhAG4AZAAgAEMATgBUACAAZgBpAGwAZQAnACwAIAAnAAGAu1MARQBMAEUA
QwBUACAATQBBAFgAKABKAE8AQgBfAFMAVABBAFQAVQBTAF8ASQBEACkAIABGAFIATwBNACAAWwBk
AGIAbwBdAC4AWwBFAFQATABfAEoATwBCAF8AUwBUAEEAVABVAFMAXQAgAFcASQBUAEgAKABOAE8A
TABPAEMASwApACAAVwBIAEUAUgBFACAAVABBAFIARwBFAFQAXwBUAEEAQgBMAEUATgBBAE0ARQAg
AD0AIAAnAAFDSQBuAHMAZQByAHQAIABpAG4AdABvACAAWwBkAGIAbwBdAC4AWwBFAFQATABfAEUA
UgBSAE8AUgBfAEwATwBHAF0AABEgAFYAQQBMAFUARQBTACgAAFssACAAJwBUAG8AdABhAGwAIABS
AGUAYwBvAHIAZABzACAAbgBvAHQAIAB0AGEAbABsAHkAIAB3AGkAdABoACAAQwBvAHUAbgB0ACAA
RgBpAGwAZQAgACgAIAABByAAJgAgAAAdXwBDAE4AVAAuAHQAeAB0ACAAKQAnACwAIAAnAAEDIgAA
CScAIAAsACcAARknACwAIAAnAEYAYQBpAGwAJwAsACAAJwABBywAIAAnAAEZRABFAEwARQBUAEUA
IABGAFIATwBNACAAADUgAFcASABFAFIARQAgAFMAbwB1AHIAYwBlAF8ARgBpAGwAZQBuAGEAbQBl
ACAAPQAgACcAAUEnACwAIAAnAEYAYQBpAGwAJwAsACAAJwBDAE4AVAAgAGYAaQBsAGUAIABtAGkA
cwBzAGkAbgBnACcALAAgACcAATEsACAAJwBDAG8AdQBuAHQAIABmAGkAbABlACAAbQBpAHMAcwBp
AG4AZwAgACgAIAABcVMAVABfADgAZQA1ADIANQA2ADIAZABhADMAYgBmADQANAA4ADMAOQA0ADIA
ZQBhADEAYQA5ADMAMwA2ADIAMABkAGMAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAAAA6sgHhFILoUqVkgQYjrUD7QAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
YTMHKRI9Ej0ODg4ODg4ODhFBHQ4IDg4dDh0OCA4OEkUICAgODhJFDg4OCA4ODg4IDg4OCA4EAAAR
QQQgAQ4OBCAAEnEEIAASdQUgARJ5HAMgABwEIAEcHAQgABJ9BiABEoCBHAMgAA4FAAIODg4GIAIB
DhI9AyAACAYAAw4ODg4GAAIdDg4OBAABDg4FIAIOCAgEAAEIDgUAAR0ODgYgAQERgKUFIAASgKkH
IAISgK0OHAogAxKArQ4RgLEIBiABEoCtDgYgAQERgLkFIAIODg4FAAEOHQ4EAAECDgQAAQEOBQAC
AQ4OBAABCBwFAAEOHRwIAAESgMERgMUFIAASgMkHIAIBDhKAyQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJZAwYSXQMGEhACBggDBhEUBAAAElkEAAASXQUAAQESXQQAABIQAwAAAQQIABJZ
BAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfOGU1MjU2MmRhM2JmNDQ4Mzk0MmVhMWE5MzM2MjBkY2EAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGhCAAAAAAAAAAAA
AIJCAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0QgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
GgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAB8qlB8AAAEAHyqUHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
OABlADUAMgA1ADYAMgBkAGEAMwBiAGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAzADYAMgAw
AGQAYwBhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAMAA4ADQA
LgAxADAANwA4ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANgA3
ADAANQBlAGMAYgBmADMAOQA0ADAANABkADkAOQBhADAAOQAxAGMANwA2ADMAYwBiADQAMAA0ADYA
ZAAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwA2ADcAMAA1AGUAYwBiAGYAMwA5ADQAMAA0AGQAOQA5AGEAMAA5ADEAYwA3ADYAMwBjAGIA
NAAwADQANgBkADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8AOABlADUAMgA1ADYAMgBkAGEAMwBiAGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAzADYA
MgAwAGQAYwBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4
ADAAOAA0AC4AMQAwADcAOAAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA4ADAAOAA0AC4AMQAwADcAOAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAJQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\OASIS - Update Date And Time Data Format"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1BD82CCE-EE4B-45D1-9DFE-1535E3258490}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="OASIS - Update Date And Time Data Format"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{D385496D-5F80-45D4-851E-9CA1EF249836}"
                  SQLTask:SqlStatementSource="EXEC [dbo].[SP_UpdateDateAndTimeDataFormat] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2D4F8BB4-0BD0-47B7-BB06-E8E5D73D78D8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Date And Time Data Format"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{D385496D-5F80-45D4-851E-9CA1EF249836}"
                  SQLTask:SqlStatementSource="EXEC [dbo].[SP_UpdateDateAndTimeDataFormat] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{F184B025-5843-47BC-98E3-AF15F6FC2E64}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{10ABD9C7-4C97-4428-AB28-3284E75201F2}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::FileExistFlag] == 1"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Check Source System For Validate COUNT File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{EF3F60E2-E114-4B2B-80DC-A837BEB177A1}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::FileExistFlag] == 0"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{8052D1A3-1E02-42CF-B8B4-D121970FD706}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::IsOASIS] == 0"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check Source System For Validate COUNT File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{DDC47D4B-A328-4AE8-85D3-F696380F4DA7}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::IsOASIS] == 1"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check Source System For Validate COUNT File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert OASIS Data Into PreStaging" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{FDADBC26-2F8D-4434-81DD-70DDF10157C4}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Insert OASIS Data Into PreStaging"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Clear OASIS Archived Folder File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{98FEFE92-B254-491E-9D1D-CBC1CE6341FA}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{9D8D5343-1211-4D86-B8C0-C45065A99E3C}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Clear OASIS Archived Folder File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Sequence Container\Foreach Loop Container\OASIS - Update Date And Time Data Format" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{874A22D4-0522-479E-95F9-7A2E43276193}"
              DTS:ObjectName="{874A22D4-0522-479E-95F9-7A2E43276193}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::SourceSystem" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{2D59FBC8-A8CC-41AA-89CB-26794053A757}"
              DTS:ObjectName="{2D59FBC8-A8CC-41AA-89CB-26794053A757}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::SourceFolder" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{35BD0D4A-D061-4410-84BC-CCA2B8B1069E}"
              DTS:ObjectName="{35BD0D4A-D061-4410-84BC-CCA2B8B1069E}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::ArchivedFolder" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{3DF1A9D5-FE1C-44B7-BA1E-66FC136E38EB}"
              DTS:ObjectName="{3DF1A9D5-FE1C-44B7-BA1E-66FC136E38EB}"
              DTS:ValueIndex="3"
              DTS:VariableName="User::SourceName" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{9B0E77B7-A3B8-4875-8922-7E614FED6750}"
              DTS:ObjectName="{9B0E77B7-A3B8-4875-8922-7E614FED6750}"
              DTS:ValueIndex="4"
              DTS:VariableName="User::SourceType" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C28AE387-24B1-4A76-8406-9D8AFC6A2BAF}"
              DTS:ObjectName="{C28AE387-24B1-4A76-8406-9D8AFC6A2BAF}"
              DTS:ValueIndex="5"
              DTS:VariableName="User::Delimiter" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{A41D613A-CF90-4FEF-BFB7-613F884E2482}"
              DTS:ObjectName="{A41D613A-CF90-4FEF-BFB7-613F884E2482}"
              DTS:ValueIndex="6"
              DTS:VariableName="User::TargetTable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{59291562-CFD6-486A-803C-FDE586DCCED1}"
              DTS:ObjectName="{59291562-CFD6-486A-803C-FDE586DCCED1}"
              DTS:ValueIndex="7"
              DTS:VariableName="User::ArchivedTable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{A13007D0-18DF-4130-A6C6-5D69EAF8E5E4}"
              DTS:ObjectName="{A13007D0-18DF-4130-A6C6-5D69EAF8E5E4}"
              DTS:ValueIndex="8"
              DTS:VariableName="User::RetentionCopies" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Get Config Details"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{31C11B18-2716-451B-B31D-9419CE686D45}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Config Details"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D385496D-5F80-45D4-851E-9CA1EF249836}"
              SQLTask:SqlStatementSource="EXEC [dbo].[SP_GetCSVConfigDetail_ManualRun] ?"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::TheResultSet" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::Frequency"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0E1E639C-7AB1-4452-B6A9-FC76601B2528}"
          DTS:From="Package\Sequence Container\Get Config Details"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Sequence Container\Foreach Loop Container\Check File Exist"
          TopLeft="236.785714285714,9.78571428571416" />
        <NodeLayout
          Size="296,42"
          Id="Package\Sequence Container\Foreach Loop Container\Check Source System For Validate COUNT File"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
          TopLeft="54.5000000000001,311.5" />
        <NodeLayout
          Size="232,42"
          Id="Package\Sequence Container\Foreach Loop Container\Clear OASIS Archived Folder File"
          TopLeft="329.5,311.5" />
        <NodeLayout
          Size="209,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
          TopLeft="47.0000000000001,209.5" />
        <NodeLayout
          Size="292,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
          TopLeft="362.5,107.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert OASIS Data Into PreStaging"
          TopLeft="318.5,209.5" />
        <NodeLayout
          Size="288,42"
          Id="Package\Sequence Container\Foreach Loop Container\OASIS - Update Date And Time Data Format"
          TopLeft="308,406" />
        <NodeLayout
          Size="248,42"
          Id="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format"
          TopLeft="29,403" />
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="153.25,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.5"
              Start="0,0"
              End="0,42">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="288.785714285714,51.7857142857142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-135.285714285714,55.7142857142857"
              Start="0,0"
              End="-135.285714285714,48.2142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6339285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6339285714286"
                    Point2="0,22.6339285714286"
                    Point3="-4,22.6339285714286" />
                  <mssgle:LineSegment
                    End="-131.285714285714,22.6339285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.285714285714,22.6339285714286"
                    Point2="-135.285714285714,22.6339285714286"
                    Point3="-135.285714285714,26.6339285714286" />
                  <mssgle:LineSegment
                    End="-135.285714285714,48.2142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-75.642857142857,27.6339285714286,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="336.785714285714,51.7857142857142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="171.714285714286,55.7142857142857"
              Start="0,0"
              End="171.714285714286,48.2142857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6339285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6339285714286"
                    Point2="0,22.6339285714286"
                    Point3="4,22.6339285714286" />
                  <mssgle:LineSegment
                    End="167.714285714286,22.6339285714286" />
                  <mssgle:CubicBezierSegment
                    Point1="167.714285714286,22.6339285714286"
                    Point2="171.714285714286,22.6339285714286"
                    Point3="171.714285714286,26.6339285714286" />
                  <mssgle:LineSegment
                    End="171.714285714286,48.2142857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="77.857142857143,27.6339285714286,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="105.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.0000000000001,60"
              Start="0,0"
              End="46.0000000000001,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1935483870968" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1935483870968"
                    Point2="0,24.1935483870968"
                    Point3="4,24.1935483870968" />
                  <mssgle:LineSegment
                    End="42.0000000000001,24.1935483870968" />
                  <mssgle:CubicBezierSegment
                    Point1="42.0000000000001,24.1935483870968"
                    Point2="46.0000000000001,24.1935483870968"
                    Point3="46.0000000000001,28.1935483870968" />
                  <mssgle:LineSegment
                    End="46.0000000000001,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="15,29.1935483870968,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="201.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="238,60"
              Start="0,0"
              End="238,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1935483870968" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1935483870968"
                    Point2="0,24.1935483870968"
                    Point3="4,24.1935483870968" />
                  <mssgle:LineSegment
                    End="234,24.1935483870968" />
                  <mssgle:CubicBezierSegment
                    Point1="234,24.1935483870968"
                    Point2="238,24.1935483870968"
                    Point3="238,28.1935483870968" />
                  <mssgle:LineSegment
                    End="238,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="111,29.1935483870968,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="442.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="152.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="448.75,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.5"
              Start="0,0"
              End="0,45">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="660,525"
          Size="660,568"
          Id="Package\Sequence Container\Foreach Loop Container"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="139,43"
          Id="Package\Sequence Container\Get Config Details"
          TopLeft="254,5.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="323.666666666667,48.1666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.8333333333333,59.3333333333333"
              Start="0,0"
              End="11.8333333333333,51.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.6666666666667"
                    Point2="0,29.6666666666667"
                    Point3="4,29.6666666666667" />
                  <mssgle:LineSegment
                    End="7.83333333333331,29.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="7.83333333333331,29.6666666666667"
                    Point2="11.8333333333333,29.6666666666667"
                    Point3="11.8333333333333,33.6666666666667" />
                  <mssgle:LineSegment
                    End="11.8333333333333,51.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="671,731"
          Size="671,773"
          Id="Package\Sequence Container"
          TopLeft="5.50000000000011,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>