<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/5/2020 1:34:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-261219MZ02"
  DTS:CreatorName="NCS\P1327973"
  DTS:DTSID="{EDD2E854-0F2B-4729-92CD-F730BF189A96}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1033"
  DTS:ObjectName="Excel_Extraction"
  DTS:PackageType="5"
  DTS:VersionBuild="566"
  DTS:VersionGUID="{0A432A9B-B9E7-45C7-AB4E-96DBE7B23F3B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO_RPDW]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{670DDE8C-6B06-4DA4-99AD-73A02506553A}"
      DTS:ObjectName="ADO_RPDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT;Connect Timeout=0;Application Name=SSIS-Excel_Extraction-{670DDE8C-6B06-4DA4-99AD-73A02506553A}RP-ETL-DW-UAT.RPDW_UAT1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABCFI9uAV27GTGIAzrW8hqib4TENdpRsbo28RaJP2rl0wAAAAAOgAAAAAIAACAAAAD3OhyKpfrwaQzqxn9VM7rZD3dLWzvOPCyiv8iuXitFoDAAAACZrSlLVynv0mcg0krha2FczLQY8i76dZyzLT6Er2ivtBHcHESvN3+kcuQj9I5wsPxAAAAAEB1FvaJkNKzbAcCIIpRkDVOaMG0Vj1aHeD5FV64HpgbE9c+vP7VIRLFiN50pjOblb8Uip2ztvzQdm5vzwpTcrQ</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO_RPDW_PSTG]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{4166B92C-6CC8-4AAF-AF7F-24CA45A16772}"
      DTS:ObjectName="ADO_RPDW_PSTG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT_PSTG;Connect Timeout=0;Application Name=SSIS-Excel_Extraction-{4166B92C-6CC8-4AAF-AF7F-24CA45A16772}RP-ETL-DW-UAT.RPDW_PSTG1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACuS2SvfRO4klOf5YsZ8LdF8nCwYJWvKsUzA8kfn2bbKgAAAAAOgAAAAAIAACAAAAC6lUZTf6o0PMKdUvOpb9IDTIQTlC/q2xQa6K2YrUZ0lTAAAAC9HBVgyZsEby/hbg371dV3iM2Sqgf8VO2ZSFdxZCh2jkj4EAJgT3MzIM+CIrHzpUZAAAAAeZ922oYoUowFpaJGgrbKp813fN6p8NXFtUJuJ0a0xa7LpboVVKefGtvMWgWcrbMRU3hSOpQ7uwfXS+gpreTaWA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4912DFD2-F783-42B8-876A-9B0B66B59DE6}"
      DTS:ObjectName="RPDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAC+6gMiloX+LuKZbaE6dP8ZYwH4neOjAeIVkg/Ho9n77AAAAAAOgAAAAAIAACAAAADfdARuMAO4sL/p73RsiNo65joxH5bPlUXyMvljTIzanDAAAAANpm4a7bXYhVmPN2PeY3n1Gou7hlXddb9NXMuS0j8h+pt3Kr8boTI0CBQddTM4DXNAAAAAnt9s3eTOcoBP2l/DkqtQYCHeuRq1m3MVMnYZPbfrtxJJNxmbphIeXYZvP+SiTo0MBSSqwedu+BB5TlAu72X/wg</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_PSTG]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{722372CA-D7EC-4ADA-AA47-64BE46B58299}"
      DTS:ObjectName="RPDW_PSTG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT_PSTG;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADkvvt38aDRYlV6zEagE3xlPYKRVCZ6O7M5gTwsli20iAAAAAAOgAAAAAIAACAAAABHNVrPhU6UKG7IQ6/nZ+5Tez68IYyLDAlne3A/o1hMJDAAAABhtNqsxLlLWSTDVQ1Pyy/XjFUwG/htUNqqcYae1e5o4RZTWlTatM4hFIuOWSI+7RxAAAAAdn1DqYu2oPYmr7fUroFXmLeS8thcedMW1SA4tLnxsZlWcFJhoQw3RAG6WjjBXZd9FnTF0JkBf5BkFBPUdrIKkA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{542D5837-6F31-4348-BC5C-1074CA6FB248}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivedFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88697A1B-3E3A-4758-B72F-687FB77EB5B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivedTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4599B132-C0D2-49AC-B3C2-C6CDB53DE328}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExistFlag">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F87FA4E2-3E3D-40C8-9619-8DFAFEFD6382}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Frequency">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A24ACCFD-38AA-45E1-B4A2-733F34FB71FE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobId">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF432EFA-8209-4936-8F99-6FD8BB5F5B73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RetentionCopies">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A03AC42E-4159-479E-B9FA-468A189E680B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D639062-1648-438F-BC69-C8C663C48338}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{925E8F0A-EE03-4067-AB45-94F8ECDE9CE1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{928E1860-8DB8-4B8A-A5F0-58F8768D5EBE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceSystem">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7284BF83-A547-4B42-892A-C978301A3159}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DA59FF5-8852-41A3-A0E6-9137ADFF184B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1DE43AF1-6260-49A4-B40E-6C341EAF830A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TheResultSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{AAFFF61D-E684-4402-BA4A-DFC17865A392}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{D779C319-BF1D-4E0F-9940-BACBB6B2DDD2}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{7C40FA59-76C9-4960-AA2F-80A79C72F876}"
            DTS:ObjectName="{7C40FA59-76C9-4960-AA2F-80A79C72F876}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::TheResultSet" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{64EFF9BA-C488-4612-8853-CCEC59DD028B}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check File Exist"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f57f37ada7fc4e3893538ceb9b0757a2"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::SourceFolder,User::SourceName,User::SourceType"
                  ReadWriteVariables="User::FileExistFlag">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Settings.get_Default():ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Sett" +
    "ings")]

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName + "_20*" + FileExtension);

            if (fileEntries.Length > 0)
            {
                Dts.Variables["User::FileExistFlag"].Value = 1;
            }
            else
            {
                Dts.Variables["User::FileExistFlag"].Value = 0;
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f57f37ada7fc4e3893538ceb9b0757a2.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D52724EF-9F3B-45F0-8361-1E2337664193}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f57f37ada7fc4e3893538ceb9b0757a2</RootNamespace>
    <AssemblyName>ST_f57f37ada7fc4e3893538ceb9b0757a2</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f57f37ada7fc4e3893538ceb9b0757a2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f57f37ada7fc4e3893538ceb9b0757a2</msb:DisplayName>
    <msb:ProjectId>{8C4FF8E8-EFFB-4D93-98F8-54483B0F87BC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f57f37ada7fc4e3893538ceb9b0757a2.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f57f37ada7fc4e3893538ceb9b0757a2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f57f37ada7fc4e3893538ceb9b0757a2")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f57f37ada7fc4e3893538ceb9b0757a2.dll">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
awB3ABsAAwABAAQAAwAAAC8EqAAAAPgArQAAAGEFsgACAAQAAwACAAUABQABAAYABQACAAcABwAE
gAAAAQAAAEYdn1sAAAAAAAAHAAAABAAAAAAAAAAAAAAAYABlAAAAAAAOAAAAAAAAAAAAAABpAB8D
AAAAAAQAAAAAAAAAAAAAAGAAwAMAAAAADgAAAAAAAAAAAAAAaQA+AAAAAAAAAAAAAQAAAJAEAAAF
AAIAAAAASW50MzIAU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4Y2ViOWIwNzU3YTIAPE1vZHVsZT4A
U3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUX2Y1N2YzN2FkYTdmYzRlMzg5MzUzOGNlYjliMDc1N2EyLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4
Y2ViOWIwNzU3YTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2Y1N2YzN2FkYTdmYzRlMzg5MzUzOGNlYjliMDc1N2EyLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25j
YXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQBEaXJlY3Rv
cnkAAAAlVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAACFVAHMAZQByADoAOgBT
AG8AdQByAGMAZQBUAHkAcABlAAAhVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUATgBhAG0AZQAACV8A
MgAwACoAACdVAHMAZQByADoAOgBGAGkAbABlAEUAeABpAHMAdABGAGwAYQBnAABxUwBUAF8AZgA1
ADcAZgAzADcAYQBkAGEANwBmAGMANABlADMAOAA5ADMANQAzADgAYwBlAGIAOQBiADAANwA1ADcA
YQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAATSznXvUDU+D
BsXK+uxoDQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQHAg4OBCAAEmEEIAASZQUgARJpHAMg
ABwDIAAOBgADDg4ODgYAAh0ODg4EIAEBHAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQ
AwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4Y2ViOWIwNzU3YTIAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2C4A
AAAAAAAAAAAA8i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCfW0YdAAABAJ9bRh0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMAZQBi
ADkAYgAwADcANQA3AGEAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADQAOQA0AC4AMgAzADQANQA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMAZQBiADkA
YgAwADcANQA3AGEAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgA1ADcAZgAzADcAYQBkAGEANwBmAGMANABlADMAOAA5ADMANQAzADgA
YwBlAGIAOQBiADAANwA1ADcAYQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMA
ZQBiADkAYgAwADcANQA3AGEAMgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA0ADkANAAuADIAMwA0ADUANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADkANAAuADIAMwA0ADUANQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{8198EA3D-0209-4DB6-9AE2-1732FC070FA1}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Clear Archived Folder File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c4c51180c4c749acb4757b3377083aad"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::RetentionCopies,User::SourceName,User::SourceType">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c4c51180c4c749acb4757b3377083aad.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C1FEA3CB-3B98-4F1D-B25F-E8CBD53AACF8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9bf73ca80c664246846c47a50908d5f6</RootNamespace>
    <AssemblyName>ST_c4c51180c4c749acb4757b3377083aad</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_9bf73ca80c664246846c47a50908d5f6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            //Declare Variables

            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            int RetentionCopies = (int) Dts.Variables["User::RetentionCopies"].Value;

            
            // Get total number of files in archived folder
            int fileCount = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension, SearchOption.TopDirectoryOnly).Length;

            if (fileCount > RetentionCopies)
            {
                while (fileCount > RetentionCopies)
                {
                    try
                    {
                        string[] fileEntries = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension);
                        if (Path.GetFileName(fileEntries.FirstOrDefault()) != null)
                            File.Delete(ArchiveFolder + Path.GetFileName(fileEntries.FirstOrDefault()));
                    }
                    catch (Exception e)
                    {
                        //MessageBox.Show(e.Message.ToString());
                    }

                    fileCount--;

                }

            }
                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c4c51180c4c749acb4757b3377083aad</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c4c51180c4c749acb4757b3377083aad</msb:DisplayName>
    <msb:ProjectId>{2FB84029-BECF-4850-893F-F3D2F9E1124A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c4c51180c4c749acb4757b3377083aad.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Settings.get_Default():ST_9bf73ca80c664246846c47a50908d5f6.Properties.Sett" +
    "ings")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c4c51180c4c749acb4757b3377083aad.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO7url4AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAfjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwwAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MAAAAAAAAEgAAAACAAUAzCEAAKgNAAABAAAAAAAAAHQvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBAD1AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyIwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJFAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcm8AAHBvEgAACm8TAAAKpRwAAAENCAdymwAAcAYo
FQAAChYoFgAACo5pEwQRBAkxTCtFAAgHcpsAAHAGKBUAAAooFwAAChMFEQUoAQAAKygZAAAKLBcI
EQUoAQAAKygZAAAKKBoAAAooGwAACt4DJt4AEQQXWRMEEQQJMLYCKBAAAAoWbxwAAAoqAAAAARAA
AAAAnwA72gADDwAAAR4CKB0AAAoqHgIoHgAACiqufgEAAAQtHnKlAABw0AMAAAIoHwAACm8gAAAK
cyEAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigiAAAKKi5zCAAABoADAAAE
KgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAOAQAACN+AACkBAAAOAYAACNT
dHJpbmdzAAAAANwKAAAYAQAAI1VTAPQLAAAQAAAAI0dVSUQAAAAEDAAApAEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQsAAAD6ATMAFgAAAQAAACYAAAAFAAAABgAAAAkAAAABAAAAIgAAAAIAAAAQAAAA
AQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAABAAAAAAAGBAEAAAAAAAYAsQL5BAYAQAP5
BAYA/QHmBA8AbQUAAAYAKgKEBAYAlAKEBAYAdQKEBAYAJwOEBAYA0QKEBAYA6gKEBAYAQQKEBAYA
XAJuAwoABQO1AwoAdQG1AwYAowQ3BAYAPgQ3BAYA4AHmBAYA8AU3BAYAyQQZBQYArQRvBA4AqQHw
Aw4AEQLwAw4AkQFaBAYAxQH5BAoA3gO1AxIArwUUARIAywAUAQYADwA3BAYAigM3BAYALgZCAAYA
lgRCABYA1AC5BAYAAQB8AAYAkQNCAAYAAwFCAAYANAE3BAYA3wA3BAYAJQaEBAAAAAA5AAAAAAAB
AAEAAQAQAE8EFQA5AAEAAQAAABAAIAV8BUkAAQADAAABEADCBXwFXQADAAcAAwEAANsFAABBAAQA
CgARAEMEqAARAGUBrAARALsAsAAGBmsAtABWgMsFtwBWgEUBtwBQIAAAAACGAFUEBgABAGQhAAAA
AIYY2QQGAAEAbCEAAAAAgxjZBAYAAQB0IQAAAACTCMUEuwABAKAhAAAAAJMITQHAAAEApyEAAAAA
kwhZAcUAAQCvIQAAAACWCPcFywACALYhAAAAAIYY2QQGAAIAviEAAAAAkRjfBNAAAgAAAAEAaAMJ
ANkEAQARANkEBgAZANkECgApANkEEAAxANkEEAA5ANkEEABBANkEEABJANkEEABRANkEEABZANkE
EABhANkEEABpANkEBgCJANkEBgCxANkEFQDBANkEBgBxANMFJQDJAKsFKgDRAC4ELwDZAF4DNQCR
AIgDOQDpAOkFPQDxALkFRADxALkFTQABAQMGVAARAQgBZQDpAOkFagAZAb4BcADJABIGAQBxANkE
BgCRANkEBgAhAfEAdQAhASEGfgCZANkEhAC5ANkEBgAIABQAngAIABgAowApAHMACwEuAAsA4wAu
ABMA7AAuABsACwEuACMAFAEuACsAPQEuADMAPQEuADsAPQEuAEMAFAEuAEsAQwEuAFMAPQEuAFsA
WgFDAGMAowBJAHMACwFhAHsAowBjAGsAowAbAAMAAQAEAAMAAADJBNQAAABtAdkAAAAKBt4AAgAE
AAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAAFHTcCAAAAAAAAlwAAAAQAAAAAAAAAAAAAAIwA
cwAAAAAADgAAAAAAAAAAAAAAlQCWAwAAAAAEAAAAAAAAAAAAAACMADcEAAAAAA4AAAAAAAAAAAAA
AJUATAAAAAAABAAAAAAAAAAAAAAAjAA5AQAAAAAAAAAAAQAAACoFAAAFAAIAMQBhAAAAAElFbnVt
ZXJhYmxlYDEASW50MzIAU1RfOWJmNzNjYTgwYzY2NDI0Njg0NmM0N2E1MDkwOGQ1ZjYAPE1vZHVs
ZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFNUX2M0YzUxMTgwYzRjNzQ5YWNiNDc1N2Iz
Mzc3MDgzYWFkAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAR2V0RmlsZU5hbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
X2M0YzUxMTgwYzRjNzQ5YWNiNDc1N2IzMzc3MDgzYWFkLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNlYXJjaE9wdGlvbgBFeGNlcHRpb24AQ3VsdHVy
ZUluZm8AU3lzdGVtLkxpbnEAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF85YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOWJmNzNjYTgwYzY2NDI0Njg0NmM0N2E1
MDkwOGQ1ZjYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQARmlyc3RP
ckRlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQAAIVUAcwBlAHIA
OgA6AFMAbwB1AHIAYwBlAFQAeQBwAGUAACFVAHMAZQByADoAOgBTAG8AdQByAGMAZQBOAGEAbQBl
AAApVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBkAEYAbwBsAGQAZQByAAArVQBzAGUAcgA6ADoA
UgBlAHQAZQBuAHQAaQBvAG4AQwBvAHAAaQBlAHMAAAlfADIAMAAqAABxUwBUAF8AOQBiAGYANwAz
AGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUAMAA5ADAAOABkADUAZgA2AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAv+2mNWa3xkm/8moL2xIr
yAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQkHBg4ODggIHQ4EIAASZQQgABJpBSABEm0cAyAA
HAMgAA4GAAMODg4OCAADHQ4ODhF9BgACHQ4ODgwQAQEeABUSgIUBHgADCgEOBAABDg4FAAIODg4E
AAEBDggAARKAkRGAlQUgABKAmQcgAgEOEoCZCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
Ek0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF85
YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABUMAAAAAAAAAAAAABuMAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYDAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAADgQAAAAAAAAAAAAADgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADcCBR0AAAEANwIFHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBG4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEoDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AOQBiAGYANwAzAGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUA
MAA5ADAAOABkADUAZgA2AAAAOgANAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANAAyADkALgA1ADYANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBjADQAYwA1ADEAMQA4ADAAYwA0AGMANwA0ADkAYQBjAGIANAA3ADUANwBiADMAMwA3ADcAMAA4
ADMAYQBhAGQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGMANABjADUAMQAxADgAMABjADQAYwA3ADQAOQBhAGMAYgA0ADcANQA3AGIAMwAz
ADcANwAwADgAMwBhAGEAZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA5AGIAZgA3ADMAYwBhADgAMABjADYANgA0ADIANAA2ADgANAA2AGMANAA3AGEANQAw
ADkAMAA4AGQANQBmADYAAAA+AA0AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANAAyADkALgA1ADYANwAAAAAAQgANAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwA0ADIAOQAuADUANgA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DelayValidation="True"
              DTS:Description="Script Task"
              DTS:DTSID="{B0564402-0EFC-4488-A75C-8FD58B0558E2}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert Data Into PreStaging"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f62f2457363645f597f519c0cadfe06e"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::ArchivedTable,User::JobId,User::SheetName,User::SourceFolder,User::SourceName,User::SourceSystem,User::SourceType,User::TargetTable">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8e52562da3bf4483942ea1a933620dca
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            ////SQL Connection
            //SqlConnection myADONETConnection = new SqlConnection();
            //myADONETConnection = (SqlConnection)
            //(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //PSTG SQL Connection
            SqlConnection PSTG_Connection = new SqlConnection();
            PSTG_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW_PSTG"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //DW SQL Connection
            SqlConnection DW_Connection = new SqlConnection();
            DW_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //Declare Variables
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string TableName = Dts.Variables["User::TargetTable"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            string ArchiveTable = Dts.Variables["User::ArchivedTable"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceSystem = Dts.Variables["User::SourceSystem"].Value.ToString();
            string FileSheetName = Dts.Variables["User::SheetName"].Value.ToString();
            string JobId = Dts.Variables["User::JobId"].Value.ToString();

            //Truncate PreStaging table
            string truncateQuery = "TRUNCATE TABLE " + TableName ;
            SqlCommand truncateCommand = new SqlCommand(truncateQuery, PSTG_Connection);
            truncateCommand.ExecuteNonQuery();

            //Reading file names one by one
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName + "_20*" + FileExtension);
            foreach (string fileName in fileEntries)
            {
                try
                {
                    //Create Excel Connection
                    string ConStr;
                    string HDR;
                    HDR = "YES";
                    ConStr = "Provider=Microsoft.ACE.OLEDB.16.0;Data Source="
                        + fileName + ";Extended Properties=\"Excel 12.0 Xml;HDR=" + HDR + ";IMEX=0;Connection Timeout=500\"";
                    //OleDbConnection cnn = new OleDbConnection(ConStr);

                    //Get data from Excel Sheet to DataTable
                    OleDbConnection Conn = new OleDbConnection(ConStr);
                    Conn.Open();
                    OleDbCommand oconn = new OleDbCommand("select * from [" + FileSheetName + "$]", Conn);
                    oconn.CommandTimeout = 0;               //added by Daniel
                    OleDbDataAdapter adp = new OleDbDataAdapter(oconn);
                    DataTable dt = new DataTable();
                    //adp.SelectCommand.CommandTimeout = 0; //added by Daniel
                    adp.Fill(dt);
                    Conn.Close();
             
                    //Load Data from DataTable to SQL Server Table.
                    using (SqlBulkCopy BC = new SqlBulkCopy(PSTG_Connection))
                    {
                        BC.DestinationTableName = TableName;
                        BC.BulkCopyTimeout = 900; //added by Daniel
                        //// Use to match excel header name
                        //foreach (var column in dt.Columns)
                        //BC.ColumnMappings.Add(column.ToString(), column.ToString());
                        BC.WriteToServer(dt);
                    }

                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    // Update FileName and UploadedDate
                    string updateQuery = "UPDATE " + TableName + " SET Source_Filename = '" + Path.GetFileName(fileName) + "', CREATED_ON = '" + getdate + "', MODIFIED_ON = '" + getdate + "' WHERE Source_Filename IS NULL AND CREATED_ON IS NULL AND MODIFIED_ON IS NULL;";
                    SqlCommand updateCommand = new SqlCommand(updateQuery, PSTG_Connection);
                    updateCommand.ExecuteNonQuery();

                    // Move Pre-Staging data into Archived Table
                    string ArchiveQuery = "INSERT INTO " + ArchiveTable + " SELECT * FROM " + TableName + " WITH(NOLOCK) WHERE Source_Filename = '" + Path.GetFileName(fileName) + "';";
                    SqlCommand archiveCommand = new SqlCommand(ArchiveQuery, PSTG_Connection);
                    archiveCommand.CommandTimeout = 0;
                    archiveCommand.ExecuteNonQuery();

                    // Insert ETL_JOB_STATUS
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Success', '', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();


                    if (File.Exists(ArchiveFolder + Path.GetFileName(fileName)))
                    {
                        File.Delete(ArchiveFolder + Path.GetFileName(fileName));
                    }
                    File.Move(fileName, ArchiveFolder + Path.GetFileName(fileName));
                    Dts.TaskResult = (int)ScriptResults.Success;

                }
                catch (Exception exception)
                {

                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    // Insert ETL_JOB_STATUS
                    string ErrorMessage = exception.Message.ToString().Replace("'", "\"");
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Fail', '" + ErrorMessage + "', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();

                    // Get Max Job Status ID
                    int JOB_STATUS_ID;
                    string GetJobStatusId = "SELECT MAX(JOB_STATUS_ID) FROM [dbo].[ETL_JOB_STATUS] WITH(NOLOCK) WHERE TARGET_TABLENAME = '" + TableName + "';";
                    SqlCommand JobStatusIdCommand = new SqlCommand(GetJobStatusId, DW_Connection);
                    JOB_STATUS_ID = Convert.ToInt32(JobStatusIdCommand.ExecuteScalar());

                    // Insert ETL_ERROR_LOG
                    string query = "Insert into [dbo].[ETL_ERROR_LOG]";
                    query += " VALUES(" + JOB_STATUS_ID + ", '" + ErrorMessage + "', '" + getdate + "');";

                    SqlCommand myCommand1 = new SqlCommand(query, DW_Connection);
                    myCommand1.ExecuteNonQuery();

                    //Delete data due to insert halfway file got issue.
                    string query2 = "DELETE FROM " + TableName + " WHERE Source_Filename = '" + Path.GetFileName(fileName) + "'";
                    SqlCommand myCommand2 = new SqlCommand(query2, PSTG_Connection);
                    myCommand2.ExecuteNonQuery();

                }

            }


            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f62f2457363645f597f519c0cadfe06e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f62f2457363645f597f519c0cadfe06e</msb:DisplayName>
    <msb:ProjectId>{5C7D175B-AB05-4D9D-AC80-41258C756197}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f62f2457363645f597f519c0cadfe06e.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Settings.get_Default():ST_8e52562da3bf4483942ea1a933620dca.Properties.Sett" +
    "ings")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f62f2457363645f597f519c0cadfe06e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6ECCE1A-550E-48F9-B34C-8B27EDC84A8D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8e52562da3bf4483942ea1a933620dca</RootNamespace>
    <AssemblyName>ST_f62f2457363645f597f519c0cadfe06e</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f62f2457363645f597f519c0cadfe06e.dll">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
AAAKJnKGBQBwCXKeBABwKB0AAAoHcxsAAApvNgAACig3AAAKExZyQwYAcBMXHo0XAAABJRYRF6Il
F3KHBgBwoiUYERaMLwAAAaIlGXKZBgBwoiUaERSiJRtyIAUAcKIlHBEToiUdclwFAHCiKDgAAAoT
FxEXB3MbAAAKbxwAAAomG40jAAABJRZyoQYAcKIlFwmiJRhyuwYAcKIlGRELKC8AAAqiJRpyZAUA
cKIoHwAACgZzGwAACm8cAAAKJt4AEQoXWBMKEQoRCY5pPyT8//8CKBEAAAoWbzMAAAoqAABBNAAA
AgAAAEQCAAAfAAAAYwIAAAwAAAAAAAAAAAAAAMABAABCAgAAAgQAAIIBAAAUAAABHgIoOQAACioe
Aig6AAAKKq5+AQAABC0ecvEGAHDQAwAAAig7AAAKbzwAAApzPQAACoABAAAEfgEAAAQqGn4CAAAE
Kh4CgAIAAAQqGn4DAAAEKh4CKD4AAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAAgBQAAI34AAIwFAACEBwAAI1N0cmluZ3MAAAAAEA0AAGQHAAAjVVMA
dBQAABAAAAAjR1VJRAAAAIQUAAAMAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAAB
AAAAMgAAAAUAAAAGAAAACQAAAAEAAAA+AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUA
AAABAAAAAQAAAAAAXQQBAAAAAAAGAAMD0wUGAJID0wUGAE8CwAUPAEcGAAAGAHwC9QQGAOYC9QQG
AMcC9QQGAHkD9QQGACMD9QQGADwD9QQGAJMC9QQGAK4CxQMKAFcDDAQKALkBDAQOACkFAwcOAAcF
cwAOAO4AZwAOAF0HAwcGAFsBkwQGADcFkwQGAJoEkwQGADICwAUGAOEGkwQGAHIF8wUGAFQF0AQS
APsBRwQSAGMCRwQSANUBuwQGABcC0wUKADUEDAQWAKkGZAEWAIIFZAEWAIkGZAEWAPgAZAEGAOED
kwQOAJsAAwcOAJEAQQUGAHkHEgAOAAoFQQUOAI4AcwAOAJQFcwAOAJcFQQUGAAEBkwQGAOgDEgAG
ADEBEgAGABkHkwQGAAMAkwQGAIQBkwQGAA0BkwQGAFQH9QQAAAAACQAAAAAAAQABAAEAEACwBEMA
OQABAAEAAAAQAPoFVgZdAAEAAwAAARAAnAZWBnEAAwAHAAMBAADFBgAAVQAEAAoAEQCfBBABEQCp
ARQBEQDSABgBBgY7ABwBVoC1Bh8BVoCJAR8BUCAAAAAAhgC2BAYAAQA0JgAAAACGGLMFBgABADwm
AAAAAIMYswUGAAEARCYAAAAAkwhuBSMBAQBwJgAAAACTCJEBKAEBAHcmAAAAAJMInQEtAQEAfyYA
AAAAlgjoBjMBAgCGJgAAAACGGLMFBgACAI4mAAAAAJEYuQU4AQIAAAABALoDCQCzBQEAEQCzBQYA
GQCzBQoAKQCzBRAAMQCzBRAAOQCzBRAAQQCzBRAASQCzBRAAUQCzBRAAWQCzBRAAYQCzBRAAaQCz
BQYAsQCzBQYA2QCzBRUA6QCzBQYAeQCzBQYAcQC9Bj0A8QClBkIA+QCKBEcA8QDlBE4AAQEXBVIA
8QCFBlcACQGKBF0AEQGwA04AuQDfA2QAGQHaBmgAIQGzBW4AKQFpB3UAGQHaBnkAMQGTBoAAGQHa
BocAgQCzBRAAOQGrBAYAQQGzBY0AKQEhBwEASQGzBZQAiQCzBQYAUQGFBJsAOQHtAQYAkQCzBaEA
kQA2ARAAkQA0BwEAkQClBacAWQHzAQYAmQBIB60AmQDfA7IAYQFPAbcAaQHTBrwAaQEQAsEAaQHA
A8YA8QD0BgEAoQDiAGQAGQHKAMwAKQFgBU4AcQEBANIAGQHaBtcAcQCzBQYAuQCzBQYAgQEfAd0A
gQFQB+YAwQCzBewA4QCzBQYACAAUAAYBCAAYAAsBKQBzAHMBLgALAEsBLgATAFQBLgAbAHMBLgAj
AHwBLgArAKUBLgAzAKUBLgA7AKUBLgBDAHwBLgBLAKsBLgBTAKUBLgBbAMIBQwBjAAsBSQBzAHMB
YQB7AAsBYwBrAAsBGwADAAEABAADAAAAcgU8AQAAsQFBAQAA7AZGAQIABAADAAIABQAFAAEABgAF
AAIABwAHAASAAAABAAAAix+TMwAAAAAAAKYAAAAEAAAAAAAAAAAAAAD0AIUAAAAAAA4AAAAAAAAA
AAAAAP0A7QMAAAAABAAAAAAAAAAAAAAA9ABnAAAAAAAEAAAAAAAAAAAAAAD0AJMEAAAAAA4AAAAA
AAAAAAAAAP0AHAAAAAAAAAAAAAEAAAAEBgAABQACAAAAAFRvSW50MzIAPE1vZHVsZT4AU3lzdGVt
LklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzhlNTI1NjJkYTNi
ZjQ0ODM5NDJlYTFhOTMzNjIwZGNhAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAG1zY29y
bGliAE9sZURiQ29tbWFuZABTcWxDb21tYW5kAFNUX2Y2MmYyNDU3MzYzNjQ1ZjU5N2Y1MTljMGNh
ZGZlMDZlAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAERhdGFUYWJsZQBWYXJp
YWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxl
AHNldF9EZXN0aW5hdGlvblRhYmxlTmFtZQBHZXRGaWxlTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUATW92ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
U3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUX2Y2MmYyNDU3MzYzNjQ1ZjU5N2Y1MTljMGNhZGZlMDZlLmRsbABGaWxsAGdl
dF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AT2xlRGJDb25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24A
RXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBFeGVjdXRlU2NhbGFyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIAT2xlRGJEYXRhQWRhcHRlcgBXcml0
ZVRvU2VydmVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzhlNTI1NjJkYTNiZjQ0ODM5NDJl
YTFhOTMzNjIwZGNhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTVF84ZTUyNTYyZGEzYmY0NDgzOTQyZWExYTkzMzYyMGRjYS5Qcm9wZXJ0aWVzAGdldF9WYXJp
YWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAZ2V0X0Nvbm5lY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBT
Y3JpcHRSZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVz
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABDb252ZXJ0AHNldF9Db21tYW5kVGltZW91dABzZXRf
QnVsa0NvcHlUaW1lb3V0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AFNxbEJ1bGtDb3B5AEV4ZWN1dGVO
b25RdWVyeQBEaXJlY3RvcnkAAAAbQQBEAE8AXwBSAFAARABXAF8AUABTAFQARwAAEUEARABPAF8A
UgBQAEQAVwAAJVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAEYAbwBsAGQAZQByAAAhVQBzAGUAcgA6
ADoAUwBvAHUAcgBjAGUAVAB5AHAAZQAAI1UAcwBlAHIAOgA6AFQAYQByAGcAZQB0AFQAYQBiAGwA
ZQAAKVUAcwBlAHIAOgA6AEEAcgBjAGgAaQB2AGUAZABGAG8AbABkAGUAcgAAJ1UAcwBlAHIAOgA6
AEEAcgBjAGgAaQB2AGUAZABUAGEAYgBsAGUAACFVAHMAZQByADoAOgBTAG8AdQByAGMAZQBOAGEA
bQBlAAAlVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUAUwB5AHMAdABlAG0AAB9VAHMAZQByADoAOgBT
AGgAZQBlAHQATgBhAG0AZQAAF1UAcwBlAHIAOgA6AEoAbwBiAEkAZAAAH1QAUgBVAE4AQwBBAFQA
RQAgAFQAQQBCAEwARQAgAAAJXwAyADAAKgAAB1kARQBTAABdUAByAG8AdgBpAGQAZQByAD0ATQBp
AGMAcgBvAHMAbwBmAHQALgBBAEMARQAuAE8ATABFAEQAQgAuADEANgAuADAAOwBEAGEAdABhACAA
UwBvAHUAcgBjAGUAPQAAUzsARQB4AHQAZQBuAGQAZQBkACAAUAByAG8AcABlAHIAdABpAGUAcwA9
ACIARQB4AGMAZQBsACAAMQAyAC4AMAAgAFgAbQBsADsASABEAFIAPQAAPzsASQBNAEUAWAA9ADAA
OwBDAG8AbgBuAGUAYwB0AGkAbwBuACAAVABpAG0AZQBvAHUAdAA9ADUAMAAwACIAAB9zAGUAbABl
AGMAdAAgACoAIABmAHIAbwBtACAAWwAABSQAXQAAL3kAeQB5AHkALQBNAE0ALQBkAGQAIABIAEgA
OgBtAG0AOgBzAHMALgBmAGYAZgABD1UAUABEAEEAVABFACAAADEgAFMARQBUACAAUwBvAHUAcgBj
AGUAXwBGAGkAbABlAG4AYQBtAGUAIAA9ACAAJwABIycALAAgAEMAUgBFAEEAVABFAEQAXwBPAE4A
IAA9ACAAJwABJScALAAgAE0ATwBEAEkARgBJAEUARABfAE8ATgAgAD0AIAAnAAGAnycAIABXAEgA
RQBSAEUAIABTAG8AdQByAGMAZQBfAEYAaQBsAGUAbgBhAG0AZQAgAEkAUwAgAE4AVQBMAEwAIABB
AE4ARAAgAEMAUgBFAEEAVABFAEQAXwBPAE4AIABJAFMAIABOAFUATABMACAAQQBOAEQAIABNAE8A
RABJAEYASQBFAEQAXwBPAE4AIABJAFMAIABOAFUATABMADsAARlJAE4AUwBFAFIAVAAgAEkATgBU
AE8AIAAAHyAAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAABPIABXAEkAVABIACgATgBPAEwA
TwBDAEsAKQAgAFcASABFAFIARQAgAFMAbwB1AHIAYwBlAF8ARgBpAGwAZQBuAGEAbQBlACAAPQAg
ACcAAQUnADsAAUVJAG4AcwBlAHIAdAAgAGkAbgB0AG8AIABbAGQAYgBvAF0ALgBbAEUAVABMAF8A
SgBPAEIAXwBTAFQAQQBUAFUAUwBdAAATIABWAEEATABVAEUAUwAoACcAAQcgAC0AIAABGScALAAg
ACcAUABTAFQARwAnACwAIAAnAAEJJwAsACAAJwABCScAIAAsACcAAScnACwAIAAnAFMAdQBjAGMA
ZQBzAHMAJwAsACAAJwAnACwAIAAnAAEHJwApADsAAQMnAAEDIgAAGScALAAgACcARgBhAGkAbAAn
ACwAIAAnAAGAu1MARQBMAEUAQwBUACAATQBBAFgAKABKAE8AQgBfAFMAVABBAFQAVQBTAF8ASQBE
ACkAIABGAFIATwBNACAAWwBkAGIAbwBdAC4AWwBFAFQATABfAEoATwBCAF8AUwBUAEEAVABVAFMA
XQAgAFcASQBUAEgAKABOAE8ATABPAEMASwApACAAVwBIAEUAUgBFACAAVABBAFIARwBFAFQAXwBU
AEEAQgBMAEUATgBBAE0ARQAgAD0AIAAnAAFDSQBuAHMAZQByAHQAIABpAG4AdABvACAAWwBkAGIA
bwBdAC4AWwBFAFQATABfAEUAUgBSAE8AUgBfAEwATwBHAF0AABEgAFYAQQBMAFUARQBTACgAAAcs
ACAAJwABGUQARQBMAEUAVABFACAARgBSAE8ATQAgAAA1IABXAEgARQBSAEUAIABTAG8AdQByAGMA
ZQBfAEYAaQBsAGUAbgBhAG0AZQAgAD0AIAAnAAFxUwBUAF8AOABlADUAMgA1ADYAMgBkAGEAMwBi
AGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAzADYAMgAwAGQAYwBhAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAb62WVveHPka3+BIPAbj9sgAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERaSEHGBI9Ej0ODg4ODg4OHQ4IDg4SQRJFDg4SSRFNDg4OCA4EIAASeQQg
ABJ9BiABEoCBHAMgABwEIAEcHAUgABKAhQYgARKAiRwDIAAOBQACDg4OBiACAQ4SPQMgAAgGAAMO
Dg4OBgACHQ4ODgUAAQ4dDgYgAgEOEkEGIAEBEoChBSABCBJFBSABARI9BSABARJFBAAAEU0EIAEO
DgQAAQ4OBAABAg4EAAEBDgUAAgEODgUgAg4ODgQAAQgcBQABDh0cCAABEoDBEYDFBSAAEoDJByAC
AQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSYQMGEmUDBhIQAgYIAwYRFAQAABJh
BAAAEmUFAAEBEmUEAAASEAMAAAEECAASYQQIABJlBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzhlNTI1NjJkYTNiZjQ0ODM5NDJlYTFh
OTMzNjIwZGNhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAAw+AAAAAAAAAAAAACY+AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPgAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAkzOLHwAAAQCTM4sfPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA4AGUANQAyADUANgAyAGQAYQAzAGIAZgA0ADQAOAAzADkANAAyAGUAYQAxAGEAOQAzADMANgAy
ADAAZABjAGEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAAwADcA
NQAuADEAMwAyADAAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBm
ADYAMgBmADIANAA1ADcAMwA2ADMANgA0ADUAZgA1ADkANwBmADUAMQA5AGMAMABjAGEAZABmAGUA
MAA2AGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfAGYANgAyAGYAMgA0ADUANwAzADYAMwA2ADQANQBmADUAOQA3AGYANQAxADkAYwAwAGMA
YQBkAGYAZQAwADYAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwA4AGUANQAyADUANgAyAGQAYQAzAGIAZgA0ADQAOAAzADkANAAyAGUAYQAxAGEAOQAzADMA
NgAyADAAZABjAGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADgAMAA3ADUALgAxADMAMgAwADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgAMAA3ADUALgAxADMAMgAwADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAOD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A4AC76F0-A21E-4061-BE71-3C33E4FA44BB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{722372CA-D7EC-4ADA-AA47-64BE46B58299}"
                  SQLTask:SqlStatementSource="EXEC [dbo].[SP_InsertMissingFileErrorLog] ?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::SourceSystem"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::SourceName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0B983406-1BF2-4C6D-88AF-58574A14C669}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Date And Time Data Format"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{722372CA-D7EC-4ADA-AA47-64BE46B58299}"
                  SQLTask:SqlStatementSource="EXEC [dbo].[SP_UpdateDateAndTimeDataFormat] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{22A7A788-0B59-4E06-A544-A872F66DB9CB}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{CACE558D-A464-4805-8CA8-B3A95F89BCB7}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::FileExistFlag] == 1"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{92EEA07F-6342-478C-9685-CD8E1833D2E9}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::FileExistFlag] == 0"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{4594C4B0-E1AD-48F1-93F2-509F6F22FD7D}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{A213A837-FFC8-4EDA-B345-5F436E846193}"
              DTS:ObjectName="{A213A837-FFC8-4EDA-B345-5F436E846193}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::SourceSystem" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{575137A9-AAB3-4F1A-B498-AD24DDD9198D}"
              DTS:ObjectName="{575137A9-AAB3-4F1A-B498-AD24DDD9198D}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::SourceFolder" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{97C311C7-2879-41A3-B154-6FF05A5EEBEE}"
              DTS:ObjectName="{97C311C7-2879-41A3-B154-6FF05A5EEBEE}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::ArchivedFolder" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{00131F0F-257D-4E3C-A247-2FD88DDD0875}"
              DTS:ObjectName="{00131F0F-257D-4E3C-A247-2FD88DDD0875}"
              DTS:ValueIndex="3"
              DTS:VariableName="User::SourceName" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{93E495F2-F8B9-41B1-9F92-9C79765274FF}"
              DTS:ObjectName="{93E495F2-F8B9-41B1-9F92-9C79765274FF}"
              DTS:ValueIndex="4"
              DTS:VariableName="User::SourceType" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{3A3E9338-54D4-4771-9349-72396648ACB7}"
              DTS:ObjectName="{3A3E9338-54D4-4771-9349-72396648ACB7}"
              DTS:ValueIndex="5"
              DTS:VariableName="User::TargetTable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{1C4B6FFD-C2F5-431A-B378-E9382384A1A5}"
              DTS:ObjectName="{1C4B6FFD-C2F5-431A-B378-E9382384A1A5}"
              DTS:ValueIndex="6"
              DTS:VariableName="User::SheetName" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{6870658F-237A-4E40-BB2D-D52717F7372E}"
              DTS:ObjectName="{6870658F-237A-4E40-BB2D-D52717F7372E}"
              DTS:ValueIndex="7"
              DTS:VariableName="User::ArchivedTable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{85B18BF8-EC6D-4304-97FD-41164458B01D}"
              DTS:ObjectName="{85B18BF8-EC6D-4304-97FD-41164458B01D}"
              DTS:ValueIndex="8"
              DTS:VariableName="User::RetentionCopies" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Get Config Details"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9936DA31-5A4E-4192-927F-CC8A3D143184}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Config Details"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{722372CA-D7EC-4ADA-AA47-64BE46B58299}"
              SQLTask:SqlStatementSource="EXEC [dbo].[SP_GetExcelConfigDetail] ?"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::TheResultSet" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::Frequency"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9298064B-BB1E-4A9B-B63D-D7AC88918051}"
          DTS:From="Package\Sequence Container\Get Config Details"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Sequence Container\Foreach Loop Container\Check File Exist"
          TopLeft="193.888888888889,8.83333333333331" />
        <NodeLayout
          Size="198,42"
          Id="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
          TopLeft="29.0000000000001,209.5" />
        <NodeLayout
          Size="209,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
          TopLeft="23.5000000000001,105.5" />
        <NodeLayout
          Size="292,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
          TopLeft="275,107.5" />
        <NodeLayout
          Size="248,42"
          Id="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format"
          TopLeft="5.71428571428572,297.142857142857" />
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="128.857142857143,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.6428571428572"
              Start="0,0"
              End="0,38.1428571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.1428571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="245.888888888889,50.8333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.888888888889,54.6666666666667"
              Start="0,0"
              End="-117.888888888889,47.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2083333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.2083333333333"
                    Point2="0,22.2083333333333"
                    Point3="-4,22.2083333333333" />
                  <mssgle:LineSegment
                    End="-113.888888888889,22.2083333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-113.888888888889,22.2083333333333"
                    Point2="-117.888888888889,22.2083333333333"
                    Point3="-117.888888888889,26.2083333333333" />
                  <mssgle:LineSegment
                    End="-117.888888888889,47.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-66.9444444444445,27.2083333333333,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="293.888888888889,50.8333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="127.111111111111,56.6666666666667"
              Start="0,0"
              End="127.111111111111,49.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0208333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.0208333333333"
                    Point2="0,23.0208333333333"
                    Point3="4,23.0208333333333" />
                  <mssgle:LineSegment
                    End="123.111111111111,23.0208333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="123.111111111111,23.0208333333333"
                    Point2="127.111111111111,23.0208333333333"
                    Point3="127.111111111111,27.0208333333333" />
                  <mssgle:LineSegment
                    End="127.111111111111,49.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="55.5555555555555,28.0208333333333,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="128,147.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="572,395"
          Size="572,438"
          Id="Package\Sequence Container\Foreach Loop Container"
          TopLeft="5.50000000000006,107.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Sequence Container\Get Config Details"
          TopLeft="211,5.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="292,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="583,624"
          Size="583,667"
          Id="Package\Sequence Container"
          TopLeft="5.50000000000006,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>