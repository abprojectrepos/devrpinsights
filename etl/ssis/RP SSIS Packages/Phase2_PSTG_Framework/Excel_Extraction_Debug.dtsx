<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/5/2020 1:34:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NCS-261219MZ02"
  DTS:CreatorName="NCS\P1327973"
  DTS:DTSID="{143579A5-CB7A-4EED-8CBE-FD667EBA773A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1033"
  DTS:ObjectName="Excel_Extraction_Debug"
  DTS:PackageType="5"
  DTS:VersionBuild="540"
  DTS:VersionGUID="{BEAEBD0C-B89F-483F-B814-917DB0A140DC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO_RPDW]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{0BBE6F5C-D6D7-474F-A2D2-D5CACE259C27}"
      DTS:ObjectName="ADO_RPDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT;Application Name=SSIS-Excel_Extraction-{0BBE6F5C-D6D7-474F-A2D2-D5CACE259C27}RP-ETL-DW-UAT.RPDW_UAT1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACoVSUJ+vwHiJIEW8xA9AYY3Cj2d+JyPDi9RfjjAyvP3AAAAAAOgAAAAAIAACAAAAAskJ3TKcgfi0yDqrVUZi6JS+OFDbt9xh44rVdMOfXRezAAAADy2JVVRwYO/fCehSygI/idz3sfhSg/gRbOr5fhMRam0Go5rOrYyHuT9lnR66iD/ENAAAAAv5YgD54tRmAdz0J6DtX0PPOrzqkBq0l8BALHkzVlSKdg4rZ3USezTEBvcWZ+Gft8NE4ErDducASj1f/W2/b3FA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ADO_RPDW_PSTG]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{8EE73D23-D158-4208-9173-43C8DBEA994B}"
      DTS:ObjectName="ADO_RPDW_PSTG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT_PSTG;Application Name=SSIS-Excel_Extraction-{8EE73D23-D158-4208-9173-43C8DBEA994B}RP-ETL-DW-UAT.RPDW_PSTG1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAUisxTC/AbmNYBte62Ub3KJnEy8/ovH0c/BCnyIAAchgAAAAAOgAAAAAIAACAAAAAAB3AsNzRQcWRmpTBkoMJJN6jGxECi2vdYG41hNiRJiDAAAADyJUE6lPx0IW/zum4QFbGbOODhbzHWXd/ue62Nj6rWmZulSbk8whhD6qA5BAm09FxAAAAALC6mhRHbhrd/I+feGUuGSf3s507MTj3GvuBiQnthIEG3QtKp2jK1yr54lfYa4XSUK6YgKInuN20L+wrWpcBPEw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{07E84E2C-82CB-48AD-A2F5-A9E8A9AFEDDC}"
      DTS:ObjectName="RPDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACMRHO8DEqDoeTRkaFT0K6JRngdTmFBB+j+GH0JJgd8/QAAAAAOgAAAAAIAACAAAABFHbJKgHHmUsvlR912EeVHj+Yat3zBqO/iybOHScroNjAAAACWnYYZ5Je5i5Xq6WINqj3b7DabZi0GZ9KQw7iLAoTTsRPcFZ71TY4GmnmWlzr7TMVAAAAAiLh9eM0jsrWWbVwkdTE7BEi3FM75+X6UPud79uWgX5UZ1TxBgu1e5o6LFiwITORqDqCV8tn3//Git1n5ItjO0g</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RPDW_PSTG]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{81899BFF-2BAA-4620-9944-518B3755158E}"
      DTS:ObjectName="RPDW_PSTG">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=abeamrpdev.7006065fdbb7.database.windows.net;User ID=dbadmin;Initial Catalog=RPDW_UAT_PSTG;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAiAXqJL5xwkap+hp6D6sPxwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACp0XUf8h3njQAlUs1+j78NmKNAwiJdl3etGCy0Zg9xHwAAAAAOgAAAAAIAACAAAAArkhMhIh/80inM9mTe5WDM4RKM1MVYZDAMsy+uTwluMDAAAABgkWv5hd7Y1G6OJC346J3RRWo4jhQxGiPBPTRPGmHclzo2zgGOdOk/g43HOQwJkg5AAAAAYYU/q9SSXKuWz5FZsqbmaZx1j8nOEyeE8asjq1oJ4riIr5y15PeXZ8N3fPs4CMMwoPfmMyNGY17FYtnp2TczEA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{76EFF3D8-717E-43A7-81F3-B35F90EFF5F9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivedFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5EEDD332-3396-4209-8FE3-712785A8B3C1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivedTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1412AB57-EC17-47F9-9951-3AC989AA69B3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileExistFlag">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF8605CE-C488-4CBB-866C-6C4B35DC942C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Frequency">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB779AF4-04A1-4A85-8E1F-659194317793}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="JobId">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8307EAE6-848B-455B-84CB-026A4D16E141}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RetentionCopies">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF5A7FCD-9A59-47C2-A915-6BA9355234E6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1140A042-AACA-4E05-8E56-9F5AC1AFA557}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38F2E7BD-2837-4CE2-8F7E-FA201AC1C167}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34565432-CD2C-4D5C-AC23-C2A37F89B975}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceSystem">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3762BA86-9C0F-4002-A20E-21672ECF2D71}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceType">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5605656-6C34-4C5B-A2CE-75673587F35F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{43F7C553-94CE-4B87-8DFB-48D8989204B4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TheResultSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{16531354-5CD9-4333-B175-8C3E037E408F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{F56AAD09-ABB8-4113-B3DB-77CEF56939FA}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{62E00E85-7AB5-4C25-A8B9-F254A37EF04F}"
            DTS:ObjectName="{62E00E85-7AB5-4C25-A8B9-F254A37EF04F}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::TheResultSet" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{B9DB301B-BB74-4D88-A1AB-DC5BC67C4000}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check File Exist"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f57f37ada7fc4e3893538ceb9b0757a2"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::SourceFolder,User::SourceName,User::SourceType"
                  ReadWriteVariables="User::FileExistFlag">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Settings.get_Default():ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Sett" +
    "ings")]

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName + "_20*" + FileExtension);

            if (fileEntries.Length > 0)
            {
                Dts.Variables["User::FileExistFlag"].Value = 1;
            }
            else
            {
                Dts.Variables["User::FileExistFlag"].Value = 0;
            }
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f57f37ada7fc4e3893538ceb9b0757a2.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D52724EF-9F3B-45F0-8361-1E2337664193}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f57f37ada7fc4e3893538ceb9b0757a2</RootNamespace>
    <AssemblyName>ST_f57f37ada7fc4e3893538ceb9b0757a2</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f57f37ada7fc4e3893538ceb9b0757a2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f57f37ada7fc4e3893538ceb9b0757a2</msb:DisplayName>
    <msb:ProjectId>{8C4FF8E8-EFFB-4D93-98F8-54483B0F87BC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f57f37ada7fc4e3893538ceb9b0757a2.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f57f37ada7fc4e3893538ceb9b0757a2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f57f37ada7fc4e3893538ceb9b0757a2")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f57f37ada7fc4e3893538ceb9b0757a2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f57f37ada7fc4e3893538ceb9b0757a2.dll">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
awB3ABsAAwABAAQAAwAAAC8EqAAAAPgArQAAAGEFsgACAAQAAwACAAUABQABAAYABQACAAcABwAE
gAAAAQAAAEYdn1sAAAAAAAAHAAAABAAAAAAAAAAAAAAAYABlAAAAAAAOAAAAAAAAAAAAAABpAB8D
AAAAAAQAAAAAAAAAAAAAAGAAwAMAAAAADgAAAAAAAAAAAAAAaQA+AAAAAAAAAAAAAQAAAJAEAAAF
AAIAAAAASW50MzIAU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4Y2ViOWIwNzU3YTIAPE1vZHVsZT4A
U3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUX2Y1N2YzN2FkYTdmYzRlMzg5MzUzOGNlYjliMDc1N2EyLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4
Y2ViOWIwNzU3YTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2Y1N2YzN2FkYTdmYzRlMzg5MzUzOGNlYjliMDc1N2EyLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25j
YXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQBEaXJlY3Rv
cnkAAAAlVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBvAGwAZABlAHIAACFVAHMAZQByADoAOgBT
AG8AdQByAGMAZQBUAHkAcABlAAAhVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUATgBhAG0AZQAACV8A
MgAwACoAACdVAHMAZQByADoAOgBGAGkAbABlAEUAeABpAHMAdABGAGwAYQBnAABxUwBUAF8AZgA1
ADcAZgAzADcAYQBkAGEANwBmAGMANABlADMAOAA5ADMANQAzADgAYwBlAGIAOQBiADAANwA1ADcA
YQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAATSznXvUDU+D
BsXK+uxoDQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQHAg4OBCAAEmEEIAASZQUgARJpHAMg
ABwDIAAOBgADDg4ODgYAAh0ODg4EIAEBHAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQ
AwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfZjU3ZjM3YWRhN2ZjNGUzODkzNTM4Y2ViOWIwNzU3YTIAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA2C4A
AAAAAAAAAAAA8i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOQuAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCfW0YdAAABAJ9bRh0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMAZQBi
ADkAYgAwADcANQA3AGEAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADQAOQA0AC4AMgAzADQANQA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMAZQBiADkA
YgAwADcANQA3AGEAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgA1ADcAZgAzADcAYQBkAGEANwBmAGMANABlADMAOAA5ADMANQAzADgA
YwBlAGIAOQBiADAANwA1ADcAYQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYANQA3AGYAMwA3AGEAZABhADcAZgBjADQAZQAzADgAOQAzADUAMwA4AGMA
ZQBiADkAYgAwADcANQA3AGEAMgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwA0ADkANAAuADIAMwA0ADUANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA0ADkANAAuADIAMwA0ADUANQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAEPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{1AC1D619-AC6D-4FF8-B222-C07072711F57}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Clear Archived Folder File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c4c51180c4c749acb4757b3377083aad"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::RetentionCopies,User::SourceName,User::SourceType">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9bf73ca80c664246846c47a50908d5f6")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c4c51180c4c749acb4757b3377083aad.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C1FEA3CB-3B98-4F1D-B25F-E8CBD53AACF8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9bf73ca80c664246846c47a50908d5f6</RootNamespace>
    <AssemblyName>ST_c4c51180c4c749acb4757b3377083aad</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_9bf73ca80c664246846c47a50908d5f6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            //Declare Variables

            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            int RetentionCopies = (int) Dts.Variables["User::RetentionCopies"].Value;

            
            // Get total number of files in archived folder
            int fileCount = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension, SearchOption.TopDirectoryOnly).Length;

            if (fileCount > RetentionCopies)
            {
                while (fileCount > RetentionCopies)
                {
                    try
                    {
                        string[] fileEntries = Directory.GetFiles(ArchiveFolder, SourceFileName + "_20*" + FileExtension);
                        if (Path.GetFileName(fileEntries.FirstOrDefault()) != null)
                            File.Delete(ArchiveFolder + Path.GetFileName(fileEntries.FirstOrDefault()));
                    }
                    catch (Exception e)
                    {
                        //MessageBox.Show(e.Message.ToString());
                    }

                    fileCount--;

                }

            }
                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c4c51180c4c749acb4757b3377083aad</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c4c51180c4c749acb4757b3377083aad</msb:DisplayName>
    <msb:ProjectId>{2FB84029-BECF-4850-893F-F3D2F9E1124A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c4c51180c4c749acb4757b3377083aad.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Settings.get_Default():ST_9bf73ca80c664246846c47a50908d5f6.Properties.Sett" +
    "ings")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9bf73ca80c664246846c47a50908d5f6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9bf73ca80c664246846c47a50908d5f6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c4c51180c4c749acb4757b3377083aad.dll">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
BgCRANkEBgAhAfEAdQAhASEGfgCZANkEhAC5ANkEBgAIABQAngAIABgAowApAHMACwEuAAsA4wAu
ABMA7AAuABsACwEuACMAFAEuACsAPQEuADMAPQEuADsAPQEuAEMAFAEuAEsAQwEuAFMAPQEuAFsA
WgFDAGMAowBJAHMACwFhAHsAowBjAGsAowAbAAMAAQAEAAMAAADJBNQAAABtAdkAAAAKBt4AAgAE
AAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAAFHTcCAAAAAAAAlwAAAAQAAAAAAAAAAAAAAIwA
cwAAAAAADgAAAAAAAAAAAAAAlQCWAwAAAAAEAAAAAAAAAAAAAACMADcEAAAAAA4AAAAAAAAAAAAA
AJUATAAAAAAABAAAAAAAAAAAAAAAjAA5AQAAAAAAAAAAAQAAACoFAAAFAAIAMQBhAAAAAElFbnVt
ZXJhYmxlYDEASW50MzIAU1RfOWJmNzNjYTgwYzY2NDI0Njg0NmM0N2E1MDkwOGQ1ZjYAPE1vZHVs
ZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFNUX2M0YzUxMTgwYzRjNzQ5YWNiNDc1N2Iz
Mzc3MDgzYWFkAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAR2V0RmlsZU5hbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
X2M0YzUxMTgwYzRjNzQ5YWNiNDc1N2IzMzc3MDgzYWFkLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNlYXJjaE9wdGlvbgBFeGNlcHRpb24AQ3VsdHVy
ZUluZm8AU3lzdGVtLkxpbnEAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF85YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOWJmNzNjYTgwYzY2NDI0Njg0NmM0N2E1
MDkwOGQ1ZjYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRpbmdzAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQARmlyc3RP
ckRlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQAAIVUAcwBlAHIA
OgA6AFMAbwB1AHIAYwBlAFQAeQBwAGUAACFVAHMAZQByADoAOgBTAG8AdQByAGMAZQBOAGEAbQBl
AAApVQBzAGUAcgA6ADoAQQByAGMAaABpAHYAZQBkAEYAbwBsAGQAZQByAAArVQBzAGUAcgA6ADoA
UgBlAHQAZQBuAHQAaQBvAG4AQwBvAHAAaQBlAHMAAAlfADIAMAAqAABxUwBUAF8AOQBiAGYANwAz
AGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUAMAA5ADAAOABkADUAZgA2AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAv+2mNWa3xkm/8moL2xIr
yAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQkHBg4ODggIHQ4EIAASZQQgABJpBSABEm0cAyAA
HAMgAA4GAAMODg4OCAADHQ4ODhF9BgACHQ4ODgwQAQEeABUSgIUBHgADCgEOBAABDg4FAAIODg4E
AAEBDggAARKAkRGAlQUgABKAmQcgAgEOEoCZCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
Ek0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF85
YmY3M2NhODBjNjY0MjQ2ODQ2YzQ3YTUwOTA4ZDVmNgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABUMAAAAAAAAAAAAABuMAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYDAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAADgQAAAAAAAAAAAAADgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADcCBR0AAAEANwIFHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBG4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEoDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AOQBiAGYANwAzAGMAYQA4ADAAYwA2ADYANAAyADQANgA4ADQANgBjADQANwBhADUA
MAA5ADAAOABkADUAZgA2AAAAOgANAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANAAyADkALgA1ADYANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBjADQAYwA1ADEAMQA4ADAAYwA0AGMANwA0ADkAYQBjAGIANAA3ADUANwBiADMAMwA3ADcAMAA4
ADMAYQBhAGQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGMANABjADUAMQAxADgAMABjADQAYwA3ADQAOQBhAGMAYgA0ADcANQA3AGIAMwAz
ADcANwAwADgAMwBhAGEAZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA5AGIAZgA3ADMAYwBhADgAMABjADYANgA0ADIANAA2ADgANAA2AGMANAA3AGEANQAw
ADkAMAA4AGQANQBmADYAAAA+AA0AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANAAyADkALgA1ADYANwAAAAAAQgANAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwA0ADIAOQAuADUANgA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:DelayValidation="True"
              DTS:Description="Script Task"
              DTS:DTSID="{CD7AA3FC-F260-4BE7-9DBE-244F67549AF9}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert Data Into PreStaging"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f62f2457363645f597f519c0cadfe06e"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::ArchivedFolder,User::ArchivedTable,User::JobId,User::SheetName,User::SourceFolder,User::SourceName,User::SourceSystem,User::SourceType,User::TargetTable">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Settings.get_Default():ST_8e52562da3bf4483942ea1a933620dca.Properties.Sett" +
    "ings")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.IO;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8e52562da3bf4483942ea1a933620dca
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            ////SQL Connection
            //SqlConnection myADONETConnection = new SqlConnection();
            //myADONETConnection = (SqlConnection)
            //(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //PSTG SQL Connection
            SqlConnection PSTG_Connection = new SqlConnection();
            PSTG_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW_PSTG"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //DW SQL Connection
            SqlConnection DW_Connection = new SqlConnection();
            DW_Connection = (SqlConnection)
            (Dts.Connections["ADO_RPDW"].AcquireConnection(Dts.Transaction) as SqlConnection);

            //Declare Variables
            string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
            string FileExtension = Dts.Variables["User::SourceType"].Value.ToString();
            string TableName = Dts.Variables["User::TargetTable"].Value.ToString();
            string ArchiveFolder = Dts.Variables["User::ArchivedFolder"].Value.ToString();
            string ArchiveTable = Dts.Variables["User::ArchivedTable"].Value.ToString();
            string SourceFileName = Dts.Variables["User::SourceName"].Value.ToString();
            string SourceSystem = Dts.Variables["User::SourceSystem"].Value.ToString();
            string FileSheetName = Dts.Variables["User::SheetName"].Value.ToString();
            string JobId = Dts.Variables["User::JobId"].Value.ToString();

            //Truncate PreStaging table
            string truncateQuery = "TRUNCATE TABLE " + TableName ;
            SqlCommand truncateCommand = new SqlCommand(truncateQuery, PSTG_Connection);
            truncateCommand.ExecuteNonQuery();

            //Reading file names one by one
            string SourceDirectory = SourceFolderPath;
            string[] fileEntries = Directory.GetFiles(SourceDirectory, SourceFileName + "_20*" + FileExtension);
            foreach (string fileName in fileEntries)
            {
                try
                {
                    //Create Excel Connection
                    string ConStr;
                    string HDR;
                    HDR = "YES";
                    ConStr = "Provider=Microsoft.ACE.OLEDB.16.0;Data Source="
                        + fileName + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + ";IMEX=0\"";
                    //OleDbConnection cnn = new OleDbConnection(ConStr);

                    //Get data from Excel Sheet to DataTable
                    OleDbConnection Conn = new OleDbConnection(ConStr);
                    Conn.Open();
                    OleDbCommand oconn = new OleDbCommand("select * from [" + FileSheetName + "$]", Conn);
                    OleDbDataAdapter adp = new OleDbDataAdapter(oconn);
                    DataTable dt = new DataTable();
                    adp.Fill(dt);
                    Conn.Close();
             
                    //Load Data from DataTable to SQL Server Table.
                    using (SqlBulkCopy BC = new SqlBulkCopy(PSTG_Connection))
                    {
                        BC.DestinationTableName = TableName;
                        //// Use to match excel header name
                        //foreach (var column in dt.Columns)
                        //BC.ColumnMappings.Add(column.ToString(), column.ToString());
                        BC.WriteToServer(dt);
                    }

                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    // Update FileName and UploadedDate
                    string updateQuery = "UPDATE " + TableName + " SET Source_Filename = '" + Path.GetFileName(fileName) + "', CREATED_ON = '" + getdate + "', MODIFIED_ON = '" + getdate + "' WHERE Source_Filename IS NULL AND CREATED_ON IS NULL AND MODIFIED_ON IS NULL;";
                    SqlCommand updateCommand = new SqlCommand(updateQuery, PSTG_Connection);
                    updateCommand.ExecuteNonQuery();

                    // Move Pre-Staging data into Archived Table
                    string ArchiveQuery = "INSERT INTO " + ArchiveTable + " SELECT * FROM " + TableName + " WITH(NOLOCK) WHERE Source_Filename = '" + Path.GetFileName(fileName) + "';";
                    SqlCommand archiveCommand = new SqlCommand(ArchiveQuery, PSTG_Connection);
                    archiveCommand.CommandTimeout = 0;
                    archiveCommand.ExecuteNonQuery();

                    // Insert ETL_JOB_STATUS
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Success', '', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();


                    if (File.Exists(ArchiveFolder + Path.GetFileName(fileName)))
                    {
                        File.Delete(ArchiveFolder + Path.GetFileName(fileName));
                    }
                    File.Move(fileName, ArchiveFolder + Path.GetFileName(fileName));
                    Dts.TaskResult = (int)ScriptResults.Success;

                }
                catch (Exception exception)
                {

                    string getdate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                    // Insert ETL_JOB_STATUS
                    string ErrorMessage = exception.Message.ToString().Replace("'", "\"");
                    string JobStatusquery = "Insert into [dbo].[ETL_JOB_STATUS]";
                    JobStatusquery += " VALUES('" + SourceSystem + " - " + SourceFileName + "', 'PSTG', '" + Path.GetFileName(fileName) + "', '" + TableName + "' ,'" + getdate + "', 'Fail', '" + ErrorMessage + "', '" + getdate + "');";

                    SqlCommand JobStatusCommand = new SqlCommand(JobStatusquery, DW_Connection);
                    JobStatusCommand.ExecuteNonQuery();

                    // Get Max Job Status ID
                    int JOB_STATUS_ID;
                    string GetJobStatusId = "SELECT MAX(JOB_STATUS_ID) FROM [dbo].[ETL_JOB_STATUS] WITH(NOLOCK) WHERE TARGET_TABLENAME = '" + TableName + "';";
                    SqlCommand JobStatusIdCommand = new SqlCommand(GetJobStatusId, DW_Connection);
                    JOB_STATUS_ID = Convert.ToInt32(JobStatusIdCommand.ExecuteScalar());

                    // Insert ETL_ERROR_LOG
                    string query = "Insert into [dbo].[ETL_ERROR_LOG]";
                    query += " VALUES(" + JOB_STATUS_ID + ", '" + ErrorMessage + "', '" + getdate + "');";

                    SqlCommand myCommand1 = new SqlCommand(query, DW_Connection);
                    myCommand1.ExecuteNonQuery();

                    //Delete data due to insert halfway file got issue.
                    string query2 = "DELETE FROM " + TableName + " WHERE Source_Filename = '" + Path.GetFileName(fileName) + "'";
                    SqlCommand myCommand2 = new SqlCommand(query2, PSTG_Connection);
                    myCommand2.ExecuteNonQuery();

                }

            }


            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8e52562da3bf4483942ea1a933620dca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8e52562da3bf4483942ea1a933620dca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_f62f2457363645f597f519c0cadfe06e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_f62f2457363645f597f519c0cadfe06e</msb:DisplayName>
    <msb:ProjectId>{23723EAD-C5AB-4AA1-A454-54CEAEBF7784}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f62f2457363645f597f519c0cadfe06e.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="5d0dca44b8334da18f2ba7d2f243c8a9">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>103</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8e52562da3bf4483942ea1a933620dca")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f62f2457363645f597f519c0cadfe06e.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6ECCE1A-550E-48F9-B34C-8B27EDC84A8D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8e52562da3bf4483942ea1a933620dca</RootNamespace>
    <AssemblyName>ST_f62f2457363645f597f519c0cadfe06e</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f62f2457363645f597f519c0cadfe06e.dll">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
CgdzGwAACm81AAAKKDYAAAoTFnINBgBwExcejRcAAAElFhEXoiUXclEGAHCiJRgRFowvAAABoiUZ
cmMGAHCiJRoRFKIlG3LqBABwoiUcEROiJR1yJgUAcKIoNwAAChMXERcHcxsAAApvHAAACiYbjSMA
AAElFnJrBgBwoiUXCaIlGHKFBgBwoiUZEQsoLQAACqIlGnIuBQBwoigfAAAKBnMbAAAKbxwAAAom
3gARChdYEwoRChEJjmk/N/z//wIoEQAAChZvMgAACioAQTQAAAIAAAA9AgAAEwAAAFACAAAMAAAA
AAAAAAAAAADAAQAALwIAAO8DAACCAQAAFAAAAR4CKDgAAAoqHgIoOQAACiqufgEAAAQtHnK7BgBw
0AMAAAIoOgAACm87AAAKczwAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAig9
AAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAHAUA
ACN+AACIBQAAcAcAACNTdHJpbmdzAAAAAPgMAAAwBwAAI1VTACgUAAAQAAAAI0dVSUQAAAA4FAAA
DAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAADIAAAAFAAAABgAAAAkAAAAB
AAAAPQAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAF0EAQAAAAAA
BgADA9MFBgCSA9MFBgBPAsAFDwBHBgAABgB8AvUEBgDmAvUEBgDHAvUEBgB5A/UEBgAjA/UEBgA8
A/UEBgCTAvUEBgCuAsUDCgBXAwwECgC5AQwEDgApBQMHDgAHBXMADgDuAGcADgBJBwMHBgBbAZME
BgA3BZMEBgCaBJMEBgAyAsAFBgDhBpMEBgByBfMFBgBUBdAEEgD7AUcEEgBjAkcEEgDVAbsEBgAX
AtMFCgA1BAwEFgCpBmQBFgCCBWQBFgCJBmQBFgD4AGQBBgDhA5MEDgCbAAMHDgCRAEEFBgBlBxIA
DgAKBUEFDgCOAHMADgCUBXMADgCXBUEFBgABAZMEBgDoAxIABgAxARIABgAZB5MEBgADAJMEBgCE
AZMEBgANAZMEBgBAB/UEAAAAAAkAAAAAAAEAAQABABAAsARDADkAAQABAAAAEAD6BVYGXQABAAMA
AAEQAJwGVgZxAAMABwADAQAAxQYAAFUABAAKABEAnwQQAREAqQEUAREA0gAYAQYGOwAcAVaAtQYf
AVaAiQEfAVAgAAAAAIYAtgQGAAEAICYAAAAAhhizBQYAAQAoJgAAAACDGLMFBgABADAmAAAAAJMI
bgUjAQEAXCYAAAAAkwiRASgBAQBjJgAAAACTCJ0BLQEBAGsmAAAAAJYI6AYzAQIAciYAAAAAhhiz
BQYAAgB6JgAAAACRGLkFOAECAAAAAQC6AwkAswUBABEAswUGABkAswUKACkAswUQADEAswUQADkA
swUQAEEAswUQAEkAswUQAFEAswUQAFkAswUQAGEAswUQAGkAswUGALEAswUGANkAswUVAOkAswUG
AHkAswUGAHEAvQY9APEApQZCAPkAigRHAPEA5QROAAEBFwVSAPEAhQZXAAkBigRdABEBsANOALkA
3wNkABkB2gZoACEBswVuACkBVQd1ABkB2gZ5ADEBkwaAABkB2gaHAIEAswUQADkBqwQGAEEBswWN
AEkBswWUAIkAswUGAFEBhQSbADkB7QEGAJEAswWhAJEANgEQAJEApQWnAFkB8wEGAJkANAetAJkA
3wOyAGEBTwG3ACkBIQcBAGkB0wa8AGkBEALBAGkBwAPGAPEA9AYBAKEA4gBkABkBygDMACkBYAVO
AHEBAQDSABkB2gbXAHEAswUGALkAswUGAIEBHwHdAIEBPAfmAMEAswXsAOEAswUGAAgAFAAGAQgA
GAALASkAcwBzAS4ACwBLAS4AEwBUAS4AGwBzAS4AIwB8AS4AKwClAS4AMwClAS4AOwClAS4AQwB8
AS4ASwCrAS4AUwClAS4AWwDCAUMAYwALAUkAcwBzAWEAewALAWMAawALARsAAwABAAQAAwAAAHIF
PAEAALEBQQEAAOwGRgECAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAIsfQzUAAAAAAACm
AAAABAAAAAAAAAAAAAAA9ACFAAAAAAAOAAAAAAAAAAAAAAD9AO0DAAAAAAQAAAAAAAAAAAAAAPQA
ZwAAAAAABAAAAAAAAAAAAAAA9ACTBAAAAAAOAAAAAAAAAAAAAAD9ABwAAAAAAAAAAAABAAAABAYA
AAUAAgAAAAAAAFRvSW50MzIAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAFNUXzhlNTI1NjJkYTNiZjQ0ODM5NDJlYTFhOTMzNjIwZGNhAFN5
c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAG1zY29ybGliAE9sZURiQ29tbWFuZABTcWxDb21t
YW5kAFNUX2Y2MmYyNDU3MzYzNjQ1ZjU5N2Y1MTljMGNhZGZlMDZlAFJlcGxhY2UAZGVmYXVsdElu
c3RhbmNlAGdldF9NZXNzYWdlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAHNldF9EZXN0aW5hdGlvblRhYmxlTmFt
ZQBHZXRGaWxlTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5
cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bv
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUA
TW92ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2Y2MmYyNDU3MzYz
NjQ1ZjU5N2Y1MTljMGNhZGZlMDZlLmRsbABGaWxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AT2xlRGJDb25uZWN0aW9u
AEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNv
bW1vbgBDdWx0dXJlSW5mbwBFeGVjdXRlU2NhbGFyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVj
dGlvbk1hbmFnZXIAT2xlRGJEYXRhQWRhcHRlcgBXcml0ZVRvU2VydmVyAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNUXzhlNTI1NjJkYTNiZjQ0ODM5NDJlYTFhOTMzNjIwZGNhLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF84ZTUyNTYyZGEzYmY0NDgzOTQy
ZWExYTkzMzYyMGRjYS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MA
Z2V0X0Nvbm5lY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25j
YXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVu
dABDb252ZXJ0AHNldF9Db21tYW5kVGltZW91dABnZXRfTm93AGdldF9Bc3NlbWJseQBTcWxCdWxr
Q29weQBFeGVjdXRlTm9uUXVlcnkARGlyZWN0b3J5AAAAG0EARABPAF8AUgBQAEQAVwBfAFAAUwBU
AEcAABFBAEQATwBfAFIAUABEAFcAACVVAHMAZQByADoAOgBTAG8AdQByAGMAZQBGAG8AbABkAGUA
cgAAIVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAFQAeQBwAGUAACNVAHMAZQByADoAOgBUAGEAcgBn
AGUAdABUAGEAYgBsAGUAAClVAHMAZQByADoAOgBBAHIAYwBoAGkAdgBlAGQARgBvAGwAZABlAHIA
ACdVAHMAZQByADoAOgBBAHIAYwBoAGkAdgBlAGQAVABhAGIAbABlAAAhVQBzAGUAcgA6ADoAUwBv
AHUAcgBjAGUATgBhAG0AZQAAJVUAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAFMAeQBzAHQAZQBtAAAf
VQBzAGUAcgA6ADoAUwBoAGUAZQB0AE4AYQBtAGUAABdVAHMAZQByADoAOgBKAG8AYgBJAGQAAB9U
AFIAVQBOAEMAQQBUAEUAIABUAEEAQgBMAEUAIAAACV8AMgAwACoAAAdZAEUAUwAAXVAAcgBvAHYA
aQBkAGUAcgA9AE0AaQBjAHIAbwBzAG8AZgB0AC4AQQBDAEUALgBPAEwARQBEAEIALgAxADYALgAw
ADsARABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AAEs7AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAA
ZQByAHQAaQBlAHMAPQAiAEUAeABjAGUAbAAgADEAMgAuADAAOwBIAEQAUgA9AAAROwBJAE0ARQBY
AD0AMAAiAAAfcwBlAGwAZQBjAHQAIAAqACAAZgByAG8AbQAgAFsAAAUkAF0AAC95AHkAeQB5AC0A
TQBNAC0AZABkACAASABIADoAbQBtADoAcwBzAC4AZgBmAGYAAQ9VAFAARABBAFQARQAgAAAxIABT
AEUAVAAgAFMAbwB1AHIAYwBlAF8ARgBpAGwAZQBuAGEAbQBlACAAPQAgACcAASMnACwAIABDAFIA
RQBBAFQARQBEAF8ATwBOACAAPQAgACcAASUnACwAIABNAE8ARABJAEYASQBFAEQAXwBPAE4AIAA9
ACAAJwABgJ8nACAAVwBIAEUAUgBFACAAUwBvAHUAcgBjAGUAXwBGAGkAbABlAG4AYQBtAGUAIABJ
AFMAIABOAFUATABMACAAQQBOAEQAIABDAFIARQBBAFQARQBEAF8ATwBOACAASQBTACAATgBVAEwA
TAAgAEEATgBEACAATQBPAEQASQBGAEkARQBEAF8ATwBOACAASQBTACAATgBVAEwATAA7AAEZSQBO
AFMARQBSAFQAIABJAE4AVABPACAAAB8gAFMARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIAAATyAA
VwBJAFQASAAoAE4ATwBMAE8AQwBLACkAIABXAEgARQBSAEUAIABTAG8AdQByAGMAZQBfAEYAaQBs
AGUAbgBhAG0AZQAgAD0AIAAnAAEFJwA7AAFFSQBuAHMAZQByAHQAIABpAG4AdABvACAAWwBkAGIA
bwBdAC4AWwBFAFQATABfAEoATwBCAF8AUwBUAEEAVABVAFMAXQAAEyAAVgBBAEwAVQBFAFMAKAAn
AAEHIAAtACAAARknACwAIAAnAFAAUwBUAEcAJwAsACAAJwABCScALAAgACcAAQknACAALAAnAAEn
JwAsACAAJwBTAHUAYwBjAGUAcwBzACcALAAgACcAJwAsACAAJwABBycAKQA7AAEDJwABAyIAABkn
ACwAIAAnAEYAYQBpAGwAJwAsACAAJwABgLtTAEUATABFAEMAVAAgAE0AQQBYACgASgBPAEIAXwBT
AFQAQQBUAFUAUwBfAEkARAApACAARgBSAE8ATQAgAFsAZABiAG8AXQAuAFsARQBUAEwAXwBKAE8A
QgBfAFMAVABBAFQAVQBTAF0AIABXAEkAVABIACgATgBPAEwATwBDAEsAKQAgAFcASABFAFIARQAg
AFQAQQBSAEcARQBUAF8AVABBAEIATABFAE4AQQBNAEUAIAA9ACAAJwABQ0kAbgBzAGUAcgB0ACAA
aQBuAHQAbwAgAFsAZABiAG8AXQAuAFsARQBUAEwAXwBFAFIAUgBPAFIAXwBMAE8ARwBdAAARIABW
AEEATABVAEUAUwAoAAAHLAAgACcAARlEAEUATABFAFQARQAgAEYAUgBPAE0AIAAANSAAVwBIAEUA
UgBFACAAUwBvAHUAcgBjAGUAXwBGAGkAbABlAG4AYQBtAGUAIAA9ACAAJwABcVMAVABfADgAZQA1
ADIANQA2ADIAZABhADMAYgBmADQANAA4ADMAOQA0ADIAZQBhADEAYQA5ADMAMwA2ADIAMABkAGMA
YQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAns9tu+aoAUi7
/ifdQEOBmwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERaSEHGBI9Ej0ODg4ODg4OHQ4IDg4SQRJF
Dg4SSRFNDg4OCA4EIAASeQQgABJ9BiABEoCBHAMgABwEIAEcHAUgABKAhQYgARKAiRwDIAAOBQAC
Dg4OBiACAQ4SPQMgAAgGAAMODg4OBgACHQ4ODgUAAQ4dDgYgAgEOEkEGIAEBEoChBSABCBJFBSAB
ARI9BSABARJFBAAAEU0EIAEODgQAAQ4OBAABAg4EAAEBDgUAAgEODgUgAg4ODgQAAQgcBQABDh0c
CAABEoDBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSYQMG
EmUDBhIQAgYIAwYRFAQAABJhBAAAEmUFAAEBEmUEAAASEAMAAAEECAASYQQIABJlBAgAEhAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzhlNTI1
NjJkYTNiZjQ0ODM5NDJlYTFhOTMzNjIwZGNhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKw9AAAAAAAAAAAAAMY9AAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAC4PQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAEM1ix8AAAEAQzWLHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOABlADUAMgA1ADYAMgBkAGEAMwBiAGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAzADYA
MgAwAGQAYwBhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAMAA3
ADUALgAxADMANgAzADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZgA2ADIAZgAyADQANQA3ADMANgAzADYANAA1AGYANQA5ADcAZgA1ADEAOQBjADAAYwBhAGQAZgBl
ADAANgBlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBmADYAMgBmADIANAA1ADcAMwA2ADMANgA0ADUAZgA1ADkANwBmADUAMQA5AGMAMABj
AGEAZABmAGUAMAA2AGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AOABlADUAMgA1ADYAMgBkAGEAMwBiAGYANAA0ADgAMwA5ADQAMgBlAGEAMQBhADkAMwAz
ADYAMgAwAGQAYwBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA4ADAANwA1AC4AMQAzADYAMwA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA4ADAANwA1AC4AMQAzADYAMwA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANg9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                  <Breakpoint
                    Enabled="True"
                    File="ScriptMain.cs"
                    Line="103"
                    Column="13" />
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{B4EE05CD-3880-4CC9-8DFF-5A5815DDFFC4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{07E84E2C-82CB-48AD-A2F5-A9E8A9AFEDDC}"
                  SQLTask:SqlStatementSource="EXEC [dbo].[SP_InsertMissingFileErrorLog] ?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::SourceSystem"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::SourceName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7A449327-B222-4CDD-85E6-395282A6E476}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Date And Time Data Format"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{81899BFF-2BAA-4620-9944-518B3755158E}"
                  SQLTask:SqlStatementSource="EXEC [dbo].[SP_UpdateDateAndTimeDataFormat] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::TargetTable"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{2573F397-0F7D-4B1D-B5C2-D832FE90BBCD}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{DB53A9C4-0438-4A27-8A15-68B456D6E2B5}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::FileExistFlag] == 1"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{23F533D0-513D-4890-8128-CDE52AA3697A}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::FileExistFlag] == 0"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Check File Exist"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{F6FFDC3C-3976-46EC-9402-158A70F2AB4C}"
              DTS:From="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{DE2980E7-9331-458C-AB67-DD1F9B3149C4}"
              DTS:ObjectName="{DE2980E7-9331-458C-AB67-DD1F9B3149C4}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::SourceSystem" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{96F85A84-C161-471B-A931-607C3973AC5E}"
              DTS:ObjectName="{96F85A84-C161-471B-A931-607C3973AC5E}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::SourceFolder" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{D0752E42-DEBE-478C-A3D3-566B36E411CD}"
              DTS:ObjectName="{D0752E42-DEBE-478C-A3D3-566B36E411CD}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::ArchivedFolder" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{29A1DBD0-4BB2-4FEC-B461-EF3B09EAD8C7}"
              DTS:ObjectName="{29A1DBD0-4BB2-4FEC-B461-EF3B09EAD8C7}"
              DTS:ValueIndex="3"
              DTS:VariableName="User::SourceName" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{B8EF8313-A0A6-4159-9898-690A9201D4EA}"
              DTS:ObjectName="{B8EF8313-A0A6-4159-9898-690A9201D4EA}"
              DTS:ValueIndex="4"
              DTS:VariableName="User::SourceType" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{BE0F4648-0BED-4A37-9493-BE828E58E985}"
              DTS:ObjectName="{BE0F4648-0BED-4A37-9493-BE828E58E985}"
              DTS:ValueIndex="5"
              DTS:VariableName="User::TargetTable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{EA99EA69-3766-47E2-B0A7-D65D5CC8A85C}"
              DTS:ObjectName="{EA99EA69-3766-47E2-B0A7-D65D5CC8A85C}"
              DTS:ValueIndex="6"
              DTS:VariableName="User::SheetName" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{F988D02A-557D-4EDF-B20D-068C4E3F9417}"
              DTS:ObjectName="{F988D02A-557D-4EDF-B20D-068C4E3F9417}"
              DTS:ValueIndex="7"
              DTS:VariableName="User::ArchivedTable" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{3C2C2762-EF24-4271-BD87-944587797A08}"
              DTS:ObjectName="{3C2C2762-EF24-4271-BD87-944587797A08}"
              DTS:ValueIndex="8"
              DTS:VariableName="User::RetentionCopies" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Get Config Details"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C828915F-7DEA-44A5-A80C-3894DF977492}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Config Details"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{81899BFF-2BAA-4620-9944-518B3755158E}"
              SQLTask:SqlStatementSource="EXEC [dbo].[SP_GetExcelConfigDetail] ?"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::TheResultSet" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::Frequency"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8783DCAA-2E24-4CE7-9D26-B87F935E9B18}"
          DTS:From="Package\Sequence Container\Get Config Details"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Sequence Container\Foreach Loop Container\Check File Exist"
          TopLeft="193.888888888889,8.83333333333331" />
        <NodeLayout
          Size="198,42"
          Id="Package\Sequence Container\Foreach Loop Container\Clear Archived Folder File"
          TopLeft="29.0000000000001,209.5" />
        <NodeLayout
          Size="209,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert Data Into PreStaging"
          TopLeft="23.5000000000001,105.5" />
        <NodeLayout
          Size="292,42"
          Id="Package\Sequence Container\Foreach Loop Container\Insert ETL_JOB_STATUS &amp; ETL_ERROR_LOG"
          TopLeft="275,107.5" />
        <NodeLayout
          Size="248,42"
          Id="Package\Sequence Container\Foreach Loop Container\Update Date And Time Data Format"
          TopLeft="5.71428571428572,297.142857142857" />
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="128.857142857143,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.6428571428572"
              Start="0,0"
              End="0,38.1428571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.1428571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="245.888888888889,50.8333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117.888888888889,54.6666666666667"
              Start="0,0"
              End="-117.888888888889,47.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2083333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.2083333333333"
                    Point2="0,22.2083333333333"
                    Point3="-4,22.2083333333333" />
                  <mssgle:LineSegment
                    End="-113.888888888889,22.2083333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-113.888888888889,22.2083333333333"
                    Point2="-117.888888888889,22.2083333333333"
                    Point3="-117.888888888889,26.2083333333333" />
                  <mssgle:LineSegment
                    End="-117.888888888889,47.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-66.9444444444445,27.2083333333333,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="293.888888888889,50.8333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="127.111111111111,56.6666666666667"
              Start="0,0"
              End="127.111111111111,49.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0208333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.0208333333333"
                    Point2="0,23.0208333333333"
                    Point3="4,23.0208333333333" />
                  <mssgle:LineSegment
                    End="123.111111111111,23.0208333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="123.111111111111,23.0208333333333"
                    Point2="127.111111111111,23.0208333333333"
                    Point3="127.111111111111,27.0208333333333" />
                  <mssgle:LineSegment
                    End="127.111111111111,49.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="55.5555555555555,28.0208333333333,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="128,147.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="572,394"
          Size="572,437"
          Id="Package\Sequence Container\Foreach Loop Container"
          TopLeft="5.50000000000006,107.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Sequence Container\Get Config Details"
          TopLeft="210,5.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="291.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="583,624"
          Size="583,667"
          Id="Package\Sequence Container"
          TopLeft="5.50000000000006,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>